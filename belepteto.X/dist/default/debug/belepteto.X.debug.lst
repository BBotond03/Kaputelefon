

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Nov 29 06:32:18 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,space=0,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 12/10/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F648A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0004                     fsr             equ	4
    65     0004                     fsr0            equ	4
    66     0000                     indf            equ	0
    67     0000                     indf0           equ	0
    68     0002                     pc              equ	2
    69     0002                     pcl             equ	2
    70     000A                     pclath          equ	10
    71     0003                     status          equ	3
    72     0000                     INDF            equ	0	;# 
    73     0001                     TMR0            equ	1	;# 
    74     0002                     PCL             equ	2	;# 
    75     0003                     STATUS          equ	3	;# 
    76     0004                     FSR             equ	4	;# 
    77     0005                     PORTA           equ	5	;# 
    78     0006                     PORTB           equ	6	;# 
    79     000A                     PCLATH          equ	10	;# 
    80     000B                     INTCON          equ	11	;# 
    81     000C                     PIR1            equ	12	;# 
    82     000E                     TMR1            equ	14	;# 
    83     000E                     TMR1L           equ	14	;# 
    84     000F                     TMR1H           equ	15	;# 
    85     0010                     T1CON           equ	16	;# 
    86     0011                     TMR2            equ	17	;# 
    87     0012                     T2CON           equ	18	;# 
    88     0015                     CCPR1           equ	21	;# 
    89     0015                     CCPR1L          equ	21	;# 
    90     0016                     CCPR1H          equ	22	;# 
    91     0017                     CCP1CON         equ	23	;# 
    92     0018                     RCSTA           equ	24	;# 
    93     0019                     TXREG           equ	25	;# 
    94     001A                     RCREG           equ	26	;# 
    95     001F                     CMCON           equ	31	;# 
    96     0081                     OPTION_REG      equ	129	;# 
    97     0085                     TRISA           equ	133	;# 
    98     0086                     TRISB           equ	134	;# 
    99     008C                     PIE1            equ	140	;# 
   100     008E                     PCON            equ	142	;# 
   101     0092                     PR2             equ	146	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009A                     EEDATA          equ	154	;# 
   105     009B                     EEADR           equ	155	;# 
   106     009C                     EECON1          equ	156	;# 
   107     009D                     EECON2          equ	157	;# 
   108     009F                     VRCON           equ	159	;# 
   109     0000                     INDF            equ	0	;# 
   110     0001                     TMR0            equ	1	;# 
   111     0002                     PCL             equ	2	;# 
   112     0003                     STATUS          equ	3	;# 
   113     0004                     FSR             equ	4	;# 
   114     0005                     PORTA           equ	5	;# 
   115     0006                     PORTB           equ	6	;# 
   116     000A                     PCLATH          equ	10	;# 
   117     000B                     INTCON          equ	11	;# 
   118     000C                     PIR1            equ	12	;# 
   119     000E                     TMR1            equ	14	;# 
   120     000E                     TMR1L           equ	14	;# 
   121     000F                     TMR1H           equ	15	;# 
   122     0010                     T1CON           equ	16	;# 
   123     0011                     TMR2            equ	17	;# 
   124     0012                     T2CON           equ	18	;# 
   125     0015                     CCPR1           equ	21	;# 
   126     0015                     CCPR1L          equ	21	;# 
   127     0016                     CCPR1H          equ	22	;# 
   128     0017                     CCP1CON         equ	23	;# 
   129     0018                     RCSTA           equ	24	;# 
   130     0019                     TXREG           equ	25	;# 
   131     001A                     RCREG           equ	26	;# 
   132     001F                     CMCON           equ	31	;# 
   133     0081                     OPTION_REG      equ	129	;# 
   134     0085                     TRISA           equ	133	;# 
   135     0086                     TRISB           equ	134	;# 
   136     008C                     PIE1            equ	140	;# 
   137     008E                     PCON            equ	142	;# 
   138     0092                     PR2             equ	146	;# 
   139     0098                     TXSTA           equ	152	;# 
   140     0099                     SPBRG           equ	153	;# 
   141     009A                     EEDATA          equ	154	;# 
   142     009B                     EEADR           equ	155	;# 
   143     009C                     EECON1          equ	156	;# 
   144     009D                     EECON2          equ	157	;# 
   145     009F                     VRCON           equ	159	;# 
   146     000B                     _INTCONbits     set	11
   147     001F                     _CMCON          set	31
   148     0010                     _T1CONbits      set	16
   149     0005                     _PORTAbits      set	5
   150     000E                     _TMR1L          set	14
   151     000F                     _TMR1H          set	15
   152     000C                     _PIR1bits       set	12
   153     0006                     _PORTBbits      set	6
   154     0085                     _TRISAbits      set	133
   155     0086                     _TRISBbits      set	134
   156     008C                     _PIE1bits       set	140
   157                           
   158                           	psect	cinit
   159     0013                     start_initialization:	
   160                           ; #config settings
   161                           
   162     0013                     __initialization:
   163                           
   164                           ; Clear objects allocated to BANK0
   165     0013  1383               	bcf	3,7	;select IRP bank0
   166     0014  3044               	movlw	low __pbssBANK0
   167     0015  0084               	movwf	4
   168     0016  3058               	movlw	low (__pbssBANK0+20)
   169     0017  118A  2453  118A   	fcall	clear_ram0
   170                           
   171                           ; Clear objects allocated to BANK1
   172     001A  30A0               	movlw	low __pbssBANK1
   173     001B  0084               	movwf	4
   174     001C  30BC               	movlw	low (__pbssBANK1+28)
   175     001D  118A  2453  118A   	fcall	clear_ram0
   176     0020                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179     0020                     __end_of__initialization:
   180     0020  0183               	clrf	3
   181     0021  118A  2B9B         	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	bssBANK0
   184     0044                     __pbssBANK0:
   185     0044                     _open:
   186     0044                     	ds	2
   187     0046                     _output_index:
   188     0046                     	ds	2
   189     0048                     _sensor_index:
   190     0048                     	ds	2
   191     004A                     _input_pinpad:
   192     004A                     	ds	14
   193                           
   194                           	psect	bssBANK1
   195     00A0                     __pbssBANK1:
   196     00A0                     _USER_INPUT:
   197     00A0                     	ds	14
   198     00AE                     _output_pinpad:
   199     00AE                     	ds	14
   200                           
   201                           	psect	clrtext
   202     0453                     clear_ram0:	
   203                           ;	Called with FSR containing the base address, and
   204                           ;	W with the last address+1
   205                           
   206     0453  0064               	clrwdt	;clear the watchdog before getting into this loop
   207     0454                     clrloop0:
   208     0454  0180               	clrf	0	;clear RAM location pointed to by FSR
   209     0455  0A84               	incf	4,f	;increment pointer
   210     0456  0604               	xorwf	4,w	;XOR with final address
   211     0457  1903               	btfsc	3,2	;have we reached the end yet?
   212     0458  3400               	retlw	0	;all done for this memory range, return
   213     0459  0604               	xorwf	4,w	;XOR again to restore value
   214     045A  2C54               	goto	clrloop0	;do the next byte
   215                           
   216                           	psect	cstackBANK1
   217     00BC                     __pcstackBANK1:
   218     00BC                     ___awdiv@counter:
   219                           
   220                           ; 1 bytes @ 0x0
   221     00BC                     	ds	1
   222     00BD                     ___awdiv@sign:
   223                           
   224                           ; 1 bytes @ 0x1
   225     00BD                     	ds	1
   226     00BE                     ___awdiv@quotient:
   227                           
   228                           ; 2 bytes @ 0x2
   229     00BE                     	ds	2
   230     00C0                     ??_beep:
   231                           
   232                           ; 1 bytes @ 0x4
   233     00C0                     	ds	1
   234     00C1                     beep@total_cycles:
   235                           
   236                           ; 2 bytes @ 0x5
   237     00C1                     	ds	2
   238     00C3                     beep@i:
   239                           
   240                           ; 2 bytes @ 0x7
   241     00C3                     	ds	2
   242     00C5                     beep@half_period_us:
   243                           
   244                           ; 2 bytes @ 0x9
   245     00C5                     	ds	2
   246     00C7                     ??_main:
   247                           
   248                           ; 1 bytes @ 0xB
   249     00C7                     	ds	3
   250                           
   251                           	psect	cstackCOMMON
   252     0071                     __pcstackCOMMON:
   253     0071                     ?_isr:
   254     0071                     ?_setup_timer1:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0071                     ?_initialize_pins:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0071                     ?_main:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0071                     ?i1_delay_us:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0071                     ?___awmod:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0071                     ?i1___wmul:	
   270                           ; 2 bytes @ 0x0
   271                           
   272     0071                     ___awmod@divisor:	
   273                           ; 2 bytes @ 0x0
   274                           
   275     0071                     i1delay_us@time:	
   276                           ; 2 bytes @ 0x0
   277                           
   278     0071                     i1___wmul@multiplier:	
   279                           ; 2 bytes @ 0x0
   280                           
   281                           
   282                           ; 2 bytes @ 0x0
   283     0071                     	ds	2
   284     0073                     ___awmod@dividend:
   285     0073                     i1___wmul@multiplicand:	
   286                           ; 2 bytes @ 0x2
   287                           
   288     0073                     ??i1_delay_us:	
   289                           ; 2 bytes @ 0x2
   290                           
   291                           
   292                           ; 1 bytes @ 0x2
   293     0073                     	ds	1
   294     0074                     i1delay_us@i:
   295                           
   296                           ; 2 bytes @ 0x3
   297     0074                     	ds	1
   298     0075                     ___awmod@counter:
   299     0075                     i1___wmul@product:	
   300                           ; 1 bytes @ 0x4
   301                           
   302     0075                     ??___awmod:	
   303                           ; 2 bytes @ 0x4
   304                           
   305     0075                     ??i1___wmul:	
   306                           ; 1 bytes @ 0x4
   307                           
   308                           
   309                           ; 1 bytes @ 0x4
   310     0075                     	ds	1
   311     0076                     ___awmod@sign:
   312                           
   313                           ; 1 bytes @ 0x5
   314     0076                     	ds	1
   315     0077                     ?_cycleOutput:
   316     0077                     ?i1___awdiv:	
   317                           ; 1 bytes @ 0x6
   318                           
   319     0077                     cycleOutput@list:	
   320                           ; 2 bytes @ 0x6
   321                           
   322     0077                     i1___awdiv@divisor:	
   323                           ; 1 bytes @ 0x6
   324                           
   325                           
   326                           ; 2 bytes @ 0x6
   327     0077                     	ds	1
   328     0078                     cycleOutput@size:
   329                           
   330                           ; 2 bytes @ 0x7
   331     0078                     	ds	1
   332     0079                     i1___awdiv@dividend:
   333                           
   334                           ; 2 bytes @ 0x8
   335     0079                     	ds	1
   336     007A                     ??_cycleOutput:
   337                           
   338                           ; 1 bytes @ 0x9
   339     007A                     	ds	1
   340     007B                     ?i1_beep:
   341     007B                     i1beep@duration_ms:	
   342                           ; 1 bytes @ 0xA
   343                           
   344     007B                     ??i1___awdiv:	
   345                           ; 2 bytes @ 0xA
   346                           
   347                           
   348                           ; 1 bytes @ 0xA
   349     007B                     	ds	2
   350     007D                     ??i1_beep:
   351                           
   352                           ; 1 bytes @ 0xC
   353     007D                     	ds	1
   354                           
   355                           	psect	cstackBANK0
   356     0020                     __pcstackBANK0:
   357     0020                     i1___awdiv@counter:
   358     0020                     cycleOutput@nextIndex:	
   359                           ; 1 bytes @ 0x0
   360                           
   361                           
   362                           ; 2 bytes @ 0x0
   363     0020                     	ds	1
   364     0021                     i1___awdiv@sign:
   365                           
   366                           ; 1 bytes @ 0x1
   367     0021                     	ds	1
   368     0022                     cycleOutput@currentIndex:
   369     0022                     i1___awdiv@quotient:	
   370                           ; 2 bytes @ 0x2
   371                           
   372                           
   373                           ; 2 bytes @ 0x2
   374     0022                     	ds	2
   375     0024                     cycleOutput@i:
   376     0024                     i1beep@total_cycles:	
   377                           ; 2 bytes @ 0x4
   378                           
   379                           
   380                           ; 2 bytes @ 0x4
   381     0024                     	ds	2
   382     0026                     i1beep@i:
   383                           
   384                           ; 2 bytes @ 0x6
   385     0026                     	ds	2
   386     0028                     i1beep@half_period_us:
   387                           
   388                           ; 2 bytes @ 0x8
   389     0028                     	ds	2
   390     002A                     ?_decodeValue:
   391     002A                     decodeValue@code:	
   392                           ; 1 bytes @ 0xA
   393                           
   394                           
   395                           ; 1 bytes @ 0xA
   396     002A                     	ds	1
   397     002B                     ??_decodeValue:
   398                           
   399                           ; 1 bytes @ 0xB
   400     002B                     	ds	4
   401     002F                     decodeValue@i:
   402                           
   403                           ; 2 bytes @ 0xF
   404     002F                     	ds	2
   405     0031                     ??_isr:
   406                           
   407                           ; 1 bytes @ 0x11
   408     0031                     	ds	7
   409     0038                     ?_delay_us:
   410     0038                     ?___wmul:	
   411                           ; 1 bytes @ 0x18
   412                           
   413     0038                     delay_us@time:	
   414                           ; 2 bytes @ 0x18
   415                           
   416     0038                     ___wmul@multiplier:	
   417                           ; 2 bytes @ 0x18
   418                           
   419     0038                     ??_setup_timer1:	
   420                           ; 2 bytes @ 0x18
   421                           
   422     0038                     ??_initialize_pins:	
   423                           ; 1 bytes @ 0x18
   424                           
   425                           
   426                           ; 1 bytes @ 0x18
   427     0038                     	ds	1
   428     0039                     initialize_pins@i:
   429                           
   430                           ; 2 bytes @ 0x19
   431     0039                     	ds	1
   432     003A                     ___wmul@multiplicand:
   433     003A                     ??_delay_us:	
   434                           ; 2 bytes @ 0x1A
   435                           
   436                           
   437                           ; 1 bytes @ 0x1A
   438     003A                     	ds	1
   439     003B                     delay_us@i:
   440                           
   441                           ; 2 bytes @ 0x1B
   442     003B                     	ds	1
   443     003C                     ___wmul@product:
   444     003C                     ??___wmul:	
   445                           ; 2 bytes @ 0x1C
   446                           
   447                           
   448                           ; 1 bytes @ 0x1C
   449     003C                     	ds	2
   450     003E                     ?___awdiv:
   451     003E                     ___awdiv@divisor:	
   452                           ; 2 bytes @ 0x1E
   453                           
   454                           
   455                           ; 2 bytes @ 0x1E
   456     003E                     	ds	2
   457     0040                     ___awdiv@dividend:
   458                           
   459                           ; 2 bytes @ 0x20
   460     0040                     	ds	2
   461     0042                     ?_beep:
   462     0042                     beep@duration_ms:	
   463                           ; 1 bytes @ 0x22
   464                           
   465     0042                     ??___awdiv:	
   466                           ; 2 bytes @ 0x22
   467                           
   468                           
   469                           ; 1 bytes @ 0x22
   470     0042                     	ds	2
   471                           
   472                           	psect	maintext
   473     039B                     __pmaintext:	
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 157 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B00/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   493 ;;      Params:         0       0       0       0
   494 ;;      Locals:         0       0       0       0
   495 ;;      Temps:          0       0       3       0
   496 ;;      Totals:         0       0       3       0
   497 ;;Total ram usage:        3 bytes
   498 ;; Hardware stack levels required when called: 6
   499 ;; This function calls:
   500 ;;		_beep
   501 ;;		_initialize_pins
   502 ;;		_setup_timer1
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     039B                     _main:	
   509                           ;psect for function _main
   510                           
   511     039B                     l1298:	
   512                           ;incstack = 0
   513                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   514                           
   515                           
   516                           ;main.c: 158:     initialize_pins();
   517     039B  118A  2266  118A   	fcall	_initialize_pins
   518     039E                     l1300:
   519                           
   520                           ;main.c: 159:     setup_timer1();
   521     039E  118A  2449  118A   	fcall	_setup_timer1
   522     03A1                     l1302:
   523                           
   524                           ;main.c: 161:     PORTBbits.RB0 = 0;
   525     03A1  1283               	bcf	3,5	;RP0=0, select bank0
   526     03A2  1303               	bcf	3,6	;RP1=0, select bank0
   527     03A3  1006               	bcf	6,0	;volatile
   528     03A4                     l1304:
   529                           
   530                           ;main.c: 165:         if (PORTAbits.RA2 == 0) {
   531     03A4  1283               	bcf	3,5	;RP0=0, select bank0
   532     03A5  1303               	bcf	3,6	;RP1=0, select bank0
   533     03A6  1905               	btfsc	5,2	;volatile
   534     03A7  2BA9               	goto	u1191
   535     03A8  2BAA               	goto	u1190
   536     03A9                     u1191:
   537     03A9  2BA4               	goto	l1304
   538     03AA                     u1190:
   539     03AA                     l1306:
   540                           
   541                           ;main.c: 166:             beep(1000);
   542     03AA  30E8               	movlw	232
   543     03AB  00C2               	movwf	beep@duration_ms
   544     03AC  3003               	movlw	3
   545     03AD  00C3               	movwf	beep@duration_ms+1
   546     03AE  118A  2131  118A   	fcall	_beep
   547     03B1                     l1308:
   548                           
   549                           ;main.c: 167:             _delay((unsigned long)((50)*(20000000/4000.0)));
   550     03B1  3002               	movlw	2
   551     03B2  1683               	bsf	3,5	;RP0=1, select bank1
   552     03B3  1303               	bcf	3,6	;RP1=0, select bank1
   553     03B4  00C9               	movwf	(??_main^(0+128)+2)
   554     03B5  3045               	movlw	69
   555     03B6  00C8               	movwf	(??_main^(0+128)+1)
   556     03B7  30A9               	movlw	169
   557     03B8  00C7               	movwf	??_main^(0+128)
   558     03B9                     u1207:
   559     03B9  0BC7               	decfsz	??_main^(0+128),f
   560     03BA  2BB9               	goto	u1207
   561     03BB  0BC8               	decfsz	(??_main^(0+128)+1),f
   562     03BC  2BB9               	goto	u1207
   563     03BD  0BC9               	decfsz	(??_main^(0+128)+2),f
   564     03BE  2BB9               	goto	u1207
   565     03BF  0000               	nop
   566     03C0  2BA4               	goto	l1304
   567     03C1  118A  2811         	ljmp	start
   568     03C3                     __end_of_main:
   569                           
   570                           	psect	text1
   571     0449                     __ptext1:	
   572 ;; *************** function _setup_timer1 *****************
   573 ;; Defined at:
   574 ;;		line 111 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   588 ;;      Params:         0       0       0       0
   589 ;;      Locals:         0       0       0       0
   590 ;;      Temps:          0       0       0       0
   591 ;;      Totals:         0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; Hardware stack levels required when called: 4
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602     0449                     _setup_timer1:	
   603                           ;psect for function _setup_timer1
   604                           
   605     0449                     l1148:	
   606                           ;incstack = 0
   607                           ; Regs used in _setup_timer1: [wreg+status,2+status,0]
   608                           
   609                           
   610                           ;main.c: 113:     T1CONbits.TMR1CS = 0;
   611     0449  1283               	bcf	3,5	;RP0=0, select bank0
   612     044A  1303               	bcf	3,6	;RP1=0, select bank0
   613     044B  1090               	bcf	16,1	;volatile
   614     044C                     l1150:
   615                           
   616                           ;main.c: 114:     T1CONbits.T1CKPS = 3;
   617     044C  3030               	movlw	48
   618     044D  0490               	iorwf	16,f	;volatile
   619     044E                     l1152:
   620                           
   621                           ;main.c: 115:     T1CONbits.nT1SYNC = 1;
   622     044E  1510               	bsf	16,2	;volatile
   623     044F                     l1154:
   624                           
   625                           ;main.c: 116:     TMR1H = 0x00;
   626     044F  018F               	clrf	15	;volatile
   627     0450                     l1156:
   628                           
   629                           ;main.c: 117:     TMR1L = 0x00;
   630     0450  018E               	clrf	14	;volatile
   631     0451                     l1158:
   632                           
   633                           ;main.c: 118:     T1CONbits.TMR1ON = 1;
   634     0451  1410               	bsf	16,0	;volatile
   635     0452                     l72:
   636     0452  0008               	return
   637     0453                     __end_of_setup_timer1:
   638                           
   639                           	psect	text2
   640     0266                     __ptext2:	
   641 ;; *************** function _initialize_pins *****************
   642 ;; Defined at:
   643 ;;		line 122 in file "main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  i               2   25[BANK0 ] int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   657 ;;      Params:         0       0       0       0
   658 ;;      Locals:         0       2       0       0
   659 ;;      Temps:          0       1       0       0
   660 ;;      Totals:         0       3       0       0
   661 ;;Total ram usage:        3 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; Hardware stack levels required when called: 4
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671     0266                     _initialize_pins:	
   672                           ;psect for function _initialize_pins
   673                           
   674     0266                     l1160:	
   675                           ;incstack = 0
   676                           ; Regs used in _initialize_pins: [wreg-fsr0h+status,2+status,0+btemp+1]
   677                           
   678                           
   679                           ;main.c: 123:     CMCON = 0x07;
   680     0266  3007               	movlw	7
   681     0267  1283               	bcf	3,5	;RP0=0, select bank0
   682     0268  1303               	bcf	3,6	;RP1=0, select bank0
   683     0269  009F               	movwf	31	;volatile
   684                           
   685                           ;main.c: 124:     PIE1bits.TMR1IE = 1;
   686     026A  1683               	bsf	3,5	;RP0=1, select bank1
   687     026B  1303               	bcf	3,6	;RP1=0, select bank1
   688     026C  140C               	bsf	12,0	;volatile
   689                           
   690                           ;main.c: 125:     TRISBbits.TRISB0 = 0;
   691     026D  1006               	bcf	6,0	;volatile
   692                           
   693                           ;main.c: 126:     TRISAbits.TRISA3 = 1;
   694     026E  1585               	bsf	5,3	;volatile
   695                           
   696                           ;main.c: 127:     TRISBbits.TRISB2 = 1;
   697     026F  1506               	bsf	6,2	;volatile
   698                           
   699                           ;main.c: 128:     TRISBbits.TRISB1 = 0;
   700     0270  1086               	bcf	6,1	;volatile
   701                           
   702                           ;main.c: 129:     TRISAbits.TRISA0 = 0;
   703     0271  1005               	bcf	5,0	;volatile
   704                           
   705                           ;main.c: 130:     TRISAbits.TRISA1 = 1;
   706     0272  1485               	bsf	5,1	;volatile
   707                           
   708                           ;main.c: 131:     TRISAbits.TRISA2 = 1;
   709     0273  1505               	bsf	5,2	;volatile
   710                           
   711                           ;main.c: 132:     TRISBbits.TRISB7 = 0;
   712     0274  1386               	bcf	6,7	;volatile
   713                           
   714                           ;main.c: 133:     TRISBbits.TRISB6 = 0;
   715     0275  1306               	bcf	6,6	;volatile
   716                           
   717                           ;main.c: 134:     PORTAbits.RA3 = 1;
   718     0276  1283               	bcf	3,5	;RP0=0, select bank0
   719     0277  1303               	bcf	3,6	;RP1=0, select bank0
   720     0278  1585               	bsf	5,3	;volatile
   721     0279                     l1162:
   722                           
   723                           ;main.c: 135:     for(int i =0; i<7; i++)
   724     0279  01B9               	clrf	initialize_pins@i
   725     027A  01BA               	clrf	initialize_pins@i+1
   726     027B                     l1168:
   727                           
   728                           ;main.c: 136:     {;main.c: 137:         if(i == 0)
   729     027B  1283               	bcf	3,5	;RP0=0, select bank0
   730     027C  1303               	bcf	3,6	;RP1=0, select bank0
   731     027D  0839               	movf	initialize_pins@i,w
   732     027E  043A               	iorwf	initialize_pins@i+1,w
   733     027F  1D03               	btfss	3,2
   734     0280  2A82               	goto	u971
   735     0281  2A83               	goto	u970
   736     0282                     u971:
   737     0282  2A97               	goto	l1172
   738     0283                     u970:
   739     0283                     l1170:
   740                           
   741                           ;main.c: 138:         {;main.c: 139:             output_pinpad[i] = 0;
   742     0283  0839               	movf	initialize_pins@i,w
   743     0284  00B8               	movwf	??_initialize_pins
   744     0285  0738               	addwf	??_initialize_pins,w
   745     0286  3EAE               	addlw	(low (_output_pinpad| 0))& (0+255)
   746     0287  0084               	movwf	4
   747     0288  1383               	bcf	3,7	;select IRP bank1
   748     0289  0180               	clrf	0
   749     028A  0A84               	incf	4,f
   750     028B  0180               	clrf	0
   751                           
   752                           ;main.c: 140:             input_pinpad[i] = 1;
   753     028C  0839               	movf	initialize_pins@i,w
   754     028D  00B8               	movwf	??_initialize_pins
   755     028E  0738               	addwf	??_initialize_pins,w
   756     028F  3E4A               	addlw	(low (_input_pinpad| 0))& (0+255)
   757     0290  0084               	movwf	4
   758     0291  3001               	movlw	1
   759     0292  0080               	movwf	0
   760     0293  0A84               	incf	4,f
   761     0294  3000               	movlw	0
   762     0295  0080               	movwf	0
   763                           
   764                           ;main.c: 142:         }
   765     0296  2AA8               	goto	l1174
   766     0297                     l1172:
   767                           
   768                           ;main.c: 144:         {;main.c: 145:             output_pinpad[i] = 0;
   769     0297  0839               	movf	initialize_pins@i,w
   770     0298  00B8               	movwf	??_initialize_pins
   771     0299  0738               	addwf	??_initialize_pins,w
   772     029A  3EAE               	addlw	(low (_output_pinpad| 0))& (0+255)
   773     029B  0084               	movwf	4
   774     029C  1383               	bcf	3,7	;select IRP bank1
   775     029D  0180               	clrf	0
   776     029E  0A84               	incf	4,f
   777     029F  0180               	clrf	0
   778                           
   779                           ;main.c: 146:             input_pinpad[i] = 0;
   780     02A0  0839               	movf	initialize_pins@i,w
   781     02A1  00B8               	movwf	??_initialize_pins
   782     02A2  0738               	addwf	??_initialize_pins,w
   783     02A3  3E4A               	addlw	(low (_input_pinpad| 0))& (0+255)
   784     02A4  0084               	movwf	4
   785     02A5  0180               	clrf	0
   786     02A6  0A84               	incf	4,f
   787     02A7  0180               	clrf	0
   788     02A8                     l1174:
   789                           
   790                           ;main.c: 148:     }
   791     02A8  3001               	movlw	1
   792     02A9  07B9               	addwf	initialize_pins@i,f
   793     02AA  1803               	skipnc
   794     02AB  0ABA               	incf	initialize_pins@i+1,f
   795     02AC  3000               	movlw	0
   796     02AD  07BA               	addwf	initialize_pins@i+1,f
   797     02AE                     l1176:
   798     02AE  083A               	movf	initialize_pins@i+1,w
   799     02AF  3A80               	xorlw	128
   800     02B0  00FF               	movwf	btemp+1
   801     02B1  3080               	movlw	128
   802     02B2  027F               	subwf	btemp+1,w
   803     02B3  1D03               	skipz
   804     02B4  2AB7               	goto	u985
   805     02B5  3007               	movlw	7
   806     02B6  0239               	subwf	initialize_pins@i,w
   807     02B7                     u985:
   808     02B7  1C03               	skipc
   809     02B8  2ABA               	goto	u981
   810     02B9  2ABB               	goto	u980
   811     02BA                     u981:
   812     02BA  2A7B               	goto	l1168
   813     02BB                     u980:
   814     02BB                     l76:
   815                           
   816                           ;main.c: 149:     INTCONbits.GIE = 1;
   817     02BB  178B               	bsf	11,7	;volatile
   818                           
   819                           ;main.c: 150:     INTCONbits.PEIE = 1;
   820     02BC  170B               	bsf	11,6	;volatile
   821     02BD                     l79:
   822     02BD  0008               	return
   823     02BE                     __end_of_initialize_pins:
   824                           
   825                           	psect	text3
   826     0131                     __ptext3:	
   827 ;; *************** function _beep *****************
   828 ;; Defined at:
   829 ;;		line 45 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  duration_ms     2   34[BANK0 ] int 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  i               2    7[BANK1 ] int 
   834 ;;  half_period_    2    9[BANK1 ] int 
   835 ;;  total_cycles    2    5[BANK1 ] int 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   845 ;;      Params:         0       2       0       0
   846 ;;      Locals:         0       0       6       0
   847 ;;      Temps:          0       0       1       0
   848 ;;      Totals:         0       2       7       0
   849 ;;Total ram usage:        9 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 5
   852 ;; This function calls:
   853 ;;		___awdiv
   854 ;;		___wmul
   855 ;;		_delay_us
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861     0131                     _beep:	
   862                           ;psect for function _beep
   863                           
   864     0131                     l1284:	
   865                           ;incstack = 0
   866                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
   867                           
   868                           
   869                           ;main.c: 45: void beep(int duration_ms);main.c: 46: {;main.c: 47:     int half_period_us
      +                           = 1000000 / (2 * 6000);
   870     0131  3053               	movlw	83
   871     0132  1683               	bsf	3,5	;RP0=1, select bank1
   872     0133  1303               	bcf	3,6	;RP1=0, select bank1
   873     0134  00C5               	movwf	beep@half_period_us^(0+128)
   874     0135  3000               	movlw	0
   875     0136  00C6               	movwf	(beep@half_period_us^(0+128)+1)
   876     0137                     l1286:
   877                           
   878                           ;main.c: 48:     int total_cycles = (duration_ms * 1000) / (2 * half_period_us);
   879     0137  30A6               	movlw	166
   880     0138  1283               	bcf	3,5	;RP0=0, select bank0
   881     0139  1303               	bcf	3,6	;RP1=0, select bank0
   882     013A  00BE               	movwf	___awdiv@divisor
   883     013B  3000               	movlw	0
   884     013C  00BF               	movwf	___awdiv@divisor+1
   885     013D  0843               	movf	beep@duration_ms+1,w
   886     013E  00B9               	movwf	___wmul@multiplier+1
   887     013F  0842               	movf	beep@duration_ms,w
   888     0140  00B8               	movwf	___wmul@multiplier
   889     0141  30E8               	movlw	232
   890     0142  00BA               	movwf	___wmul@multiplicand
   891     0143  3003               	movlw	3
   892     0144  00BB               	movwf	___wmul@multiplicand+1
   893     0145  118A  23C3  118A   	fcall	___wmul
   894     0148  1283               	bcf	3,5	;RP0=0, select bank0
   895     0149  1303               	bcf	3,6	;RP1=0, select bank0
   896     014A  0839               	movf	?___wmul+1,w
   897     014B  00C1               	movwf	___awdiv@dividend+1
   898     014C  0838               	movf	?___wmul,w
   899     014D  00C0               	movwf	___awdiv@dividend
   900     014E  118A  2023  118A   	fcall	___awdiv
   901     0151  1283               	bcf	3,5	;RP0=0, select bank0
   902     0152  1303               	bcf	3,6	;RP1=0, select bank0
   903     0153  083F               	movf	?___awdiv+1,w
   904     0154  1683               	bsf	3,5	;RP0=1, select bank1
   905     0155  1303               	bcf	3,6	;RP1=0, select bank1
   906     0156  00C2               	movwf	(beep@total_cycles+1)^(0+128)
   907     0157  1283               	bcf	3,5	;RP0=0, select bank0
   908     0158  1303               	bcf	3,6	;RP1=0, select bank0
   909     0159  083E               	movf	?___awdiv,w
   910     015A  1683               	bsf	3,5	;RP0=1, select bank1
   911     015B  1303               	bcf	3,6	;RP1=0, select bank1
   912     015C  00C1               	movwf	beep@total_cycles^(0+128)
   913     015D                     l1288:
   914                           
   915                           ;main.c: 50:     for (int i = 0; i < total_cycles; i++) {
   916     015D  01C3               	clrf	beep@i^(0+128)
   917     015E  01C4               	clrf	(beep@i+1)^(0+128)
   918     015F  298C               	goto	l1296
   919     0160                     l44:
   920                           
   921                           ;main.c: 51:         PORTBbits.RB1 = 1;
   922     0160  1283               	bcf	3,5	;RP0=0, select bank0
   923     0161  1303               	bcf	3,6	;RP1=0, select bank0
   924     0162  1486               	bsf	6,1	;volatile
   925     0163                     l1290:
   926                           
   927                           ;main.c: 52:         delay_us((int)half_period_us);
   928     0163  1683               	bsf	3,5	;RP0=1, select bank1
   929     0164  1303               	bcf	3,6	;RP1=0, select bank1
   930     0165  0846               	movf	(beep@half_period_us+1)^(0+128),w
   931     0166  1283               	bcf	3,5	;RP0=0, select bank0
   932     0167  1303               	bcf	3,6	;RP1=0, select bank0
   933     0168  00B9               	movwf	delay_us@time+1
   934     0169  1683               	bsf	3,5	;RP0=1, select bank1
   935     016A  1303               	bcf	3,6	;RP1=0, select bank1
   936     016B  0845               	movf	beep@half_period_us^(0+128),w
   937     016C  1283               	bcf	3,5	;RP0=0, select bank0
   938     016D  1303               	bcf	3,6	;RP1=0, select bank0
   939     016E  00B8               	movwf	delay_us@time
   940     016F  118A  240F  118A   	fcall	_delay_us
   941     0172                     l1292:
   942                           
   943                           ;main.c: 53:         PORTBbits.RB1 = 0;
   944     0172  1283               	bcf	3,5	;RP0=0, select bank0
   945     0173  1303               	bcf	3,6	;RP1=0, select bank0
   946     0174  1086               	bcf	6,1	;volatile
   947                           
   948                           ;main.c: 54:         delay_us((int)half_period_us);
   949     0175  1683               	bsf	3,5	;RP0=1, select bank1
   950     0176  1303               	bcf	3,6	;RP1=0, select bank1
   951     0177  0846               	movf	(beep@half_period_us+1)^(0+128),w
   952     0178  1283               	bcf	3,5	;RP0=0, select bank0
   953     0179  1303               	bcf	3,6	;RP1=0, select bank0
   954     017A  00B9               	movwf	delay_us@time+1
   955     017B  1683               	bsf	3,5	;RP0=1, select bank1
   956     017C  1303               	bcf	3,6	;RP1=0, select bank1
   957     017D  0845               	movf	beep@half_period_us^(0+128),w
   958     017E  1283               	bcf	3,5	;RP0=0, select bank0
   959     017F  1303               	bcf	3,6	;RP1=0, select bank0
   960     0180  00B8               	movwf	delay_us@time
   961     0181  118A  240F  118A   	fcall	_delay_us
   962     0184                     l1294:
   963                           
   964                           ;main.c: 55:     }
   965     0184  3001               	movlw	1
   966     0185  1683               	bsf	3,5	;RP0=1, select bank1
   967     0186  1303               	bcf	3,6	;RP1=0, select bank1
   968     0187  07C3               	addwf	beep@i^(0+128),f
   969     0188  1803               	skipnc
   970     0189  0AC4               	incf	(beep@i+1)^(0+128),f
   971     018A  3000               	movlw	0
   972     018B  07C4               	addwf	(beep@i+1)^(0+128),f
   973     018C                     l1296:
   974     018C  0844               	movf	(beep@i+1)^(0+128),w
   975     018D  3A80               	xorlw	128
   976     018E  00C0               	movwf	??_beep^(0+128)
   977     018F  0842               	movf	(beep@total_cycles+1)^(0+128),w
   978     0190  3A80               	xorlw	128
   979     0191  0240               	subwf	??_beep^(0+128),w
   980     0192  1D03               	skipz
   981     0193  2996               	goto	u1185
   982     0194  0841               	movf	beep@total_cycles^(0+128),w
   983     0195  0243               	subwf	beep@i^(0+128),w
   984     0196                     u1185:
   985     0196  1C03               	skipc
   986     0197  2999               	goto	u1181
   987     0198  299A               	goto	u1180
   988     0199                     u1181:
   989     0199  2960               	goto	l44
   990     019A                     u1180:
   991     019A                     l46:
   992     019A  0008               	return
   993     019B                     __end_of_beep:
   994                           
   995                           	psect	text4
   996     040F                     __ptext4:	
   997 ;; *************** function _delay_us *****************
   998 ;; Defined at:
   999 ;;		line 37 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  time            2   24[BANK0 ] int 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  i               2   27[BANK0 ] int 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1013 ;;      Params:         0       2       0       0
  1014 ;;      Locals:         0       2       0       0
  1015 ;;      Temps:          0       1       0       0
  1016 ;;      Totals:         0       5       0       0
  1017 ;;Total ram usage:        5 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 4
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_beep
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027     040F                     _delay_us:	
  1028                           ;psect for function _delay_us
  1029                           
  1030     040F                     l1222:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _delay_us: [wreg+status,2]
  1033                           
  1034                           
  1035                           ;main.c: 37: void delay_us(int time);main.c: 38: {;main.c: 39:     for(int i =0; i< time
      +                          ; i++)
  1036     040F  1283               	bcf	3,5	;RP0=0, select bank0
  1037     0410  1303               	bcf	3,6	;RP1=0, select bank0
  1038     0411  01BB               	clrf	delay_us@i
  1039     0412  01BC               	clrf	delay_us@i+1
  1040     0413  2C1F               	goto	l37
  1041     0414                     l38:
  1042                           
  1043                           ;main.c: 40:     {;main.c: 41:         _delay((unsigned long)((1)*(20000000/4000000.0)))
      +                          ;
  1044     0414  2C15               	nop2	;2 cycle nop
  1045     0415  2C16               	nop2	;2 cycle nop
  1046     0416  0000               	nop
  1047     0417                     l1224:
  1048                           
  1049                           ;main.c: 42:     }
  1050     0417  3001               	movlw	1
  1051     0418  1283               	bcf	3,5	;RP0=0, select bank0
  1052     0419  1303               	bcf	3,6	;RP1=0, select bank0
  1053     041A  07BB               	addwf	delay_us@i,f
  1054     041B  1803               	skipnc
  1055     041C  0ABC               	incf	delay_us@i+1,f
  1056     041D  3000               	movlw	0
  1057     041E  07BC               	addwf	delay_us@i+1,f
  1058     041F                     l37:
  1059     041F  083C               	movf	delay_us@i+1,w
  1060     0420  3A80               	xorlw	128
  1061     0421  00BA               	movwf	??_delay_us
  1062     0422  0839               	movf	delay_us@time+1,w
  1063     0423  3A80               	xorlw	128
  1064     0424  023A               	subwf	??_delay_us,w
  1065     0425  1D03               	skipz
  1066     0426  2C29               	goto	u1035
  1067     0427  0838               	movf	delay_us@time,w
  1068     0428  023B               	subwf	delay_us@i,w
  1069     0429                     u1035:
  1070     0429  1C03               	skipc
  1071     042A  2C2C               	goto	u1031
  1072     042B  2C2D               	goto	u1030
  1073     042C                     u1031:
  1074     042C  2C14               	goto	l38
  1075     042D                     u1030:
  1076     042D                     l40:
  1077     042D  0008               	return
  1078     042E                     __end_of_delay_us:
  1079                           
  1080                           	psect	text5
  1081     03C3                     __ptext5:	
  1082 ;; *************** function ___wmul *****************
  1083 ;; Defined at:
  1084 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  multiplier      2   24[BANK0 ] unsigned int 
  1087 ;;  multiplicand    2   26[BANK0 ] unsigned int 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  product         2   28[BANK0 ] unsigned int 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  2   24[BANK0 ] unsigned int 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1099 ;;      Params:         0       4       0       0
  1100 ;;      Locals:         0       2       0       0
  1101 ;;      Temps:          0       0       0       0
  1102 ;;      Totals:         0       6       0       0
  1103 ;;Total ram usage:        6 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 4
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_beep
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113     03C3                     ___wmul:	
  1114                           ;psect for function ___wmul
  1115                           
  1116     03C3                     l1226:	
  1117                           ;incstack = 0
  1118                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1119                           
  1120     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1121     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1122     03C5  01BC               	clrf	___wmul@product
  1123     03C6  01BD               	clrf	___wmul@product+1
  1124     03C7                     l1228:
  1125     03C7  1C38               	btfss	___wmul@multiplier,0
  1126     03C8  2BCA               	goto	u1041
  1127     03C9  2BCB               	goto	u1040
  1128     03CA                     u1041:
  1129     03CA  2BD1               	goto	l176
  1130     03CB                     u1040:
  1131     03CB                     l1230:
  1132     03CB  083A               	movf	___wmul@multiplicand,w
  1133     03CC  07BC               	addwf	___wmul@product,f
  1134     03CD  1803               	skipnc
  1135     03CE  0ABD               	incf	___wmul@product+1,f
  1136     03CF  083B               	movf	___wmul@multiplicand+1,w
  1137     03D0  07BD               	addwf	___wmul@product+1,f
  1138     03D1                     l176:
  1139     03D1  3001               	movlw	1
  1140     03D2                     u1055:
  1141     03D2  1003               	clrc
  1142     03D3  0DBA               	rlf	___wmul@multiplicand,f
  1143     03D4  0DBB               	rlf	___wmul@multiplicand+1,f
  1144     03D5  3EFF               	addlw	-1
  1145     03D6  1D03               	skipz
  1146     03D7  2BD2               	goto	u1055
  1147     03D8                     l1232:
  1148     03D8  3001               	movlw	1
  1149     03D9                     u1065:
  1150     03D9  1003               	clrc
  1151     03DA  0CB9               	rrf	___wmul@multiplier+1,f
  1152     03DB  0CB8               	rrf	___wmul@multiplier,f
  1153     03DC  3EFF               	addlw	-1
  1154     03DD  1D03               	skipz
  1155     03DE  2BD9               	goto	u1065
  1156     03DF                     l1234:
  1157     03DF  0838               	movf	___wmul@multiplier,w
  1158     03E0  0439               	iorwf	___wmul@multiplier+1,w
  1159     03E1  1D03               	btfss	3,2
  1160     03E2  2BE4               	goto	u1071
  1161     03E3  2BE5               	goto	u1070
  1162     03E4                     u1071:
  1163     03E4  2BC7               	goto	l1228
  1164     03E5                     u1070:
  1165     03E5                     l1236:
  1166     03E5  083D               	movf	___wmul@product+1,w
  1167     03E6  00B9               	movwf	?___wmul+1
  1168     03E7  083C               	movf	___wmul@product,w
  1169     03E8  00B8               	movwf	?___wmul
  1170     03E9                     l178:
  1171     03E9  0008               	return
  1172     03EA                     __end_of___wmul:
  1173                           
  1174                           	psect	text6
  1175     0023                     __ptext6:	
  1176 ;; *************** function ___awdiv *****************
  1177 ;; Defined at:
  1178 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  divisor         2   30[BANK0 ] int 
  1181 ;;  dividend        2   32[BANK0 ] int 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  quotient        2    2[BANK1 ] int 
  1184 ;;  sign            1    1[BANK1 ] unsigned char 
  1185 ;;  counter         1    0[BANK1 ] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  2   30[BANK0 ] int 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1195 ;;      Params:         0       4       0       0
  1196 ;;      Locals:         0       0       4       0
  1197 ;;      Temps:          0       0       0       0
  1198 ;;      Totals:         0       4       4       0
  1199 ;;Total ram usage:        8 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 4
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_beep
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     0023                     ___awdiv:	
  1210                           ;psect for function ___awdiv
  1211                           
  1212     0023                     l1240:	
  1213                           ;incstack = 0
  1214                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1215                           
  1216     0023  1683               	bsf	3,5	;RP0=1, select bank1
  1217     0024  1303               	bcf	3,6	;RP1=0, select bank1
  1218     0025  01BD               	clrf	___awdiv@sign^(0+128)
  1219     0026                     l1242:
  1220     0026  1283               	bcf	3,5	;RP0=0, select bank0
  1221     0027  1303               	bcf	3,6	;RP1=0, select bank0
  1222     0028  1FBF               	btfss	___awdiv@divisor+1,7
  1223     0029  282B               	goto	u1081
  1224     002A  282C               	goto	u1080
  1225     002B                     u1081:
  1226     002B  2835               	goto	l1248
  1227     002C                     u1080:
  1228     002C                     l1244:
  1229     002C  09BE               	comf	___awdiv@divisor,f
  1230     002D  09BF               	comf	___awdiv@divisor+1,f
  1231     002E  0ABE               	incf	___awdiv@divisor,f
  1232     002F  1903               	skipnz
  1233     0030  0ABF               	incf	___awdiv@divisor+1,f
  1234     0031                     l1246:
  1235     0031  3001               	movlw	1
  1236     0032  1683               	bsf	3,5	;RP0=1, select bank1
  1237     0033  1303               	bcf	3,6	;RP1=0, select bank1
  1238     0034  00BD               	movwf	___awdiv@sign^(0+128)
  1239     0035                     l1248:
  1240     0035  1283               	bcf	3,5	;RP0=0, select bank0
  1241     0036  1FC1               	btfss	___awdiv@dividend+1,7
  1242     0037  2839               	goto	u1091
  1243     0038  283A               	goto	u1090
  1244     0039                     u1091:
  1245     0039  2843               	goto	l1254
  1246     003A                     u1090:
  1247     003A                     l1250:
  1248     003A  09C0               	comf	___awdiv@dividend,f
  1249     003B  09C1               	comf	___awdiv@dividend+1,f
  1250     003C  0AC0               	incf	___awdiv@dividend,f
  1251     003D  1903               	skipnz
  1252     003E  0AC1               	incf	___awdiv@dividend+1,f
  1253     003F                     l1252:
  1254     003F  3001               	movlw	1
  1255     0040  1683               	bsf	3,5	;RP0=1, select bank1
  1256     0041  1303               	bcf	3,6	;RP1=0, select bank1
  1257     0042  06BD               	xorwf	___awdiv@sign^(0+128),f
  1258     0043                     l1254:
  1259     0043  1683               	bsf	3,5	;RP0=1, select bank1
  1260     0044  1303               	bcf	3,6	;RP1=0, select bank1
  1261     0045  01BE               	clrf	___awdiv@quotient^(0+128)
  1262     0046  01BF               	clrf	(___awdiv@quotient+1)^(0+128)
  1263     0047                     l1256:
  1264     0047  1283               	bcf	3,5	;RP0=0, select bank0
  1265     0048  1303               	bcf	3,6	;RP1=0, select bank0
  1266     0049  083E               	movf	___awdiv@divisor,w
  1267     004A  043F               	iorwf	___awdiv@divisor+1,w
  1268     004B  1903               	btfsc	3,2
  1269     004C  284E               	goto	u1101
  1270     004D  284F               	goto	u1100
  1271     004E                     u1101:
  1272     004E  2893               	goto	l1276
  1273     004F                     u1100:
  1274     004F                     l1258:
  1275     004F  3001               	movlw	1
  1276     0050  1683               	bsf	3,5	;RP0=1, select bank1
  1277     0051  1303               	bcf	3,6	;RP1=0, select bank1
  1278     0052  00BC               	movwf	___awdiv@counter^(0+128)
  1279     0053  285F               	goto	l1264
  1280     0054                     l1260:
  1281     0054  3001               	movlw	1
  1282     0055                     u1115:
  1283     0055  1003               	clrc
  1284     0056  0DBE               	rlf	___awdiv@divisor,f
  1285     0057  0DBF               	rlf	___awdiv@divisor+1,f
  1286     0058  3EFF               	addlw	-1
  1287     0059  1D03               	skipz
  1288     005A  2855               	goto	u1115
  1289     005B                     l1262:
  1290     005B  3001               	movlw	1
  1291     005C  1683               	bsf	3,5	;RP0=1, select bank1
  1292     005D  1303               	bcf	3,6	;RP1=0, select bank1
  1293     005E  07BC               	addwf	___awdiv@counter^(0+128),f
  1294     005F                     l1264:
  1295     005F  1283               	bcf	3,5	;RP0=0, select bank0
  1296     0060  1303               	bcf	3,6	;RP1=0, select bank0
  1297     0061  1FBF               	btfss	___awdiv@divisor+1,7
  1298     0062  2864               	goto	u1121
  1299     0063  2865               	goto	u1120
  1300     0064                     u1121:
  1301     0064  2854               	goto	l1260
  1302     0065                     u1120:
  1303     0065                     l1266:
  1304     0065  3001               	movlw	1
  1305     0066  1683               	bsf	3,5	;RP0=1, select bank1
  1306     0067  1303               	bcf	3,6	;RP1=0, select bank1
  1307     0068                     u1135:
  1308     0068  1003               	clrc
  1309     0069  0DBE               	rlf	___awdiv@quotient^(0+128),f
  1310     006A  0DBF               	rlf	(___awdiv@quotient+1)^(0+128),f
  1311     006B  3EFF               	addlw	-1
  1312     006C  1D03               	skipz
  1313     006D  2868               	goto	u1135
  1314     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1315     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1316     0070  083F               	movf	___awdiv@divisor+1,w
  1317     0071  0241               	subwf	___awdiv@dividend+1,w
  1318     0072  1D03               	skipz
  1319     0073  2876               	goto	u1145
  1320     0074  083E               	movf	___awdiv@divisor,w
  1321     0075  0240               	subwf	___awdiv@dividend,w
  1322     0076                     u1145:
  1323     0076  1C03               	skipc
  1324     0077  2879               	goto	u1141
  1325     0078  287A               	goto	u1140
  1326     0079                     u1141:
  1327     0079  2883               	goto	l1272
  1328     007A                     u1140:
  1329     007A                     l1268:
  1330     007A  083E               	movf	___awdiv@divisor,w
  1331     007B  02C0               	subwf	___awdiv@dividend,f
  1332     007C  083F               	movf	___awdiv@divisor+1,w
  1333     007D  1C03               	skipc
  1334     007E  03C1               	decf	___awdiv@dividend+1,f
  1335     007F  02C1               	subwf	___awdiv@dividend+1,f
  1336     0080                     l1270:
  1337     0080  1683               	bsf	3,5	;RP0=1, select bank1
  1338     0081  1303               	bcf	3,6	;RP1=0, select bank1
  1339     0082  143E               	bsf	___awdiv@quotient^(0+128),0
  1340     0083                     l1272:
  1341     0083  3001               	movlw	1
  1342     0084  1283               	bcf	3,5	;RP0=0, select bank0
  1343     0085                     u1155:
  1344     0085  1003               	clrc
  1345     0086  0CBF               	rrf	___awdiv@divisor+1,f
  1346     0087  0CBE               	rrf	___awdiv@divisor,f
  1347     0088  3EFF               	addlw	-1
  1348     0089  1D03               	skipz
  1349     008A  2885               	goto	u1155
  1350     008B                     l1274:
  1351     008B  3001               	movlw	1
  1352     008C  1683               	bsf	3,5	;RP0=1, select bank1
  1353     008D  1303               	bcf	3,6	;RP1=0, select bank1
  1354     008E  02BC               	subwf	___awdiv@counter^(0+128),f
  1355     008F  1D03               	btfss	3,2
  1356     0090  2892               	goto	u1161
  1357     0091  2893               	goto	u1160
  1358     0092                     u1161:
  1359     0092  2865               	goto	l1266
  1360     0093                     u1160:
  1361     0093                     l1276:
  1362     0093  1683               	bsf	3,5	;RP0=1, select bank1
  1363     0094  1303               	bcf	3,6	;RP1=0, select bank1
  1364     0095  083D               	movf	___awdiv@sign^(0+128),w
  1365     0096  1903               	btfsc	3,2
  1366     0097  2899               	goto	u1171
  1367     0098  289A               	goto	u1170
  1368     0099                     u1171:
  1369     0099  289F               	goto	l1280
  1370     009A                     u1170:
  1371     009A                     l1278:
  1372     009A  09BE               	comf	___awdiv@quotient^(0+128),f
  1373     009B  09BF               	comf	(___awdiv@quotient+1)^(0+128),f
  1374     009C  0ABE               	incf	___awdiv@quotient^(0+128),f
  1375     009D  1903               	skipnz
  1376     009E  0ABF               	incf	(___awdiv@quotient+1)^(0+128),f
  1377     009F                     l1280:
  1378     009F  083F               	movf	(___awdiv@quotient+1)^(0+128),w
  1379     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1380     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1381     00A2  00BF               	movwf	?___awdiv+1
  1382     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1383     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1384     00A5  083E               	movf	___awdiv@quotient^(0+128),w
  1385     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1386     00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1387     00A8  00BE               	movwf	?___awdiv
  1388     00A9                     l329:
  1389     00A9  0008               	return
  1390     00AA                     __end_of___awdiv:
  1391                           
  1392                           	psect	text7
  1393     00AA                     __ptext7:	
  1394 ;; *************** function _isr *****************
  1395 ;; Defined at:
  1396 ;;		line 81 in file "main.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1410 ;;      Params:         0       0       0       0
  1411 ;;      Locals:         0       0       0       0
  1412 ;;      Temps:          0       7       0       0
  1413 ;;      Totals:         0       7       0       0
  1414 ;;Total ram usage:        7 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 3
  1417 ;; This function calls:
  1418 ;;		_cycleOutput
  1419 ;;		_decodeValue
  1420 ;; This function is called by:
  1421 ;;		Interrupt level 1
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425     00AA                     _isr:	
  1426                           ;psect for function _isr
  1427                           
  1428     00AA                     i1l1178:
  1429                           
  1430                           ;main.c: 82:     if (PIR1bits.TMR1IF) {
  1431     00AA  1C0C               	btfss	12,0	;volatile
  1432     00AB  28AD               	goto	u99_21
  1433     00AC  28AE               	goto	u99_20
  1434     00AD                     u99_21:
  1435     00AD  2926               	goto	i1l69
  1436     00AE                     u99_20:
  1437     00AE                     i1l1180:
  1438                           
  1439                           ;main.c: 83:         PIR1bits.TMR1IF = 0;
  1440     00AE  100C               	bcf	12,0	;volatile
  1441     00AF                     i1l1182:
  1442                           
  1443                           ;main.c: 84:         TMR1H = 0x00;
  1444     00AF  018F               	clrf	15	;volatile
  1445                           
  1446                           ;main.c: 85:         TMR1L = 0x00;
  1447     00B0  018E               	clrf	14	;volatile
  1448     00B1                     i1l1184:
  1449                           
  1450                           ;main.c: 86:         PORTBbits.RB6 = 1;
  1451     00B1  1706               	bsf	6,6	;volatile
  1452     00B2                     i1l1186:
  1453                           
  1454                           ;main.c: 87:         _delay((unsigned long)((100)*(20000000/4000.0)));
  1455     00B2  3003               	movlw	3
  1456     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1457     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1458     00B5  00B3               	movwf	??_isr+2
  1459     00B6  308A               	movlw	138
  1460     00B7  00B2               	movwf	??_isr+1
  1461     00B8  3055               	movlw	85
  1462     00B9  00B1               	movwf	??_isr
  1463     00BA                     u121_27:
  1464     00BA  0BB1               	decfsz	??_isr,f
  1465     00BB  28BA               	goto	u121_27
  1466     00BC  0BB2               	decfsz	??_isr+1,f
  1467     00BD  28BA               	goto	u121_27
  1468     00BE  0BB3               	decfsz	??_isr+2,f
  1469     00BF  28BA               	goto	u121_27
  1470     00C0  0000               	nop
  1471     00C1                     i1l1188:
  1472                           
  1473                           ;main.c: 88:         if (sensor_index < 2 * 7) {
  1474     00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1475     00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1476     00C3  0849               	movf	_sensor_index+1,w
  1477     00C4  3A80               	xorlw	128
  1478     00C5  00FF               	movwf	btemp+1
  1479     00C6  3080               	movlw	128
  1480     00C7  027F               	subwf	btemp+1,w
  1481     00C8  1D03               	skipz
  1482     00C9  28CC               	goto	u100_25
  1483     00CA  300E               	movlw	14
  1484     00CB  0248               	subwf	_sensor_index,w
  1485     00CC                     u100_25:
  1486     00CC  1803               	skipnc
  1487     00CD  28CF               	goto	u100_21
  1488     00CE  28D0               	goto	u100_20
  1489     00CF                     u100_21:
  1490     00CF  2911               	goto	i1l1202
  1491     00D0                     u100_20:
  1492     00D0                     i1l1190:
  1493                           
  1494                           ;main.c: 89:             if (sensor_index < 7) {
  1495     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1496     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1497     00D2  0849               	movf	_sensor_index+1,w
  1498     00D3  3A80               	xorlw	128
  1499     00D4  00FF               	movwf	btemp+1
  1500     00D5  3080               	movlw	128
  1501     00D6  027F               	subwf	btemp+1,w
  1502     00D7  1D03               	skipz
  1503     00D8  28DB               	goto	u101_25
  1504     00D9  3007               	movlw	7
  1505     00DA  0248               	subwf	_sensor_index,w
  1506     00DB                     u101_25:
  1507     00DB  1803               	skipnc
  1508     00DC  28DE               	goto	u101_21
  1509     00DD  28DF               	goto	u101_20
  1510     00DE                     u101_21:
  1511     00DE  28F4               	goto	i1l66
  1512     00DF                     u101_20:
  1513     00DF                     i1l1192:
  1514                           
  1515                           ;main.c: 90:                 PORTBbits.RB2 = 0;
  1516     00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1517     00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1518     00E1  1106               	bcf	6,2	;volatile
  1519     00E2                     i1l1194:
  1520                           
  1521                           ;main.c: 91:                 PORTBbits.RB7 = (int)input_pinpad[sensor_index];
  1522     00E2  0848               	movf	_sensor_index,w
  1523     00E3  00B1               	movwf	??_isr
  1524     00E4  0731               	addwf	??_isr,w
  1525     00E5  3E4A               	addlw	(low (_input_pinpad| 0))& (0+255)
  1526     00E6  0084               	movwf	4
  1527     00E7  1383               	bcf	3,7	;select IRP bank0
  1528     00E8  0C00               	rrf	0,w
  1529     00E9  1C03               	skipc
  1530     00EA  1386               	bcf	6,7	;volatile
  1531     00EB  1803               	skipnc
  1532     00EC  1786               	bsf	6,7	;volatile
  1533     00ED                     i1l1196:
  1534                           
  1535                           ;main.c: 92:                 sensor_index++;
  1536     00ED  3001               	movlw	1
  1537     00EE  07C8               	addwf	_sensor_index,f
  1538     00EF  1803               	skipnc
  1539     00F0  0AC9               	incf	_sensor_index+1,f
  1540     00F1  3000               	movlw	0
  1541     00F2  07C9               	addwf	_sensor_index+1,f
  1542                           
  1543                           ;main.c: 93:             } else {
  1544     00F3  2923               	goto	i1l1208
  1545     00F4                     i1l66:
  1546                           
  1547                           ;main.c: 94:                 PORTBbits.RB2 = 1;
  1548     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1549     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1550     00F6  1506               	bsf	6,2	;volatile
  1551     00F7                     i1l1198:
  1552                           
  1553                           ;main.c: 95:                 PORTBbits.RB7 = (int)input_pinpad[sensor_index - 7];
  1554     00F7  0848               	movf	_sensor_index,w
  1555     00F8  00B1               	movwf	??_isr
  1556     00F9  0731               	addwf	??_isr,w
  1557     00FA  3E3C               	addlw	(low ((_input_pinpad| 0+-14)))& (0+255)
  1558     00FB  0084               	movwf	4
  1559     00FC  1383               	bcf	3,7	;select IRP bank0
  1560     00FD  0C00               	rrf	0,w
  1561     00FE  1C03               	skipc
  1562     00FF  1386               	bcf	6,7	;volatile
  1563     0100  1803               	skipnc
  1564     0101  1786               	bsf	6,7	;volatile
  1565                           
  1566                           ;main.c: 96:                 output_pinpad[sensor_index - 7] = PORTAbits.RA1;
  1567     0102  0C05               	rrf	5,w	;volatile
  1568     0103  3901               	andlw	1
  1569     0104  00B1               	movwf	??_isr
  1570     0105  01B2               	clrf	??_isr+1
  1571     0106  0848               	movf	_sensor_index,w
  1572     0107  00B3               	movwf	??_isr+2
  1573     0108  0733               	addwf	??_isr+2,w
  1574     0109  3EA0               	addlw	(low ((_output_pinpad| 0+-14)))& (0+255)
  1575     010A  0084               	movwf	4
  1576     010B  0831               	movf	??_isr,w
  1577     010C  0080               	movwf	0
  1578     010D  0A84               	incf	4,f
  1579     010E  0832               	movf	??_isr+1,w
  1580     010F  0080               	movwf	0
  1581     0110  28ED               	goto	i1l1196
  1582     0111                     i1l1202:
  1583                           
  1584                           ;main.c: 100:             sensor_index = 0;
  1585     0111  1283               	bcf	3,5	;RP0=0, select bank0
  1586     0112  1303               	bcf	3,6	;RP1=0, select bank0
  1587     0113  01C8               	clrf	_sensor_index
  1588     0114  01C9               	clrf	_sensor_index+1
  1589     0115                     i1l1204:
  1590                           
  1591                           ;main.c: 101:             decodeValue(output_pinpad);
  1592     0115  30AE               	movlw	(low (_output_pinpad| 0))& (0+255)
  1593     0116  00AA               	movwf	decodeValue@code
  1594     0117  118A  2365  118A   	fcall	_decodeValue
  1595     011A                     i1l1206:
  1596                           
  1597                           ;main.c: 102:             cycleOutput(input_pinpad, 7);
  1598     011A  304A               	movlw	(low (_input_pinpad| 0))& (0+255)
  1599     011B  00F7               	movwf	cycleOutput@list
  1600     011C  3007               	movlw	7
  1601     011D  00F8               	movwf	cycleOutput@size
  1602     011E  3000               	movlw	0
  1603     011F  00F9               	movwf	cycleOutput@size+1
  1604     0120  118A  219B  118A   	fcall	_cycleOutput
  1605     0123                     i1l1208:
  1606                           
  1607                           ;main.c: 104:         PORTBbits.RB6 = 0;
  1608     0123  1283               	bcf	3,5	;RP0=0, select bank0
  1609     0124  1303               	bcf	3,6	;RP1=0, select bank0
  1610     0125  1306               	bcf	6,6	;volatile
  1611     0126                     i1l69:
  1612     0126  0837               	movf	??_isr+6,w
  1613     0127  00FF               	movwf	btemp+1
  1614     0128  0836               	movf	??_isr+5,w
  1615     0129  008A               	movwf	10
  1616     012A  0835               	movf	??_isr+4,w
  1617     012B  0084               	movwf	4
  1618     012C  0E34               	swapf	??_isr+3,w
  1619     012D  0083               	movwf	3
  1620     012E  0EFE               	swapf	btemp,f
  1621     012F  0E7E               	swapf	btemp,w
  1622     0130  0009               	retfie
  1623     0131                     __end_of_isr:
  1624                           
  1625                           	psect	intentry
  1626     0004                     __pintentry:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1629                           
  1630     0004                     interrupt_function:
  1631     007E                     saved_w         set	btemp
  1632     0004  00FE               	movwf	btemp
  1633     0005  0E03               	swapf	3,w
  1634     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1635     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1636     0008  00B4               	movwf	??_isr+3
  1637     0009  0804               	movf	4,w
  1638     000A  00B5               	movwf	??_isr+4
  1639     000B  080A               	movf	10,w
  1640     000C  00B6               	movwf	??_isr+5
  1641     000D  087F               	movf	btemp+1,w
  1642     000E  00B7               	movwf	??_isr+6
  1643     000F  118A  28AA         	ljmp	_isr
  1644                           
  1645                           	psect	text8
  1646     0365                     __ptext8:	
  1647 ;; *************** function _decodeValue *****************
  1648 ;; Defined at:
  1649 ;;		line 72 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  code            1   10[BANK0 ] PTR int 
  1652 ;;		 -> output_pinpad(14), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  i               2   15[BANK0 ] int 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1664 ;;      Params:         0       1       0       0
  1665 ;;      Locals:         0       2       0       0
  1666 ;;      Temps:          0       4       0       0
  1667 ;;      Totals:         0       7       0       0
  1668 ;;Total ram usage:        7 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 2
  1671 ;; This function calls:
  1672 ;;		i1_beep
  1673 ;; This function is called by:
  1674 ;;		_isr
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678     0365                     _decodeValue:	
  1679                           ;psect for function _decodeValue
  1680                           
  1681     0365                     i1l1134:	
  1682                           ;incstack = 0
  1683                           ; Regs used in _decodeValue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1684                           
  1685                           
  1686                           ;main.c: 72: void decodeValue(int code[]);main.c: 73: {;main.c: 74:     for(int i =0; i<
      +                          7; i++)
  1687     0365  1283               	bcf	3,5	;RP0=0, select bank0
  1688     0366  1303               	bcf	3,6	;RP1=0, select bank0
  1689     0367  01AF               	clrf	decodeValue@i
  1690     0368  01B0               	clrf	decodeValue@i+1
  1691     0369                     i1l1140:
  1692                           
  1693                           ;main.c: 75:     {;main.c: 76:         if(code[i] == 1)
  1694     0369  1283               	bcf	3,5	;RP0=0, select bank0
  1695     036A  1303               	bcf	3,6	;RP1=0, select bank0
  1696     036B  082F               	movf	decodeValue@i,w
  1697     036C  00AB               	movwf	??_decodeValue
  1698     036D  072B               	addwf	??_decodeValue,w
  1699     036E  072A               	addwf	decodeValue@code,w
  1700     036F  00AC               	movwf	??_decodeValue+1
  1701     0370  082C               	movf	??_decodeValue+1,w
  1702     0371  0084               	movwf	4
  1703     0372  1383               	bcf	3,7	;select IRP bank0
  1704     0373  0800               	movf	0,w
  1705     0374  00AD               	movwf	??_decodeValue+2
  1706     0375  0A84               	incf	4,f
  1707     0376  0800               	movf	0,w
  1708     0377  00AE               	movwf	??_decodeValue+3
  1709     0378  032D               	decf	??_decodeValue+2,w
  1710     0379  042E               	iorwf	??_decodeValue+3,w
  1711     037A  1D03               	btfss	3,2
  1712     037B  2B7D               	goto	u95_21
  1713     037C  2B7E               	goto	u95_20
  1714     037D                     u95_21:
  1715     037D  2B85               	goto	i1l1144
  1716     037E                     u95_20:
  1717     037E                     i1l1142:
  1718                           
  1719                           ;main.c: 77:             beep(1000);
  1720     037E  30E8               	movlw	232
  1721     037F  00FB               	movwf	i1beep@duration_ms
  1722     0380  3003               	movlw	3
  1723     0381  00FC               	movwf	i1beep@duration_ms+1
  1724     0382  118A  2315  118A   	fcall	i1_beep
  1725     0385                     i1l1144:
  1726                           
  1727                           ;main.c: 78:     }
  1728     0385  3001               	movlw	1
  1729     0386  1283               	bcf	3,5	;RP0=0, select bank0
  1730     0387  1303               	bcf	3,6	;RP1=0, select bank0
  1731     0388  07AF               	addwf	decodeValue@i,f
  1732     0389  1803               	skipnc
  1733     038A  0AB0               	incf	decodeValue@i+1,f
  1734     038B  3000               	movlw	0
  1735     038C  07B0               	addwf	decodeValue@i+1,f
  1736     038D                     i1l1146:
  1737     038D  0830               	movf	decodeValue@i+1,w
  1738     038E  3A80               	xorlw	128
  1739     038F  00FF               	movwf	btemp+1
  1740     0390  3080               	movlw	128
  1741     0391  027F               	subwf	btemp+1,w
  1742     0392  1D03               	skipz
  1743     0393  2B96               	goto	u96_25
  1744     0394  3007               	movlw	7
  1745     0395  022F               	subwf	decodeValue@i,w
  1746     0396                     u96_25:
  1747     0396  1C03               	skipc
  1748     0397  2B99               	goto	u96_21
  1749     0398  2B9A               	goto	u96_20
  1750     0399                     u96_21:
  1751     0399  2B69               	goto	i1l1140
  1752     039A                     u96_20:
  1753     039A                     i1l59:
  1754     039A  0008               	return
  1755     039B                     __end_of_decodeValue:
  1756                           
  1757                           	psect	text9
  1758     0315                     __ptext9:	
  1759 ;; *************** function i1_beep *****************
  1760 ;; Defined at:
  1761 ;;		line 45 in file "main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  duration_ms     2   10[COMMON] int 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  half_period_    2    8[BANK0 ] int 
  1766 ;;  i               2    6[BANK0 ] int 
  1767 ;;  total_cycles    2    4[BANK0 ] int 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1777 ;;      Params:         2       0       0       0
  1778 ;;      Locals:         0       6       0       0
  1779 ;;      Temps:          1       0       0       0
  1780 ;;      Totals:         3       6       0       0
  1781 ;;Total ram usage:        9 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 1
  1784 ;; This function calls:
  1785 ;;		i1___awdiv
  1786 ;;		i1___wmul
  1787 ;;		i1_delay_us
  1788 ;; This function is called by:
  1789 ;;		_decodeValue
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793     0315                     i1_beep:	
  1794                           ;psect for function i1_beep
  1795                           
  1796     0315                     i1l1090:	
  1797                           ;incstack = 0
  1798                           ; Regs used in i1_beep: [wreg+status,2+status,0+pclath+cstack]
  1799                           
  1800                           
  1801                           ;main.c: 45: void beep(int duration_ms);main.c: 46: {;main.c: 47:     int half_period_us
      +                           = 1000000 / (2 * 6000);
  1802     0315  3053               	movlw	83
  1803     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1804     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1805     0318  00A8               	movwf	i1beep@half_period_us
  1806     0319  3000               	movlw	0
  1807     031A  00A9               	movwf	i1beep@half_period_us+1
  1808     031B                     i1l1092:
  1809                           
  1810                           ;main.c: 48:     int total_cycles = (duration_ms * 1000) / (2 * half_period_us);
  1811     031B  30A6               	movlw	166
  1812     031C  00F7               	movwf	i1___awdiv@divisor
  1813     031D  3000               	movlw	0
  1814     031E  00F8               	movwf	i1___awdiv@divisor+1
  1815     031F  087C               	movf	i1beep@duration_ms+1,w
  1816     0320  00F2               	movwf	i1___wmul@multiplier+1
  1817     0321  087B               	movf	i1beep@duration_ms,w
  1818     0322  00F1               	movwf	i1___wmul@multiplier
  1819     0323  30E8               	movlw	232
  1820     0324  00F3               	movwf	i1___wmul@multiplicand
  1821     0325  3003               	movlw	3
  1822     0326  00F4               	movwf	i1___wmul@multiplicand+1
  1823     0327  118A  23EA  118A   	fcall	i1___wmul
  1824     032A  0872               	movf	?i1___wmul+1,w
  1825     032B  00FA               	movwf	i1___awdiv@dividend+1
  1826     032C  0871               	movf	?i1___wmul,w
  1827     032D  00F9               	movwf	i1___awdiv@dividend
  1828     032E  118A  2201  118A   	fcall	i1___awdiv
  1829     0331  0878               	movf	?i1___awdiv+1,w
  1830     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1831     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1832     0334  00A5               	movwf	i1beep@total_cycles+1
  1833     0335  0877               	movf	?i1___awdiv,w
  1834     0336  00A4               	movwf	i1beep@total_cycles
  1835     0337                     i1l1094:
  1836                           
  1837                           ;main.c: 50:     for (int i = 0; i < total_cycles; i++) {
  1838     0337  01A6               	clrf	i1beep@i
  1839     0338  01A7               	clrf	i1beep@i+1
  1840     0339  2B56               	goto	i1l1102
  1841     033A                     i1l44:
  1842                           
  1843                           ;main.c: 51:         PORTBbits.RB1 = 1;
  1844     033A  1283               	bcf	3,5	;RP0=0, select bank0
  1845     033B  1303               	bcf	3,6	;RP1=0, select bank0
  1846     033C  1486               	bsf	6,1	;volatile
  1847     033D                     i1l1096:
  1848                           
  1849                           ;main.c: 52:         delay_us((int)half_period_us);
  1850     033D  0829               	movf	i1beep@half_period_us+1,w
  1851     033E  00F2               	movwf	i1delay_us@time+1
  1852     033F  0828               	movf	i1beep@half_period_us,w
  1853     0340  00F1               	movwf	i1delay_us@time
  1854     0341  118A  242E  118A   	fcall	i1_delay_us
  1855     0344                     i1l1098:
  1856                           
  1857                           ;main.c: 53:         PORTBbits.RB1 = 0;
  1858     0344  1283               	bcf	3,5	;RP0=0, select bank0
  1859     0345  1303               	bcf	3,6	;RP1=0, select bank0
  1860     0346  1086               	bcf	6,1	;volatile
  1861                           
  1862                           ;main.c: 54:         delay_us((int)half_period_us);
  1863     0347  0829               	movf	i1beep@half_period_us+1,w
  1864     0348  00F2               	movwf	i1delay_us@time+1
  1865     0349  0828               	movf	i1beep@half_period_us,w
  1866     034A  00F1               	movwf	i1delay_us@time
  1867     034B  118A  242E  118A   	fcall	i1_delay_us
  1868     034E                     i1l1100:
  1869                           
  1870                           ;main.c: 55:     }
  1871     034E  3001               	movlw	1
  1872     034F  1283               	bcf	3,5	;RP0=0, select bank0
  1873     0350  1303               	bcf	3,6	;RP1=0, select bank0
  1874     0351  07A6               	addwf	i1beep@i,f
  1875     0352  1803               	skipnc
  1876     0353  0AA7               	incf	i1beep@i+1,f
  1877     0354  3000               	movlw	0
  1878     0355  07A7               	addwf	i1beep@i+1,f
  1879     0356                     i1l1102:
  1880     0356  0827               	movf	i1beep@i+1,w
  1881     0357  3A80               	xorlw	128
  1882     0358  00FD               	movwf	??i1_beep
  1883     0359  0825               	movf	i1beep@total_cycles+1,w
  1884     035A  3A80               	xorlw	128
  1885     035B  027D               	subwf	??i1_beep,w
  1886     035C  1D03               	skipz
  1887     035D  2B60               	goto	u91_25
  1888     035E  0824               	movf	i1beep@total_cycles,w
  1889     035F  0226               	subwf	i1beep@i,w
  1890     0360                     u91_25:
  1891     0360  1C03               	skipc
  1892     0361  2B63               	goto	u91_21
  1893     0362  2B64               	goto	u91_20
  1894     0363                     u91_21:
  1895     0363  2B3A               	goto	i1l44
  1896     0364                     u91_20:
  1897     0364                     i1l46:
  1898     0364  0008               	return
  1899     0365                     __end_ofi1_beep:
  1900                           
  1901                           	psect	text10
  1902     042E                     __ptext10:	
  1903 ;; *************** function i1_delay_us *****************
  1904 ;; Defined at:
  1905 ;;		line 37 in file "main.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  time            2    0[COMMON] int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  i               2    3[COMMON] int 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1919 ;;      Params:         2       0       0       0
  1920 ;;      Locals:         2       0       0       0
  1921 ;;      Temps:          1       0       0       0
  1922 ;;      Totals:         5       0       0       0
  1923 ;;Total ram usage:        5 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		i1_beep
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932     042E                     i1_delay_us:	
  1933                           ;psect for function i1_delay_us
  1934                           
  1935     042E                     i1l928:	
  1936                           ;incstack = 0
  1937                           ; Regs used in i1_delay_us: [wreg+status,2]
  1938                           
  1939                           
  1940                           ;main.c: 37: void delay_us(int time);main.c: 38: {;main.c: 39:     for(int i =0; i< time
      +                          ; i++)
  1941     042E  01F4               	clrf	i1delay_us@i
  1942     042F  01F5               	clrf	i1delay_us@i+1
  1943     0430  2C3A               	goto	i1l37
  1944     0431                     i1l38:
  1945                           
  1946                           ;main.c: 40:     {;main.c: 41:         _delay((unsigned long)((1)*(20000000/4000000.0)))
      +                          ;
  1947     0431  2C32               	nop2	;2 cycle nop
  1948     0432  2C33               	nop2	;2 cycle nop
  1949     0433  0000               	nop
  1950     0434                     i1l930:
  1951                           
  1952                           ;main.c: 42:     }
  1953     0434  3001               	movlw	1
  1954     0435  07F4               	addwf	i1delay_us@i,f
  1955     0436  1803               	skipnc
  1956     0437  0AF5               	incf	i1delay_us@i+1,f
  1957     0438  3000               	movlw	0
  1958     0439  07F5               	addwf	i1delay_us@i+1,f
  1959     043A                     i1l37:
  1960     043A  0875               	movf	i1delay_us@i+1,w
  1961     043B  3A80               	xorlw	128
  1962     043C  00F3               	movwf	??i1_delay_us
  1963     043D  0872               	movf	i1delay_us@time+1,w
  1964     043E  3A80               	xorlw	128
  1965     043F  0273               	subwf	??i1_delay_us,w
  1966     0440  1D03               	skipz
  1967     0441  2C44               	goto	u52_25
  1968     0442  0871               	movf	i1delay_us@time,w
  1969     0443  0274               	subwf	i1delay_us@i,w
  1970     0444                     u52_25:
  1971     0444  1C03               	skipc
  1972     0445  2C47               	goto	u52_21
  1973     0446  2C48               	goto	u52_20
  1974     0447                     u52_21:
  1975     0447  2C31               	goto	i1l38
  1976     0448                     u52_20:
  1977     0448                     i1l40:
  1978     0448  0008               	return
  1979     0449                     __end_ofi1_delay_us:
  1980                           
  1981                           	psect	text11
  1982     03EA                     __ptext11:	
  1983 ;; *************** function i1___wmul *****************
  1984 ;; Defined at:
  1985 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  multiplier      2    0[COMMON] unsigned int 
  1988 ;;  multiplicand    2    2[COMMON] unsigned int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  product         2    4[COMMON] unsigned int 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2    0[COMMON] unsigned int 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2000 ;;      Params:         4       0       0       0
  2001 ;;      Locals:         2       0       0       0
  2002 ;;      Temps:          0       0       0       0
  2003 ;;      Totals:         6       0       0       0
  2004 ;;Total ram usage:        6 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		i1_beep
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013     03EA                     i1___wmul:	
  2014                           ;psect for function i1___wmul
  2015                           
  2016     03EA                     i1l932:	
  2017                           ;incstack = 0
  2018                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2019                           
  2020     03EA  01F5               	clrf	i1___wmul@product
  2021     03EB  01F6               	clrf	i1___wmul@product+1
  2022     03EC                     i1l934:
  2023     03EC  1C71               	btfss	i1___wmul@multiplier,0
  2024     03ED  2BEF               	goto	u53_21
  2025     03EE  2BF0               	goto	u53_20
  2026     03EF                     u53_21:
  2027     03EF  2BF6               	goto	i1l176
  2028     03F0                     u53_20:
  2029     03F0                     i1l936:
  2030     03F0  0873               	movf	i1___wmul@multiplicand,w
  2031     03F1  07F5               	addwf	i1___wmul@product,f
  2032     03F2  1803               	skipnc
  2033     03F3  0AF6               	incf	i1___wmul@product+1,f
  2034     03F4  0874               	movf	i1___wmul@multiplicand+1,w
  2035     03F5  07F6               	addwf	i1___wmul@product+1,f
  2036     03F6                     i1l176:
  2037     03F6  3001               	movlw	1
  2038     03F7                     u54_25:
  2039     03F7  1003               	clrc
  2040     03F8  0DF3               	rlf	i1___wmul@multiplicand,f
  2041     03F9  0DF4               	rlf	i1___wmul@multiplicand+1,f
  2042     03FA  3EFF               	addlw	-1
  2043     03FB  1D03               	skipz
  2044     03FC  2BF7               	goto	u54_25
  2045     03FD                     i1l938:
  2046     03FD  3001               	movlw	1
  2047     03FE                     u55_25:
  2048     03FE  1003               	clrc
  2049     03FF  0CF2               	rrf	i1___wmul@multiplier+1,f
  2050     0400  0CF1               	rrf	i1___wmul@multiplier,f
  2051     0401  3EFF               	addlw	-1
  2052     0402  1D03               	skipz
  2053     0403  2BFE               	goto	u55_25
  2054     0404                     i1l940:
  2055     0404  0871               	movf	i1___wmul@multiplier,w
  2056     0405  0472               	iorwf	i1___wmul@multiplier+1,w
  2057     0406  1D03               	btfss	3,2
  2058     0407  2C09               	goto	u56_21
  2059     0408  2C0A               	goto	u56_20
  2060     0409                     u56_21:
  2061     0409  2BEC               	goto	i1l934
  2062     040A                     u56_20:
  2063     040A                     i1l942:
  2064     040A  0876               	movf	i1___wmul@product+1,w
  2065     040B  00F2               	movwf	?i1___wmul+1
  2066     040C  0875               	movf	i1___wmul@product,w
  2067     040D  00F1               	movwf	?i1___wmul
  2068     040E                     i1l178:
  2069     040E  0008               	return
  2070     040F                     __end_ofi1___wmul:
  2071                           
  2072                           	psect	text12
  2073     0201                     __ptext12:	
  2074 ;; *************** function i1___awdiv *****************
  2075 ;; Defined at:
  2076 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  divisor         2    6[COMMON] int 
  2079 ;;  dividend        2    8[COMMON] int 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  quotient        2    2[BANK0 ] int 
  2082 ;;  sign            1    1[BANK0 ] unsigned char 
  2083 ;;  counter         1    0[BANK0 ] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2    6[COMMON] int 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2093 ;;      Params:         4       0       0       0
  2094 ;;      Locals:         0       4       0       0
  2095 ;;      Temps:          0       0       0       0
  2096 ;;      Totals:         4       4       0       0
  2097 ;;Total ram usage:        8 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		i1_beep
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106     0201                     i1___awdiv:	
  2107                           ;psect for function i1___awdiv
  2108                           
  2109     0201                     i1l946:	
  2110                           ;incstack = 0
  2111                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  2112                           
  2113     0201  1283               	bcf	3,5	;RP0=0, select bank0
  2114     0202  1303               	bcf	3,6	;RP1=0, select bank0
  2115     0203  01A1               	clrf	i1___awdiv@sign
  2116     0204                     i1l948:
  2117     0204  1FF8               	btfss	i1___awdiv@divisor+1,7
  2118     0205  2A07               	goto	u57_21
  2119     0206  2A08               	goto	u57_20
  2120     0207                     u57_21:
  2121     0207  2A0F               	goto	i1l954
  2122     0208                     u57_20:
  2123     0208                     i1l950:
  2124     0208  09F7               	comf	i1___awdiv@divisor,f
  2125     0209  09F8               	comf	i1___awdiv@divisor+1,f
  2126     020A  0AF7               	incf	i1___awdiv@divisor,f
  2127     020B  1903               	skipnz
  2128     020C  0AF8               	incf	i1___awdiv@divisor+1,f
  2129     020D                     i1l952:
  2130     020D  3001               	movlw	1
  2131     020E  00A1               	movwf	i1___awdiv@sign
  2132     020F                     i1l954:
  2133     020F  1FFA               	btfss	i1___awdiv@dividend+1,7
  2134     0210  2A12               	goto	u58_21
  2135     0211  2A13               	goto	u58_20
  2136     0212                     u58_21:
  2137     0212  2A1A               	goto	i1l960
  2138     0213                     u58_20:
  2139     0213                     i1l956:
  2140     0213  09F9               	comf	i1___awdiv@dividend,f
  2141     0214  09FA               	comf	i1___awdiv@dividend+1,f
  2142     0215  0AF9               	incf	i1___awdiv@dividend,f
  2143     0216  1903               	skipnz
  2144     0217  0AFA               	incf	i1___awdiv@dividend+1,f
  2145     0218                     i1l958:
  2146     0218  3001               	movlw	1
  2147     0219  06A1               	xorwf	i1___awdiv@sign,f
  2148     021A                     i1l960:
  2149     021A  01A2               	clrf	i1___awdiv@quotient
  2150     021B  01A3               	clrf	i1___awdiv@quotient+1
  2151     021C                     i1l962:
  2152     021C  0877               	movf	i1___awdiv@divisor,w
  2153     021D  0478               	iorwf	i1___awdiv@divisor+1,w
  2154     021E  1903               	btfsc	3,2
  2155     021F  2A21               	goto	u59_21
  2156     0220  2A22               	goto	u59_20
  2157     0221                     u59_21:
  2158     0221  2A57               	goto	i1l982
  2159     0222                     u59_20:
  2160     0222                     i1l964:
  2161     0222  3001               	movlw	1
  2162     0223  00A0               	movwf	i1___awdiv@counter
  2163     0224  2A2E               	goto	i1l970
  2164     0225                     i1l966:
  2165     0225  3001               	movlw	1
  2166     0226                     u60_25:
  2167     0226  1003               	clrc
  2168     0227  0DF7               	rlf	i1___awdiv@divisor,f
  2169     0228  0DF8               	rlf	i1___awdiv@divisor+1,f
  2170     0229  3EFF               	addlw	-1
  2171     022A  1D03               	skipz
  2172     022B  2A26               	goto	u60_25
  2173     022C                     i1l968:
  2174     022C  3001               	movlw	1
  2175     022D  07A0               	addwf	i1___awdiv@counter,f
  2176     022E                     i1l970:
  2177     022E  1FF8               	btfss	i1___awdiv@divisor+1,7
  2178     022F  2A31               	goto	u61_21
  2179     0230  2A32               	goto	u61_20
  2180     0231                     u61_21:
  2181     0231  2A25               	goto	i1l966
  2182     0232                     u61_20:
  2183     0232                     i1l972:
  2184     0232  3001               	movlw	1
  2185     0233                     u62_25:
  2186     0233  1003               	clrc
  2187     0234  0DA2               	rlf	i1___awdiv@quotient,f
  2188     0235  0DA3               	rlf	i1___awdiv@quotient+1,f
  2189     0236  3EFF               	addlw	-1
  2190     0237  1D03               	skipz
  2191     0238  2A33               	goto	u62_25
  2192     0239  0878               	movf	i1___awdiv@divisor+1,w
  2193     023A  027A               	subwf	i1___awdiv@dividend+1,w
  2194     023B  1D03               	skipz
  2195     023C  2A3F               	goto	u63_25
  2196     023D  0877               	movf	i1___awdiv@divisor,w
  2197     023E  0279               	subwf	i1___awdiv@dividend,w
  2198     023F                     u63_25:
  2199     023F  1C03               	skipc
  2200     0240  2A42               	goto	u63_21
  2201     0241  2A43               	goto	u63_20
  2202     0242                     u63_21:
  2203     0242  2A4A               	goto	i1l978
  2204     0243                     u63_20:
  2205     0243                     i1l974:
  2206     0243  0877               	movf	i1___awdiv@divisor,w
  2207     0244  02F9               	subwf	i1___awdiv@dividend,f
  2208     0245  0878               	movf	i1___awdiv@divisor+1,w
  2209     0246  1C03               	skipc
  2210     0247  03FA               	decf	i1___awdiv@dividend+1,f
  2211     0248  02FA               	subwf	i1___awdiv@dividend+1,f
  2212     0249                     i1l976:
  2213     0249  1422               	bsf	i1___awdiv@quotient,0
  2214     024A                     i1l978:
  2215     024A  3001               	movlw	1
  2216     024B                     u64_25:
  2217     024B  1003               	clrc
  2218     024C  0CF8               	rrf	i1___awdiv@divisor+1,f
  2219     024D  0CF7               	rrf	i1___awdiv@divisor,f
  2220     024E  3EFF               	addlw	-1
  2221     024F  1D03               	skipz
  2222     0250  2A4B               	goto	u64_25
  2223     0251                     i1l980:
  2224     0251  3001               	movlw	1
  2225     0252  02A0               	subwf	i1___awdiv@counter,f
  2226     0253  1D03               	btfss	3,2
  2227     0254  2A56               	goto	u65_21
  2228     0255  2A57               	goto	u65_20
  2229     0256                     u65_21:
  2230     0256  2A32               	goto	i1l972
  2231     0257                     u65_20:
  2232     0257                     i1l982:
  2233     0257  0821               	movf	i1___awdiv@sign,w
  2234     0258  1903               	btfsc	3,2
  2235     0259  2A5B               	goto	u66_21
  2236     025A  2A5C               	goto	u66_20
  2237     025B                     u66_21:
  2238     025B  2A61               	goto	i1l986
  2239     025C                     u66_20:
  2240     025C                     i1l984:
  2241     025C  09A2               	comf	i1___awdiv@quotient,f
  2242     025D  09A3               	comf	i1___awdiv@quotient+1,f
  2243     025E  0AA2               	incf	i1___awdiv@quotient,f
  2244     025F  1903               	skipnz
  2245     0260  0AA3               	incf	i1___awdiv@quotient+1,f
  2246     0261                     i1l986:
  2247     0261  0823               	movf	i1___awdiv@quotient+1,w
  2248     0262  00F8               	movwf	?i1___awdiv+1
  2249     0263  0822               	movf	i1___awdiv@quotient,w
  2250     0264  00F7               	movwf	?i1___awdiv
  2251     0265                     i1l329:
  2252     0265  0008               	return
  2253     0266                     __end_ofi1___awdiv:
  2254                           
  2255                           	psect	text13
  2256     019B                     __ptext13:	
  2257 ;; *************** function _cycleOutput *****************
  2258 ;; Defined at:
  2259 ;;		line 58 in file "main.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  list            1    6[COMMON] PTR int 
  2262 ;;		 -> input_pinpad(14), 
  2263 ;;  size            2    7[COMMON] int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  i               2    4[BANK0 ] int 
  2266 ;;  currentIndex    2    2[BANK0 ] int 
  2267 ;;  nextIndex       2    0[BANK0 ] int 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2277 ;;      Params:         3       0       0       0
  2278 ;;      Locals:         0       6       0       0
  2279 ;;      Temps:          4       0       0       0
  2280 ;;      Totals:         7       6       0       0
  2281 ;;Total ram usage:       13 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 1
  2284 ;; This function calls:
  2285 ;;		___awmod
  2286 ;; This function is called by:
  2287 ;;		_isr
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291     019B                     _cycleOutput:	
  2292                           ;psect for function _cycleOutput
  2293                           
  2294     019B                     i1l1118:	
  2295                           ;incstack = 0
  2296                           ; Regs used in _cycleOutput: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2297                           
  2298                           
  2299                           ;main.c: 59:     int currentIndex = -1;
  2300     019B  30FF               	movlw	255
  2301     019C  1283               	bcf	3,5	;RP0=0, select bank0
  2302     019D  1303               	bcf	3,6	;RP1=0, select bank0
  2303     019E  00A2               	movwf	cycleOutput@currentIndex
  2304     019F  30FF               	movlw	255
  2305     01A0  00A3               	movwf	cycleOutput@currentIndex+1
  2306     01A1                     i1l1120:
  2307                           
  2308                           ;main.c: 61:     for (int i = 0; i < size; i++) {
  2309     01A1  01A4               	clrf	cycleOutput@i
  2310     01A2  01A5               	clrf	cycleOutput@i+1
  2311     01A3  29CE               	goto	i1l49
  2312     01A4                     i1l1122:
  2313                           
  2314                           ;main.c: 62:         if (list[i] == 1) {
  2315     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2316     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2317     01A6  0824               	movf	cycleOutput@i,w
  2318     01A7  00FA               	movwf	??_cycleOutput
  2319     01A8  077A               	addwf	??_cycleOutput,w
  2320     01A9  0777               	addwf	cycleOutput@list,w
  2321     01AA  00FB               	movwf	??_cycleOutput+1
  2322     01AB  087B               	movf	??_cycleOutput+1,w
  2323     01AC  0084               	movwf	4
  2324     01AD  1383               	bcf	3,7	;select IRP bank0
  2325     01AE  0800               	movf	0,w
  2326     01AF  00FC               	movwf	??_cycleOutput+2
  2327     01B0  0A84               	incf	4,f
  2328     01B1  0800               	movf	0,w
  2329     01B2  00FD               	movwf	??_cycleOutput+3
  2330     01B3  037C               	decf	??_cycleOutput+2,w
  2331     01B4  047D               	iorwf	??_cycleOutput+3,w
  2332     01B5  1D03               	btfss	3,2
  2333     01B6  29B8               	goto	u93_21
  2334     01B7  29B9               	goto	u93_20
  2335     01B8                     u93_21:
  2336     01B8  29C8               	goto	i1l1128
  2337     01B9                     u93_20:
  2338     01B9                     i1l1124:
  2339                           
  2340                           ;main.c: 63:             currentIndex = i;
  2341     01B9  0825               	movf	cycleOutput@i+1,w
  2342     01BA  00A3               	movwf	cycleOutput@currentIndex+1
  2343     01BB  0824               	movf	cycleOutput@i,w
  2344     01BC  00A2               	movwf	cycleOutput@currentIndex
  2345     01BD                     i1l1126:
  2346                           
  2347                           ;main.c: 64:             list[i] = 0;
  2348     01BD  0824               	movf	cycleOutput@i,w
  2349     01BE  00FA               	movwf	??_cycleOutput
  2350     01BF  077A               	addwf	??_cycleOutput,w
  2351     01C0  0777               	addwf	cycleOutput@list,w
  2352     01C1  00FB               	movwf	??_cycleOutput+1
  2353     01C2  087B               	movf	??_cycleOutput+1,w
  2354     01C3  0084               	movwf	4
  2355     01C4  0180               	clrf	0
  2356     01C5  0A84               	incf	4,f
  2357     01C6  0180               	clrf	0
  2358                           
  2359                           ;main.c: 65:             break;
  2360     01C7  29DC               	goto	i1l1130
  2361     01C8                     i1l1128:
  2362                           
  2363                           ;main.c: 67:     }
  2364     01C8  3001               	movlw	1
  2365     01C9  07A4               	addwf	cycleOutput@i,f
  2366     01CA  1803               	skipnc
  2367     01CB  0AA5               	incf	cycleOutput@i+1,f
  2368     01CC  3000               	movlw	0
  2369     01CD  07A5               	addwf	cycleOutput@i+1,f
  2370     01CE                     i1l49:
  2371     01CE  0825               	movf	cycleOutput@i+1,w
  2372     01CF  3A80               	xorlw	128
  2373     01D0  00FA               	movwf	??_cycleOutput
  2374     01D1  0879               	movf	cycleOutput@size+1,w
  2375     01D2  3A80               	xorlw	128
  2376     01D3  027A               	subwf	??_cycleOutput,w
  2377     01D4  1D03               	skipz
  2378     01D5  29D8               	goto	u94_25
  2379     01D6  0878               	movf	cycleOutput@size,w
  2380     01D7  0224               	subwf	cycleOutput@i,w
  2381     01D8                     u94_25:
  2382     01D8  1C03               	skipc
  2383     01D9  29DB               	goto	u94_21
  2384     01DA  29DC               	goto	u94_20
  2385     01DB                     u94_21:
  2386     01DB  29A4               	goto	i1l1122
  2387     01DC                     u94_20:
  2388     01DC                     i1l1130:
  2389                           
  2390                           ;main.c: 69:     int nextIndex = (currentIndex + 1) % size;
  2391     01DC  0879               	movf	cycleOutput@size+1,w
  2392     01DD  00F2               	movwf	___awmod@divisor+1
  2393     01DE  0878               	movf	cycleOutput@size,w
  2394     01DF  00F1               	movwf	___awmod@divisor
  2395     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2396     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2397     01E2  0822               	movf	cycleOutput@currentIndex,w
  2398     01E3  3E01               	addlw	1
  2399     01E4  00F3               	movwf	___awmod@dividend
  2400     01E5  0823               	movf	cycleOutput@currentIndex+1,w
  2401     01E6  1803               	skipnc
  2402     01E7  3E01               	addlw	1
  2403     01E8  3E00               	addlw	0
  2404     01E9  00F4               	movwf	___awmod@dividend+1
  2405     01EA  118A  22BE  118A   	fcall	___awmod
  2406     01ED  0872               	movf	?___awmod+1,w
  2407     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2408     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2409     01F0  00A1               	movwf	cycleOutput@nextIndex+1
  2410     01F1  0871               	movf	?___awmod,w
  2411     01F2  00A0               	movwf	cycleOutput@nextIndex
  2412     01F3                     i1l1132:
  2413                           
  2414                           ;main.c: 70:     list[nextIndex] = 1;
  2415     01F3  0820               	movf	cycleOutput@nextIndex,w
  2416     01F4  00FA               	movwf	??_cycleOutput
  2417     01F5  077A               	addwf	??_cycleOutput,w
  2418     01F6  0777               	addwf	cycleOutput@list,w
  2419     01F7  00FB               	movwf	??_cycleOutput+1
  2420     01F8  087B               	movf	??_cycleOutput+1,w
  2421     01F9  0084               	movwf	4
  2422     01FA  3001               	movlw	1
  2423     01FB  1383               	bcf	3,7	;select IRP bank0
  2424     01FC  0080               	movwf	0
  2425     01FD  0A84               	incf	4,f
  2426     01FE  3000               	movlw	0
  2427     01FF  0080               	movwf	0
  2428     0200                     i1l53:
  2429     0200  0008               	return
  2430     0201                     __end_of_cycleOutput:
  2431                           
  2432                           	psect	text14
  2433     02BE                     __ptext14:	
  2434 ;; *************** function ___awmod *****************
  2435 ;; Defined at:
  2436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  divisor         2    0[COMMON] int 
  2439 ;;  dividend        2    2[COMMON] int 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  sign            1    5[COMMON] unsigned char 
  2442 ;;  counter         1    4[COMMON] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  2    0[COMMON] int 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2452 ;;      Params:         4       0       0       0
  2453 ;;      Locals:         2       0       0       0
  2454 ;;      Temps:          0       0       0       0
  2455 ;;      Totals:         6       0       0       0
  2456 ;;Total ram usage:        6 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_cycleOutput
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     02BE                     ___awmod:	
  2466                           ;psect for function ___awmod
  2467                           
  2468     02BE                     i1l1052:	
  2469                           ;incstack = 0
  2470                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2471                           
  2472     02BE  01F6               	clrf	___awmod@sign
  2473     02BF                     i1l1054:
  2474     02BF  1FF4               	btfss	___awmod@dividend+1,7
  2475     02C0  2AC2               	goto	u82_21
  2476     02C1  2AC3               	goto	u82_20
  2477     02C2                     u82_21:
  2478     02C2  2ACA               	goto	i1l1060
  2479     02C3                     u82_20:
  2480     02C3                     i1l1056:
  2481     02C3  09F3               	comf	___awmod@dividend,f
  2482     02C4  09F4               	comf	___awmod@dividend+1,f
  2483     02C5  0AF3               	incf	___awmod@dividend,f
  2484     02C6  1903               	skipnz
  2485     02C7  0AF4               	incf	___awmod@dividend+1,f
  2486     02C8                     i1l1058:
  2487     02C8  3001               	movlw	1
  2488     02C9  00F6               	movwf	___awmod@sign
  2489     02CA                     i1l1060:
  2490     02CA  1FF2               	btfss	___awmod@divisor+1,7
  2491     02CB  2ACD               	goto	u83_21
  2492     02CC  2ACE               	goto	u83_20
  2493     02CD                     u83_21:
  2494     02CD  2AD3               	goto	i1l1064
  2495     02CE                     u83_20:
  2496     02CE                     i1l1062:
  2497     02CE  09F1               	comf	___awmod@divisor,f
  2498     02CF  09F2               	comf	___awmod@divisor+1,f
  2499     02D0  0AF1               	incf	___awmod@divisor,f
  2500     02D1  1903               	skipnz
  2501     02D2  0AF2               	incf	___awmod@divisor+1,f
  2502     02D3                     i1l1064:
  2503     02D3  0871               	movf	___awmod@divisor,w
  2504     02D4  0472               	iorwf	___awmod@divisor+1,w
  2505     02D5  1903               	btfsc	3,2
  2506     02D6  2AD8               	goto	u84_21
  2507     02D7  2AD9               	goto	u84_20
  2508     02D8                     u84_21:
  2509     02D8  2B06               	goto	i1l1082
  2510     02D9                     u84_20:
  2511     02D9                     i1l1066:
  2512     02D9  3001               	movlw	1
  2513     02DA  00F5               	movwf	___awmod@counter
  2514     02DB  2AE5               	goto	i1l1072
  2515     02DC                     i1l1068:
  2516     02DC  3001               	movlw	1
  2517     02DD                     u85_25:
  2518     02DD  1003               	clrc
  2519     02DE  0DF1               	rlf	___awmod@divisor,f
  2520     02DF  0DF2               	rlf	___awmod@divisor+1,f
  2521     02E0  3EFF               	addlw	-1
  2522     02E1  1D03               	skipz
  2523     02E2  2ADD               	goto	u85_25
  2524     02E3                     i1l1070:
  2525     02E3  3001               	movlw	1
  2526     02E4  07F5               	addwf	___awmod@counter,f
  2527     02E5                     i1l1072:
  2528     02E5  1FF2               	btfss	___awmod@divisor+1,7
  2529     02E6  2AE8               	goto	u86_21
  2530     02E7  2AE9               	goto	u86_20
  2531     02E8                     u86_21:
  2532     02E8  2ADC               	goto	i1l1068
  2533     02E9                     u86_20:
  2534     02E9                     i1l1074:
  2535     02E9  0872               	movf	___awmod@divisor+1,w
  2536     02EA  0274               	subwf	___awmod@dividend+1,w
  2537     02EB  1D03               	skipz
  2538     02EC  2AEF               	goto	u87_25
  2539     02ED  0871               	movf	___awmod@divisor,w
  2540     02EE  0273               	subwf	___awmod@dividend,w
  2541     02EF                     u87_25:
  2542     02EF  1C03               	skipc
  2543     02F0  2AF2               	goto	u87_21
  2544     02F1  2AF3               	goto	u87_20
  2545     02F2                     u87_21:
  2546     02F2  2AF9               	goto	i1l1078
  2547     02F3                     u87_20:
  2548     02F3                     i1l1076:
  2549     02F3  0871               	movf	___awmod@divisor,w
  2550     02F4  02F3               	subwf	___awmod@dividend,f
  2551     02F5  0872               	movf	___awmod@divisor+1,w
  2552     02F6  1C03               	skipc
  2553     02F7  03F4               	decf	___awmod@dividend+1,f
  2554     02F8  02F4               	subwf	___awmod@dividend+1,f
  2555     02F9                     i1l1078:
  2556     02F9  3001               	movlw	1
  2557     02FA                     u88_25:
  2558     02FA  1003               	clrc
  2559     02FB  0CF2               	rrf	___awmod@divisor+1,f
  2560     02FC  0CF1               	rrf	___awmod@divisor,f
  2561     02FD  3EFF               	addlw	-1
  2562     02FE  1D03               	skipz
  2563     02FF  2AFA               	goto	u88_25
  2564     0300                     i1l1080:
  2565     0300  3001               	movlw	1
  2566     0301  02F5               	subwf	___awmod@counter,f
  2567     0302  1D03               	btfss	3,2
  2568     0303  2B05               	goto	u89_21
  2569     0304  2B06               	goto	u89_20
  2570     0305                     u89_21:
  2571     0305  2AE9               	goto	i1l1074
  2572     0306                     u89_20:
  2573     0306                     i1l1082:
  2574     0306  0876               	movf	___awmod@sign,w
  2575     0307  1903               	btfsc	3,2
  2576     0308  2B0A               	goto	u90_21
  2577     0309  2B0B               	goto	u90_20
  2578     030A                     u90_21:
  2579     030A  2B10               	goto	i1l1086
  2580     030B                     u90_20:
  2581     030B                     i1l1084:
  2582     030B  09F3               	comf	___awmod@dividend,f
  2583     030C  09F4               	comf	___awmod@dividend+1,f
  2584     030D  0AF3               	incf	___awmod@dividend,f
  2585     030E  1903               	skipnz
  2586     030F  0AF4               	incf	___awmod@dividend+1,f
  2587     0310                     i1l1086:
  2588     0310  0874               	movf	___awmod@dividend+1,w
  2589     0311  00F2               	movwf	?___awmod+1
  2590     0312  0873               	movf	___awmod@dividend,w
  2591     0313  00F1               	movwf	?___awmod
  2592     0314                     i1l342:
  2593     0314  0008               	return
  2594     0315                     __end_of___awmod:
  2595     0001                     ___latbits      equ	1
  2596     007E                     btemp           set	126	;btemp
  2597     007E                     wtemp0          set	126
  2598                           
  2599                           	psect	config
  2600                           
  2601                           ;Config register CONFIG @ 0x2007
  2602                           ;	Oscillator Selection bits
  2603                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2604                           ;	Watchdog Timer Enable bit
  2605                           ;	WDTE = OFF, WDT disabled
  2606                           ;	Power-up Timer Enable bit
  2607                           ;	PWRTE = ON, PWRT enabled
  2608                           ;	RA5/MCLR/VPP Pin Function Select bit
  2609                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  2610                           ;	Brown-out Detect Enable bit
  2611                           ;	BOREN = OFF, BOD disabled
  2612                           ;	Low-Voltage Programming Enable bit
  2613                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  2614                           ;	Data EE Memory Code Protection bit
  2615                           ;	CPD = OFF, Data memory code protection off
  2616                           ;	Flash Program Memory Code Protection bit
  2617                           ;	CP = OFF, Code protection off
  2618     2007                     	org	8199
  2619     2007  3F22               	dw	16162

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     36      56
    BANK1            80     14      42
    BANK2            69      0       0

Pointer List with Targets:

    cycleOutput@list	PTR int  size(1) Largest target is 14
		 -> input_pinpad(BANK0[14]), 

    decodeValue@code	PTR int  size(1) Largest target is 14
		 -> output_pinpad(BANK1[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_cycleOutput
    _decodeValue->i1_beep
    i1_beep->i1___awdiv
    i1___awdiv->i1___wmul
    _cycleOutput->___awmod

Critical Paths under _main in BANK0

    _main->_beep
    _beep->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    _isr->_decodeValue
    _decodeValue->i1_beep
    i1_beep->i1___awdiv

Critical Paths under _main in BANK1

    _main->_beep
    _beep->___awdiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1024
                                             11 BANK1      3     3      0
                               _beep
                    _initialize_pins
                       _setup_timer1
 ---------------------------------------------------------------------------------
 (1) _setup_timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_pins                                      3     3      0     156
                                             24 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _beep                                                 9     7      2     868
                                             34 BANK0      2     0      2
                                              4 BANK1      7     7      0
                            ___awdiv
                             ___wmul
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             5     3      2      74
                                             24 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     142
                                             24 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     451
                                             30 BANK0      4     0      4
                                              0 BANK1      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  7     7      0    1219
                                             17 BANK0      7     7      0
                        _cycleOutput
                        _decodeValue
 ---------------------------------------------------------------------------------
 (4) _decodeValue                                          7     6      1     672
                                             10 BANK0      7     6      1
                             i1_beep
 ---------------------------------------------------------------------------------
 (5) i1_beep                                               9     7      2     581
                                             10 COMMON     3     1      2
                                              4 BANK0      6     6      0
                          i1___awdiv
                           i1___wmul
                         i1_delay_us
 ---------------------------------------------------------------------------------
 (6) i1_delay_us                                           5     3      2      48
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            8     4      4     302
                                              6 COMMON     4     0      4
                                              0 BANK0      4     4      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _cycleOutput                                         13    10      3     547
                                              6 COMMON     7     4      3
                                              0 BANK0      6     6      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _delay_us
   _initialize_pins
   _setup_timer1

 _isr (ROOT)
   _cycleOutput
     ___awmod
   _decodeValue
     i1_beep
       i1___awdiv
         i1___wmul (ARG)
       i1___wmul
       i1_delay_us

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           13      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            69      0       0      0.0%
COMMON              13     13      13    100.0%
BANK0               80     36      56     70.0%
BANK1               80     14      42     52.5%
BANK2               69      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     111      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Nov 29 06:32:18 2024

             _USER_INPUT 00A0                       l40 042D                       l44 0160  
                     l37 041F                       l38 0414                       l46 019A  
                     l72 0452                       l76 02BB                       l79 02BD  
           ___awdiv@sign 00BD                       fsr 0004      ___wmul@multiplicand 003A  
       i1___wmul@product 0075                      l176 03D1                      l329 00A9  
                    l178 03E9                      u970 0283                      u971 0282  
                    u980 02BB                      u981 02BA                      u985 02B7  
             i1_delay_us 042E                      _isr 00AA                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             ?_cycleOutput 0077  
                   l1300 039E                     l1230 03CB                     l1222 040F  
                   l1150 044C                     l1302 03A1                     l1240 0023  
                   l1232 03D8                     l1224 0417                     l1160 0266  
                   l1152 044E                     l1304 03A4                     l1250 003A  
                   l1242 0026                     l1234 03DF                     l1226 03C3  
                   l1170 0283                     l1162 0279                     l1154 044F  
                   l1306 03AA                     l1260 0054                     l1252 003F  
                   l1244 002C                     l1236 03E5                     l1228 03C7  
                   l1172 0297                     l1156 0450                     l1148 0449  
                   l1308 03B1                     l1270 0080                     l1262 005B  
                   l1254 0043                     l1246 0031                     l1174 02A8  
                   l1158 0451                     l1280 009F                     l1272 0083  
                   l1264 005F                     l1256 0047                     l1248 0035  
                   l1176 02AE                     l1168 027B                     l1274 008B  
                   l1266 0065                     l1258 004F                     l1290 0163  
                   l1268 007A                     l1276 0093                     l1292 0172  
                   l1284 0131                     l1278 009A                     l1294 0184  
                   l1286 0137                     l1296 018C                     l1288 015D  
                   l1298 039B                     ?_isr 0071                     u1100 004F  
                   u1101 004E                     u1030 042D                     u1031 042C  
                   u1120 0065                     u1040 03CB                     u1121 0064  
                   u1041 03CA                     u1115 0055                     u1035 0429  
                   u1140 007A                     u1141 0079                     u1070 03E5  
                   u1135 0068                     u1071 03E4                     u1055 03D2  
                   u1207 03B9                     u1160 0093                     u1080 002C  
                   u1161 0092                     u1145 0076                     u1081 002B  
                   u1065 03D9                     u1170 009A                     u1090 003A  
                   u1171 0099                     u1155 0085                     u1091 0039  
                   u1180 019A                     u1181 0199                     u1190 03AA  
                   u1191 03A9                     u1185 0196                     i1l40 0448  
                   i1l44 033A                     i1l53 0200                     i1l37 043A  
                   i1l38 0431                     i1l46 0364                     i1l49 01CE  
                   i1l66 00F4                     i1l59 039A                     i1l69 0126  
                   _beep 0131                     _main 039B                     _open 0044  
                   btemp 007E                     start 0011        i1beep@duration_ms 007B  
                  ??_isr 0031                    ?_beep 0042                    ?_main 0071  
         i1___awdiv@sign 0021          __end_of___awdiv 00AA          __end_of___awmod 0315  
                  _CMCON 001F          ___awdiv@divisor 003E                    i1l342 0314  
                  i1l176 03F6                    i1l329 0265                    i1l178 040E  
                  i1l930 0434                    i1l940 0404                    i1l932 03EA  
                  i1l950 0208                    i1l942 040A                    i1l934 03EC  
                  i1l960 021A                    i1l952 020D                    i1l936 03F0  
                  i1l928 042E                    i1l970 022E                    i1l962 021C  
                  i1l954 020F                    i1l946 0201                    i1l938 03FD  
                  i1l980 0251                    i1l972 0232                    i1l964 0222  
                  i1l956 0213                    i1l948 0204                    i1l974 0243  
                  i1l966 0225                    i1l982 0257                    i1l958 0218  
                  i1l984 025C                    i1l976 0249                    i1l968 022C  
                  i1l986 0261                    i1l978 024A          ___awdiv@counter 00BC  
                  _TMR1H 000F                    _TMR1L 000E                    u52_20 0448  
                  u52_21 0447                    u60_25 0226                    u52_25 0444  
                  u61_20 0232                    u53_20 03F0                    u61_21 0231  
                  u53_21 03EF                    u62_25 0233                    u54_25 03F7  
                  u63_20 0243                    u63_21 0242                    u63_25 023F  
                  u55_25 03FE                    u56_20 040A                    u56_21 0409  
                  u64_25 024B                    u65_20 0257                    u57_20 0208  
                  u65_21 0256                    u57_21 0207                    u90_20 030B  
                  u82_20 02C3                    u66_20 025C                    u58_20 0213  
                  u90_21 030A                    u82_21 02C2                    u66_21 025B  
                  u58_21 0212                    u83_20 02CE                    u59_20 0222  
                  u91_20 0364                    u83_21 02CD                    u59_21 0221  
                  u91_21 0363                    u91_25 0360                    u84_20 02D9  
                  u84_21 02D8                    u93_20 01B9                    u93_21 01B8  
                  u85_25 02DD                    u86_20 02E9                    u94_20 01DC  
                  u86_21 02E8                    u94_21 01DB                    u94_25 01D8  
                  u87_20 02F3                    u95_20 037E                    u87_21 02F2  
                  u95_21 037D                    u87_25 02EF                    u96_20 039A  
                  u96_21 0399                    u88_25 02FA                    u96_25 0396  
                  u89_20 0306                    u89_21 0305                    u99_20 00AE  
                  u99_21 00AD        ??_initialize_pins 0038             _output_index 0046  
                  beep@i 00C3              i1delay_us@i 0074                    pclath 000A  
       __end_ofi1___wmul 040F                    status 0003      i1___wmul@multiplier 0071  
                  wtemp0 007E          decodeValue@code 002A          __initialization 0013  
           __end_of_beep 019B             __end_of_main 03C3                   ??_beep 00C0  
                 ??_main 00C7              ?i1_delay_us 0071         ___awdiv@dividend 0040  
                 u100_20 00D0                   u100_21 00CF                   u100_25 00CC  
                 u101_20 00DF                   u101_21 00DE                   i1l1100 034E  
                 u101_25 00DB                   i1l1102 0356                   i1l1120 01A1  
                 i1l1130 01DC                   i1l1122 01A4                   i1l1202 0111  
                 i1l1060 02CA                   i1l1052 02BE                   i1l1132 01F3  
                 i1l1124 01B9                   i1l1140 0369                   i1l1204 0115  
                 i1l1070 02E3                   i1l1062 02CE                   i1l1054 02BF  
                 i1l1126 01BD                   i1l1118 019B                   i1l1142 037E  
                 i1l1134 0365                   i1l1206 011A                   i1l1080 0300  
                 i1l1072 02E5                   i1l1064 02D3                   i1l1056 02C3  
                 i1l1128 01C8                   i1l1144 0385                   i1l1208 0123  
                 i1l1074 02E9                   i1l1066 02D9                   i1l1082 0306  
                 i1l1058 02C8                   i1l1090 0315                   i1l1146 038D  
                 i1l1084 030B                   i1l1076 02F3                   i1l1068 02DC  
                 i1l1092 031B                   i1l1180 00AE                   i1l1086 0310  
                 i1l1078 02F9                   i1l1094 0337                   i1l1190 00D0  
                 i1l1182 00AF                   i1l1096 033D                   i1l1192 00DF  
                 i1l1184 00B1                   i1l1098 0344                   i1l1194 00E2  
                 i1l1186 00B2                   i1l1178 00AA                   i1l1196 00ED  
                 i1l1188 00C1                   i1l1198 00F7                   u121_27 00BA  
                 i1_beep 0315         __end_of_delay_us 042E                   ___wmul 03C3  
              ??___awdiv 0042                ??___awmod 0075            _output_pinpad 00AE  
       ___awdiv@quotient 00BE          ___awmod@divisor 0071          ___awmod@counter 0075  
      __end_ofi1___awdiv 0266             cycleOutput@i 0024                   saved_w 007E  
__end_of__initialization 0020           __pcstackCOMMON 0071                ?i1___wmul 0071  
             __pbssBANK0 0044               __pbssBANK1 00A0                  ?i1_beep 007B  
             __pmaintext 039B                  ?___wmul 0038     cycleOutput@nextIndex 0020  
             __pintentry 0004          _initialize_pins 0266               ??i1___wmul 0075  
     i1___awdiv@dividend 0079                ?_delay_us 0038         beep@total_cycles 00C1  
                i1beep@i 0026       i1___awdiv@quotient 0022                  ___awdiv 0023  
                ___awmod 02BE                  __ptext1 0449                  __ptext2 0266  
                __ptext3 0131                  __ptext4 040F                  __ptext5 03C3  
                __ptext6 0023                  __ptext7 00AA                  __ptext8 0365  
                __ptext9 0315             ??i1_delay_us 0073                _T1CONbits 0010  
          ??_decodeValue 002B         ___awmod@dividend 0073     i1beep@half_period_us 0028  
             ??_delay_us 003A                  clrloop0 0454     end_of_initialization 0020  
__end_of_initialize_pins 02BE       __end_ofi1_delay_us 0449          beep@duration_ms 0042  
  i1___wmul@multiplicand 0073                _PORTAbits 0005                _PORTBbits 0006  
          ?_setup_timer1 0071                _TRISAbits 0085                _TRISBbits 0086  
              i1___awdiv 0201      __end_of_decodeValue 039B           __end_ofi1_beep 0365  
       initialize_pins@i 0039           __end_of___wmul 03EA       i1beep@total_cycles 0024  
         ??_setup_timer1 0038      start_initialization 0013              __end_of_isr 0131  
             ?i1___awdiv 0077            ??_cycleOutput 007A                 ??i1_beep 007D  
       ?_initialize_pins 0071                 ??___wmul 003C              _decodeValue 0365  
              ___latbits 0001            __pcstackBANK0 0020            __pcstackBANK1 00BC  
cycleOutput@currentIndex 0022             decodeValue@i 002F      __end_of_cycleOutput 0201  
               ?___awdiv 003E                 ?___awmod 0071        i1___awdiv@divisor 0077  
      i1___awdiv@counter 0020       beep@half_period_us 00C5              ??i1___awdiv 007B  
      interrupt_function 0004           ___wmul@product 003C                delay_us@i 003B  
              clear_ram0 0453                 _PIE1bits 008C     __end_of_setup_timer1 0453  
               _PIR1bits 000C             _input_pinpad 004A        ___wmul@multiplier 0038  
               i1___wmul 03EA              _cycleOutput 019B             delay_us@time 0038  
        cycleOutput@list 0077          cycleOutput@size 0078                 _delay_us 040F  
               __ptext10 042E                 __ptext11 03EA                 __ptext12 0201  
               __ptext13 019B                 __ptext14 02BE           i1delay_us@time 0071  
           ?_decodeValue 002A               _INTCONbits 000B                 intlevel1 0000  
           _sensor_index 0048             _setup_timer1 0449  
