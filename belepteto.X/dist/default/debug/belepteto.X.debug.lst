

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 01 02:01:54 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F648A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0004                     fsr             equ	4
    55     0004                     fsr0            equ	4
    56     0000                     indf            equ	0
    57     0000                     indf0           equ	0
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0000                     INDF            equ	0	;# 
    63     0001                     TMR0            equ	1	;# 
    64     0002                     PCL             equ	2	;# 
    65     0003                     STATUS          equ	3	;# 
    66     0004                     FSR             equ	4	;# 
    67     0005                     PORTA           equ	5	;# 
    68     0006                     PORTB           equ	6	;# 
    69     000A                     PCLATH          equ	10	;# 
    70     000B                     INTCON          equ	11	;# 
    71     000C                     PIR1            equ	12	;# 
    72     000E                     TMR1            equ	14	;# 
    73     000E                     TMR1L           equ	14	;# 
    74     000F                     TMR1H           equ	15	;# 
    75     0010                     T1CON           equ	16	;# 
    76     0011                     TMR2            equ	17	;# 
    77     0012                     T2CON           equ	18	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001F                     CMCON           equ	31	;# 
    86     0081                     OPTION_REG      equ	129	;# 
    87     0085                     TRISA           equ	133	;# 
    88     0086                     TRISB           equ	134	;# 
    89     008C                     PIE1            equ	140	;# 
    90     008E                     PCON            equ	142	;# 
    91     0092                     PR2             equ	146	;# 
    92     0098                     TXSTA           equ	152	;# 
    93     0099                     SPBRG           equ	153	;# 
    94     009A                     EEDATA          equ	154	;# 
    95     009B                     EEADR           equ	155	;# 
    96     009C                     EECON1          equ	156	;# 
    97     009D                     EECON2          equ	157	;# 
    98     009F                     VRCON           equ	159	;# 
    99     0000                     INDF            equ	0	;# 
   100     0001                     TMR0            equ	1	;# 
   101     0002                     PCL             equ	2	;# 
   102     0003                     STATUS          equ	3	;# 
   103     0004                     FSR             equ	4	;# 
   104     0005                     PORTA           equ	5	;# 
   105     0006                     PORTB           equ	6	;# 
   106     000A                     PCLATH          equ	10	;# 
   107     000B                     INTCON          equ	11	;# 
   108     000C                     PIR1            equ	12	;# 
   109     000E                     TMR1            equ	14	;# 
   110     000E                     TMR1L           equ	14	;# 
   111     000F                     TMR1H           equ	15	;# 
   112     0010                     T1CON           equ	16	;# 
   113     0011                     TMR2            equ	17	;# 
   114     0012                     T2CON           equ	18	;# 
   115     0015                     CCPR1           equ	21	;# 
   116     0015                     CCPR1L          equ	21	;# 
   117     0016                     CCPR1H          equ	22	;# 
   118     0017                     CCP1CON         equ	23	;# 
   119     0018                     RCSTA           equ	24	;# 
   120     0019                     TXREG           equ	25	;# 
   121     001A                     RCREG           equ	26	;# 
   122     001F                     CMCON           equ	31	;# 
   123     0081                     OPTION_REG      equ	129	;# 
   124     0085                     TRISA           equ	133	;# 
   125     0086                     TRISB           equ	134	;# 
   126     008C                     PIE1            equ	140	;# 
   127     008E                     PCON            equ	142	;# 
   128     0092                     PR2             equ	146	;# 
   129     0098                     TXSTA           equ	152	;# 
   130     0099                     SPBRG           equ	153	;# 
   131     009A                     EEDATA          equ	154	;# 
   132     009B                     EEADR           equ	155	;# 
   133     009C                     EECON1          equ	156	;# 
   134     009D                     EECON2          equ	157	;# 
   135     009F                     VRCON           equ	159	;# 
   136                           
   137                           	psect	idataBANK0
   138     05F0                     __pidataBANK0:
   139                           
   140                           ;initializer for _open
   141     05F0  3401               	retlw	1
   142     05F1  3400               	retlw	0
   143     0006                     _PORTBbits      set	6
   144     000B                     _INTCONbits     set	11
   145     0005                     _PORTAbits      set	5
   146     001F                     _CMCON          set	31
   147     0085                     _TRISAbits      set	133
   148     0086                     _TRISBbits      set	134
   149                           
   150                           	psect	cinit
   151     07EE                     start_initialization:	
   152                           ; #config settings
   153                           
   154     07EE                     __initialization:
   155                           
   156                           ; Initialize objects allocated to BANK0
   157     07EE  118A  25F0  118A   	fcall	__pidataBANK0	;fetch initializer
   158     07F1  00DF               	movwf	__pdataBANK0& (0+127)
   159     07F2  118A  25F1  118A   	fcall	__pidataBANK0+1	;fetch initializer
   160     07F5  00E0               	movwf	(__pdataBANK0+1)& (0+127)
   161                           
   162                           ; Clear objects allocated to BANK0
   163     07F6  1383               	bcf	3,7	;select IRP bank0
   164     07F7  3020               	movlw	low __pbssBANK0
   165     07F8  0084               	movwf	4
   166     07F9  304E               	movlw	low (__pbssBANK0+46)
   167     07FA  118A  25F2  118A   	fcall	clear_ram0
   168     07FD                     end_of_initialization:	
   169                           ;End of C runtime variable initialization code
   170                           
   171     07FD                     __end_of__initialization:
   172     07FD  0183               	clrf	3
   173     07FE  118A  2F47         	ljmp	_main	;jump to C main() function
   174                           
   175                           	psect	bssBANK0
   176     0020                     __pbssBANK0:
   177     0020                     _USER_INPUT:
   178     0020                     	ds	14
   179     002E                     _inputPinpad:
   180     002E                     	ds	14
   181     003C                     _outputPinpad:
   182     003C                     	ds	14
   183     004A                     _outputIndex:
   184     004A                     	ds	2
   185     004C                     _sensorIndex:
   186     004C                     	ds	2
   187                           
   188                           	psect	dataBANK0
   189     005F                     __pdataBANK0:
   190     005F                     _open:
   191     005F                     	ds	2
   192                           
   193                           	psect	clrtext
   194     05F2                     clear_ram0:	
   195                           ;	Called with FSR containing the base address, and
   196                           ;	W with the last address+1
   197                           
   198     05F2  0064               	clrwdt	;clear the watchdog before getting into this loop
   199     05F3                     clrloop0:
   200     05F3  0180               	clrf	0	;clear RAM location pointed to by FSR
   201     05F4  0A84               	incf	4,f	;increment pointer
   202     05F5  0604               	xorwf	4,w	;XOR with final address
   203     05F6  1903               	btfsc	3,2	;have we reached the end yet?
   204     05F7  3400               	retlw	0	;all done for this memory range, return
   205     05F8  0604               	xorwf	4,w	;XOR again to restore value
   206     05F9  2DF3               	goto	clrloop0	;do the next byte
   207                           
   208                           	psect	cstackCOMMON
   209     0071                     __pcstackCOMMON:
   210     0071                     ?_initialize_pins:
   211     0071                     ?_delay_us:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0071                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0071                     ?___wmul:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0071                     delay_us@time:	
   221                           ; 2 bytes @ 0x0
   222                           
   223     0071                     ___wmul@multiplier:	
   224                           ; 2 bytes @ 0x0
   225                           
   226     0071                     ??_initialize_pins:	
   227                           ; 2 bytes @ 0x0
   228                           
   229                           
   230                           ; 1 bytes @ 0x0
   231     0071                     	ds	1
   232     0072                     initialize_pins@i:
   233                           
   234                           ; 2 bytes @ 0x1
   235     0072                     	ds	1
   236     0073                     ___wmul@multiplicand:
   237     0073                     ??_delay_us:	
   238                           ; 2 bytes @ 0x2
   239                           
   240                           
   241                           ; 1 bytes @ 0x2
   242     0073                     	ds	1
   243     0074                     delay_us@i:
   244                           
   245                           ; 2 bytes @ 0x3
   246     0074                     	ds	1
   247     0075                     ___wmul@product:
   248     0075                     ??___wmul:	
   249                           ; 2 bytes @ 0x4
   250                           
   251                           
   252                           ; 1 bytes @ 0x4
   253     0075                     	ds	2
   254     0077                     ?___awdiv:
   255     0077                     ___awdiv@divisor:	
   256                           ; 2 bytes @ 0x6
   257                           
   258                           
   259                           ; 2 bytes @ 0x6
   260     0077                     	ds	2
   261     0079                     ___awdiv@dividend:
   262                           
   263                           ; 2 bytes @ 0x8
   264     0079                     	ds	2
   265     007B                     ?_beep:
   266     007B                     beep@duration_ms:	
   267                           ; 1 bytes @ 0xA
   268                           
   269     007B                     ??___awdiv:	
   270                           ; 2 bytes @ 0xA
   271                           
   272                           
   273                           ; 1 bytes @ 0xA
   274     007B                     	ds	2
   275     007D                     ??_beep:
   276                           
   277                           ; 1 bytes @ 0xC
   278     007D                     	ds	1
   279                           
   280                           	psect	cstackBANK0
   281     004E                     __pcstackBANK0:
   282     004E                     ___awdiv@counter:
   283                           
   284                           ; 1 bytes @ 0x0
   285     004E                     	ds	1
   286     004F                     ___awdiv@sign:
   287                           
   288                           ; 1 bytes @ 0x1
   289     004F                     	ds	1
   290     0050                     ___awdiv@quotient:
   291                           
   292                           ; 2 bytes @ 0x2
   293     0050                     	ds	2
   294     0052                     beep@total_cycles:
   295                           
   296                           ; 2 bytes @ 0x4
   297     0052                     	ds	2
   298     0054                     beep@i:
   299                           
   300                           ; 2 bytes @ 0x6
   301     0054                     	ds	2
   302     0056                     beep@half_period_us:
   303                           
   304                           ; 2 bytes @ 0x8
   305     0056                     	ds	2
   306     0058                     ??_main:
   307                           
   308                           ; 1 bytes @ 0xA
   309     0058                     	ds	3
   310     005B                     main@i:
   311                           
   312                           ; 2 bytes @ 0xD
   313     005B                     	ds	2
   314     005D                     main@i_220:
   315                           
   316                           ; 2 bytes @ 0xF
   317     005D                     	ds	2
   318                           
   319                           	psect	maintext
   320     0747                     __pmaintext:	
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 121 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  i               2   15[BANK0 ] int 
   331 ;;  i               2   13[BANK0 ] int 
   332 ;;  itter           2    0        int 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   342 ;;      Params:         0       0       0       0
   343 ;;      Locals:         0       4       0       0
   344 ;;      Temps:          0       3       0       0
   345 ;;      Totals:         0       7       0       0
   346 ;;Total ram usage:        7 bytes
   347 ;; Hardware stack levels required when called: 2
   348 ;; This function calls:
   349 ;;		_beep
   350 ;;		_initialize_pins
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356     0747                     _main:	
   357                           ;psect for function _main
   358                           
   359     0747                     l890:	
   360                           ;incstack = 0
   361                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   362                           
   363                           
   364                           ;main.c: 122:     initialize_pins();
   365     0747  118A  268A  118A   	fcall	_initialize_pins
   366     074A                     l892:
   367                           
   368                           ;main.c: 123:     PORTBbits.RB2 = 1;
   369     074A  1283               	bcf	3,5	;RP0=0, select bank0
   370     074B  1303               	bcf	3,6	;RP1=0, select bank0
   371     074C  1506               	bsf	6,2	;volatile
   372     074D                     l894:
   373                           
   374                           ;main.c: 124:     PORTBbits.RB0 = 0;
   375     074D  1006               	bcf	6,0	;volatile
   376     074E                     l896:
   377     074E                     l898:
   378                           
   379                           ;main.c: 127:         if (PORTAbits.RA2 == 0) {
   380     074E  1905               	btfsc	5,2	;volatile
   381     074F  2F51               	goto	u421
   382     0750  2F52               	goto	u420
   383     0751                     u421:
   384     0751  2F68               	goto	l904
   385     0752                     u420:
   386     0752                     l900:
   387                           
   388                           ;main.c: 128:             beep(1000);
   389     0752  30E8               	movlw	232
   390     0753  00FB               	movwf	beep@duration_ms
   391     0754  3003               	movlw	3
   392     0755  00FC               	movwf	beep@duration_ms+1
   393     0756  118A  263A  118A   	fcall	_beep
   394     0759                     l902:
   395                           
   396                           ;main.c: 129:             _delay((unsigned long)((50)*(20000000/4000.0)));
   397     0759  3002               	movlw	2
   398     075A  1283               	bcf	3,5	;RP0=0, select bank0
   399     075B  1303               	bcf	3,6	;RP1=0, select bank0
   400     075C  00DA               	movwf	??_main+2
   401     075D  3045               	movlw	69
   402     075E  00D9               	movwf	??_main+1
   403     075F  30A9               	movlw	169
   404     0760  00D8               	movwf	??_main
   405     0761                     u457:
   406     0761  0BD8               	decfsz	??_main,f
   407     0762  2F61               	goto	u457
   408     0763  0BD9               	decfsz	??_main+1,f
   409     0764  2F61               	goto	u457
   410     0765  0BDA               	decfsz	??_main+2,f
   411     0766  2F61               	goto	u457
   412     0767  0000               	nop
   413     0768                     l904:
   414                           
   415                           ;main.c: 132:         PORTBbits.RB7 = 0;
   416     0768  1283               	bcf	3,5	;RP0=0, select bank0
   417     0769  1303               	bcf	3,6	;RP1=0, select bank0
   418     076A  1386               	bcf	6,7	;volatile
   419     076B                     l906:
   420                           
   421                           ;main.c: 133:         for(int i = 0; i< 7; i++)
   422     076B  01DB               	clrf	main@i
   423     076C  01DC               	clrf	main@i+1
   424     076D                     l66:
   425                           
   426                           ;main.c: 134:         {;main.c: 135:             PORTBbits.RB6 = 1;
   427     076D  1283               	bcf	3,5	;RP0=0, select bank0
   428     076E  1303               	bcf	3,6	;RP1=0, select bank0
   429     076F  1706               	bsf	6,6	;volatile
   430     0770                     l912:
   431                           
   432                           ;main.c: 136:             _delay((unsigned long)((1)*(20000000/4000.0)));
   433     0770  3007               	movlw	7
   434     0771  1283               	bcf	3,5	;RP0=0, select bank0
   435     0772  1303               	bcf	3,6	;RP1=0, select bank0
   436     0773  00D9               	movwf	??_main+1
   437     0774  307C               	movlw	124
   438     0775  00D8               	movwf	??_main
   439     0776                     u467:
   440     0776  0BD8               	decfsz	??_main,f
   441     0777  2F76               	goto	u467
   442     0778  0BD9               	decfsz	??_main+1,f
   443     0779  2F76               	goto	u467
   444     077A  2F7B               	nop2
   445     077B                     l914:
   446                           
   447                           ;main.c: 137:             PORTBbits.RB6 = 0;
   448     077B  1283               	bcf	3,5	;RP0=0, select bank0
   449     077C  1303               	bcf	3,6	;RP1=0, select bank0
   450     077D  1306               	bcf	6,6	;volatile
   451                           
   452                           ;main.c: 138:         }
   453     077E  3001               	movlw	1
   454     077F  07DB               	addwf	main@i,f
   455     0780  1803               	skipnc
   456     0781  0ADC               	incf	main@i+1,f
   457     0782  3000               	movlw	0
   458     0783  07DC               	addwf	main@i+1,f
   459     0784                     l916:
   460     0784  085C               	movf	main@i+1,w
   461     0785  3A80               	xorlw	128
   462     0786  00FF               	movwf	btemp+1
   463     0787  3080               	movlw	128
   464     0788  027F               	subwf	btemp+1,w
   465     0789  1D03               	skipz
   466     078A  2F8D               	goto	u435
   467     078B  3007               	movlw	7
   468     078C  025B               	subwf	main@i,w
   469     078D                     u435:
   470     078D  1C03               	skipc
   471     078E  2F90               	goto	u431
   472     078F  2F91               	goto	u430
   473     0790                     u431:
   474     0790  2F6D               	goto	l66
   475     0791                     u430:
   476     0791                     l67:
   477                           
   478                           ;main.c: 139:         PORTBbits.RB7 = 1;
   479     0791  1283               	bcf	3,5	;RP0=0, select bank0
   480     0792  1303               	bcf	3,6	;RP1=0, select bank0
   481     0793  1786               	bsf	6,7	;volatile
   482                           
   483                           ;main.c: 140:         PORTBbits.RB6 = 1;
   484     0794  1706               	bsf	6,6	;volatile
   485     0795                     l918:
   486                           
   487                           ;main.c: 141:         _delay((unsigned long)((1)*(20000000/4000.0)));
   488     0795  3007               	movlw	7
   489     0796  1283               	bcf	3,5	;RP0=0, select bank0
   490     0797  1303               	bcf	3,6	;RP1=0, select bank0
   491     0798  00D9               	movwf	??_main+1
   492     0799  307C               	movlw	124
   493     079A  00D8               	movwf	??_main
   494     079B                     u477:
   495     079B  0BD8               	decfsz	??_main,f
   496     079C  2F9B               	goto	u477
   497     079D  0BD9               	decfsz	??_main+1,f
   498     079E  2F9B               	goto	u477
   499     079F  2FA0               	nop2
   500     07A0                     l920:
   501                           
   502                           ;main.c: 142:         PORTBbits.RB6 = 0;
   503     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   504     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   505     07A2  1306               	bcf	6,6	;volatile
   506     07A3                     l922:
   507                           
   508                           ;main.c: 143:         PORTBbits.RB7 = 0;
   509     07A3  1386               	bcf	6,7	;volatile
   510     07A4                     l924:
   511                           
   512                           ;main.c: 144:         for(int i = 0; i< 7; i++)
   513     07A4  01DD               	clrf	main@i_220
   514     07A5  01DE               	clrf	main@i_220+1
   515     07A6                     l68:
   516                           
   517                           ;main.c: 145:         {;main.c: 146:             PORTBbits.RB6 = 1;
   518     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   519     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   520     07A8  1706               	bsf	6,6	;volatile
   521     07A9                     l930:
   522                           
   523                           ;main.c: 147:             _delay((unsigned long)((1)*(20000000/4000.0)));
   524     07A9  3007               	movlw	7
   525     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   526     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   527     07AC  00D9               	movwf	??_main+1
   528     07AD  307C               	movlw	124
   529     07AE  00D8               	movwf	??_main
   530     07AF                     u487:
   531     07AF  0BD8               	decfsz	??_main,f
   532     07B0  2FAF               	goto	u487
   533     07B1  0BD9               	decfsz	??_main+1,f
   534     07B2  2FAF               	goto	u487
   535     07B3  2FB4               	nop2
   536     07B4                     l932:
   537                           
   538                           ;main.c: 148:             PORTBbits.RB6 = 0;
   539     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   540     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   541     07B6  1306               	bcf	6,6	;volatile
   542                           
   543                           ;main.c: 149:         }
   544     07B7  3001               	movlw	1
   545     07B8  07DD               	addwf	main@i_220,f
   546     07B9  1803               	skipnc
   547     07BA  0ADE               	incf	main@i_220+1,f
   548     07BB  3000               	movlw	0
   549     07BC  07DE               	addwf	main@i_220+1,f
   550     07BD                     l934:
   551     07BD  085E               	movf	main@i_220+1,w
   552     07BE  3A80               	xorlw	128
   553     07BF  00FF               	movwf	btemp+1
   554     07C0  3080               	movlw	128
   555     07C1  027F               	subwf	btemp+1,w
   556     07C2  1D03               	skipz
   557     07C3  2FC6               	goto	u445
   558     07C4  3007               	movlw	7
   559     07C5  025D               	subwf	main@i_220,w
   560     07C6                     u445:
   561     07C6  1C03               	skipc
   562     07C7  2FC9               	goto	u441
   563     07C8  2FCA               	goto	u440
   564     07C9                     u441:
   565     07C9  2FA6               	goto	l68
   566     07CA                     u440:
   567     07CA                     l69:
   568                           
   569                           ;main.c: 151:         PORTBbits.RB7 = 1;
   570     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   571     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   572     07CC  1786               	bsf	6,7	;volatile
   573                           
   574                           ;main.c: 152:         PORTBbits.RB6 = 1;
   575     07CD  1706               	bsf	6,6	;volatile
   576     07CE                     l936:
   577                           
   578                           ;main.c: 153:         _delay((unsigned long)((1)*(20000000/4000.0)));
   579     07CE  3007               	movlw	7
   580     07CF  1283               	bcf	3,5	;RP0=0, select bank0
   581     07D0  1303               	bcf	3,6	;RP1=0, select bank0
   582     07D1  00D9               	movwf	??_main+1
   583     07D2  307C               	movlw	124
   584     07D3  00D8               	movwf	??_main
   585     07D4                     u497:
   586     07D4  0BD8               	decfsz	??_main,f
   587     07D5  2FD4               	goto	u497
   588     07D6  0BD9               	decfsz	??_main+1,f
   589     07D7  2FD4               	goto	u497
   590     07D8  2FD9               	nop2
   591     07D9                     l938:
   592                           
   593                           ;main.c: 154:         PORTBbits.RB6 = 0;
   594     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   595     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   596     07DB  1306               	bcf	6,6	;volatile
   597     07DC                     l940:
   598                           
   599                           ;main.c: 155:                 PORTBbits.RB2 = 0;
   600     07DC  1106               	bcf	6,2	;volatile
   601                           
   602                           ;main.c: 156:         _delay((unsigned long)((1)*(20000000/4000.0)));
   603     07DD  3007               	movlw	7
   604     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   605     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   606     07E0  00D9               	movwf	??_main+1
   607     07E1  307C               	movlw	124
   608     07E2  00D8               	movwf	??_main
   609     07E3                     u507:
   610     07E3  0BD8               	decfsz	??_main,f
   611     07E4  2FE3               	goto	u507
   612     07E5  0BD9               	decfsz	??_main+1,f
   613     07E6  2FE3               	goto	u507
   614     07E7  2FE8               	nop2
   615     07E8                     l942:
   616                           
   617                           ;main.c: 157:         PORTBbits.RB2 = 1;
   618     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   619     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   620     07EA  1506               	bsf	6,2	;volatile
   621     07EB  2F4E               	goto	l898
   622     07EC  118A  2801         	ljmp	start
   623     07EE                     __end_of_main:
   624                           
   625                           	psect	text1
   626     068A                     __ptext1:	
   627 ;; *************** function _initialize_pins *****************
   628 ;; Defined at:
   629 ;;		line 38 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  i               2    1[COMMON] int 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   643 ;;      Params:         0       0       0       0
   644 ;;      Locals:         2       0       0       0
   645 ;;      Temps:          1       0       0       0
   646 ;;      Totals:         3       0       0       0
   647 ;;Total ram usage:        3 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656     068A                     _initialize_pins:	
   657                           ;psect for function _initialize_pins
   658                           
   659     068A                     l858:	
   660                           ;incstack = 0
   661                           ; Regs used in _initialize_pins: [wreg-fsr0h+status,2+status,0+btemp+1]
   662                           
   663                           
   664                           ;main.c: 39:     CMCON = 0x07;
   665     068A  3007               	movlw	7
   666     068B  1283               	bcf	3,5	;RP0=0, select bank0
   667     068C  1303               	bcf	3,6	;RP1=0, select bank0
   668     068D  009F               	movwf	31	;volatile
   669                           
   670                           ;main.c: 40:     TRISBbits.TRISB0 = 0;
   671     068E  1683               	bsf	3,5	;RP0=1, select bank1
   672     068F  1303               	bcf	3,6	;RP1=0, select bank1
   673     0690  1006               	bcf	6,0	;volatile
   674                           
   675                           ;main.c: 41:     TRISAbits.TRISA3 = 0;
   676     0691  1185               	bcf	5,3	;volatile
   677                           
   678                           ;main.c: 42:     TRISBbits.TRISB2 = 0;
   679     0692  1106               	bcf	6,2	;volatile
   680                           
   681                           ;main.c: 43:     TRISBbits.TRISB1 = 0;
   682     0693  1086               	bcf	6,1	;volatile
   683                           
   684                           ;main.c: 45:     TRISAbits.TRISA1 = 1;
   685     0694  1485               	bsf	5,1	;volatile
   686                           
   687                           ;main.c: 46:     TRISAbits.TRISA2 = 1;
   688     0695  1505               	bsf	5,2	;volatile
   689                           
   690                           ;main.c: 47:     TRISBbits.TRISB7 = 0;
   691     0696  1386               	bcf	6,7	;volatile
   692                           
   693                           ;main.c: 48:     TRISBbits.TRISB6 = 0;
   694     0697  1306               	bcf	6,6	;volatile
   695                           
   696                           ;main.c: 49:     PORTAbits.RA3 = 1;
   697     0698  1283               	bcf	3,5	;RP0=0, select bank0
   698     0699  1303               	bcf	3,6	;RP1=0, select bank0
   699     069A  1585               	bsf	5,3	;volatile
   700     069B                     l860:
   701                           
   702                           ;main.c: 50:     for(int i =0; i<7; i++)
   703     069B  01F2               	clrf	initialize_pins@i
   704     069C  01F3               	clrf	initialize_pins@i+1
   705     069D                     l866:
   706                           
   707                           ;main.c: 51:     {;main.c: 52:         if(i == 0)
   708     069D  0872               	movf	initialize_pins@i,w
   709     069E  0473               	iorwf	initialize_pins@i+1,w
   710     069F  1D03               	btfss	3,2
   711     06A0  2EA2               	goto	u391
   712     06A1  2EA3               	goto	u390
   713     06A2                     u391:
   714     06A2  2EB9               	goto	l870
   715     06A3                     u390:
   716     06A3                     l868:
   717                           
   718                           ;main.c: 53:         {;main.c: 54:             outputPinpad[i] = 1;
   719     06A3  0872               	movf	initialize_pins@i,w
   720     06A4  00F1               	movwf	??_initialize_pins
   721     06A5  0771               	addwf	??_initialize_pins,w
   722     06A6  3E3C               	addlw	(low (_outputPinpad| 0))& (0+255)
   723     06A7  0084               	movwf	4
   724     06A8  3001               	movlw	1
   725     06A9  1383               	bcf	3,7	;select IRP bank0
   726     06AA  0080               	movwf	0
   727     06AB  0A84               	incf	4,f
   728     06AC  3000               	movlw	0
   729     06AD  0080               	movwf	0
   730                           
   731                           ;main.c: 55:             inputPinpad[i] = 1;
   732     06AE  0872               	movf	initialize_pins@i,w
   733     06AF  00F1               	movwf	??_initialize_pins
   734     06B0  0771               	addwf	??_initialize_pins,w
   735     06B1  3E2E               	addlw	(low (_inputPinpad| 0))& (0+255)
   736     06B2  0084               	movwf	4
   737     06B3  3001               	movlw	1
   738     06B4  0080               	movwf	0
   739     06B5  0A84               	incf	4,f
   740     06B6  3000               	movlw	0
   741     06B7  0080               	movwf	0
   742                           
   743                           ;main.c: 57:         }
   744     06B8  2ECC               	goto	l872
   745     06B9                     l870:
   746                           
   747                           ;main.c: 59:         {;main.c: 60:             outputPinpad[i] = 1;
   748     06B9  0872               	movf	initialize_pins@i,w
   749     06BA  00F1               	movwf	??_initialize_pins
   750     06BB  0771               	addwf	??_initialize_pins,w
   751     06BC  3E3C               	addlw	(low (_outputPinpad| 0))& (0+255)
   752     06BD  0084               	movwf	4
   753     06BE  3001               	movlw	1
   754     06BF  1383               	bcf	3,7	;select IRP bank0
   755     06C0  0080               	movwf	0
   756     06C1  0A84               	incf	4,f
   757     06C2  3000               	movlw	0
   758     06C3  0080               	movwf	0
   759                           
   760                           ;main.c: 61:             inputPinpad[i] = 0;
   761     06C4  0872               	movf	initialize_pins@i,w
   762     06C5  00F1               	movwf	??_initialize_pins
   763     06C6  0771               	addwf	??_initialize_pins,w
   764     06C7  3E2E               	addlw	(low (_inputPinpad| 0))& (0+255)
   765     06C8  0084               	movwf	4
   766     06C9  0180               	clrf	0
   767     06CA  0A84               	incf	4,f
   768     06CB  0180               	clrf	0
   769     06CC                     l872:
   770                           
   771                           ;main.c: 63:     }
   772     06CC  3001               	movlw	1
   773     06CD  07F2               	addwf	initialize_pins@i,f
   774     06CE  1803               	skipnc
   775     06CF  0AF3               	incf	initialize_pins@i+1,f
   776     06D0  3000               	movlw	0
   777     06D1  07F3               	addwf	initialize_pins@i+1,f
   778     06D2                     l874:
   779     06D2  0873               	movf	initialize_pins@i+1,w
   780     06D3  3A80               	xorlw	128
   781     06D4  00FF               	movwf	btemp+1
   782     06D5  3080               	movlw	128
   783     06D6  027F               	subwf	btemp+1,w
   784     06D7  1D03               	skipz
   785     06D8  2EDB               	goto	u405
   786     06D9  3007               	movlw	7
   787     06DA  0272               	subwf	initialize_pins@i,w
   788     06DB                     u405:
   789     06DB  1C03               	skipc
   790     06DC  2EDE               	goto	u401
   791     06DD  2EDF               	goto	u400
   792     06DE                     u401:
   793     06DE  2E9D               	goto	l866
   794     06DF                     u400:
   795     06DF                     l28:
   796                           
   797                           ;main.c: 64:     INTCONbits.GIE = 1;
   798     06DF  178B               	bsf	11,7	;volatile
   799                           
   800                           ;main.c: 65:     INTCONbits.PEIE = 1;
   801     06E0  170B               	bsf	11,6	;volatile
   802     06E1                     l31:
   803     06E1  0008               	return
   804     06E2                     __end_of_initialize_pins:
   805                           
   806                           	psect	text2
   807     063A                     __ptext2:	
   808 ;; *************** function _beep *****************
   809 ;; Defined at:
   810 ;;		line 79 in file "main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  duration_ms     2   10[COMMON] int 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  i               2    6[BANK0 ] int 
   815 ;;  half_period_    2    8[BANK0 ] int 
   816 ;;  total_cycles    2    4[BANK0 ] int 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   826 ;;      Params:         2       0       0       0
   827 ;;      Locals:         0       6       0       0
   828 ;;      Temps:          1       0       0       0
   829 ;;      Totals:         3       6       0       0
   830 ;;Total ram usage:        9 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 1
   833 ;; This function calls:
   834 ;;		___awdiv
   835 ;;		___wmul
   836 ;;		_delay_us
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842     063A                     _beep:	
   843                           ;psect for function _beep
   844                           
   845     063A                     l876:	
   846                           ;incstack = 0
   847                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
   848                           
   849                           
   850                           ;main.c: 79: void beep(int duration_ms);main.c: 80: {;main.c: 81:     int half_period_us
      +                           = 1000000 / (2 * 6000);
   851     063A  3053               	movlw	83
   852     063B  1283               	bcf	3,5	;RP0=0, select bank0
   853     063C  1303               	bcf	3,6	;RP1=0, select bank0
   854     063D  00D6               	movwf	beep@half_period_us
   855     063E  3000               	movlw	0
   856     063F  00D7               	movwf	beep@half_period_us+1
   857     0640                     l878:
   858                           
   859                           ;main.c: 82:     int total_cycles = (duration_ms * 1000) / (2 * half_period_us);
   860     0640  30A6               	movlw	166
   861     0641  00F7               	movwf	___awdiv@divisor
   862     0642  3000               	movlw	0
   863     0643  00F8               	movwf	___awdiv@divisor+1
   864     0644  087C               	movf	beep@duration_ms+1,w
   865     0645  00F2               	movwf	___wmul@multiplier+1
   866     0646  087B               	movf	beep@duration_ms,w
   867     0647  00F1               	movwf	___wmul@multiplier
   868     0648  30E8               	movlw	232
   869     0649  00F3               	movwf	___wmul@multiplicand
   870     064A  3003               	movlw	3
   871     064B  00F4               	movwf	___wmul@multiplicand+1
   872     064C  118A  2615  118A   	fcall	___wmul
   873     064F  0872               	movf	?___wmul+1,w
   874     0650  00FA               	movwf	___awdiv@dividend+1
   875     0651  0871               	movf	?___wmul,w
   876     0652  00F9               	movwf	___awdiv@dividend
   877     0653  118A  26E2  118A   	fcall	___awdiv
   878     0656  0878               	movf	?___awdiv+1,w
   879     0657  1283               	bcf	3,5	;RP0=0, select bank0
   880     0658  1303               	bcf	3,6	;RP1=0, select bank0
   881     0659  00D3               	movwf	beep@total_cycles+1
   882     065A  0877               	movf	?___awdiv,w
   883     065B  00D2               	movwf	beep@total_cycles
   884     065C                     l880:
   885                           
   886                           ;main.c: 84:     for (int i = 0; i < total_cycles; i++) {
   887     065C  01D4               	clrf	beep@i
   888     065D  01D5               	clrf	beep@i+1
   889     065E  2E7B               	goto	l888
   890     065F                     l41:
   891                           
   892                           ;main.c: 85:         PORTBbits.RB1 = 1;
   893     065F  1283               	bcf	3,5	;RP0=0, select bank0
   894     0660  1303               	bcf	3,6	;RP1=0, select bank0
   895     0661  1486               	bsf	6,1	;volatile
   896     0662                     l882:
   897                           
   898                           ;main.c: 86:         delay_us((int)half_period_us);
   899     0662  0857               	movf	beep@half_period_us+1,w
   900     0663  00F2               	movwf	delay_us@time+1
   901     0664  0856               	movf	beep@half_period_us,w
   902     0665  00F1               	movwf	delay_us@time
   903     0666  118A  25FA  118A   	fcall	_delay_us
   904     0669                     l884:
   905                           
   906                           ;main.c: 87:         PORTBbits.RB1 = 0;
   907     0669  1283               	bcf	3,5	;RP0=0, select bank0
   908     066A  1303               	bcf	3,6	;RP1=0, select bank0
   909     066B  1086               	bcf	6,1	;volatile
   910                           
   911                           ;main.c: 88:         delay_us((int)half_period_us);
   912     066C  0857               	movf	beep@half_period_us+1,w
   913     066D  00F2               	movwf	delay_us@time+1
   914     066E  0856               	movf	beep@half_period_us,w
   915     066F  00F1               	movwf	delay_us@time
   916     0670  118A  25FA  118A   	fcall	_delay_us
   917     0673                     l886:
   918                           
   919                           ;main.c: 89:     }
   920     0673  3001               	movlw	1
   921     0674  1283               	bcf	3,5	;RP0=0, select bank0
   922     0675  1303               	bcf	3,6	;RP1=0, select bank0
   923     0676  07D4               	addwf	beep@i,f
   924     0677  1803               	skipnc
   925     0678  0AD5               	incf	beep@i+1,f
   926     0679  3000               	movlw	0
   927     067A  07D5               	addwf	beep@i+1,f
   928     067B                     l888:
   929     067B  0855               	movf	beep@i+1,w
   930     067C  3A80               	xorlw	128
   931     067D  00FD               	movwf	??_beep
   932     067E  0853               	movf	beep@total_cycles+1,w
   933     067F  3A80               	xorlw	128
   934     0680  027D               	subwf	??_beep,w
   935     0681  1D03               	skipz
   936     0682  2E85               	goto	u415
   937     0683  0852               	movf	beep@total_cycles,w
   938     0684  0254               	subwf	beep@i,w
   939     0685                     u415:
   940     0685  1C03               	skipc
   941     0686  2E88               	goto	u411
   942     0687  2E89               	goto	u410
   943     0688                     u411:
   944     0688  2E5F               	goto	l41
   945     0689                     u410:
   946     0689                     l43:
   947     0689  0008               	return
   948     068A                     __end_of_beep:
   949                           
   950                           	psect	text3
   951     05FA                     __ptext3:	
   952 ;; *************** function _delay_us *****************
   953 ;; Defined at:
   954 ;;		line 71 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  time            2    0[COMMON] int 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  i               2    3[COMMON] int 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, status,2
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   968 ;;      Params:         2       0       0       0
   969 ;;      Locals:         2       0       0       0
   970 ;;      Temps:          1       0       0       0
   971 ;;      Totals:         5       0       0       0
   972 ;;Total ram usage:        5 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_beep
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981     05FA                     _delay_us:	
   982                           ;psect for function _delay_us
   983                           
   984     05FA                     l796:	
   985                           ;incstack = 0
   986                           ; Regs used in _delay_us: [wreg+status,2]
   987                           
   988                           
   989                           ;main.c: 71: void delay_us(int time);main.c: 72: {;main.c: 73:     for(int i =0; i< time
      +                          ; i++)
   990     05FA  01F4               	clrf	delay_us@i
   991     05FB  01F5               	clrf	delay_us@i+1
   992     05FC  2E06               	goto	l34
   993     05FD                     l35:
   994                           
   995                           ;main.c: 74:     {;main.c: 75:         _delay((unsigned long)((1)*(20000000/4000000.0)))
      +                          ;
   996     05FD  2DFE               	nop2	;2 cycle nop
   997     05FE  2DFF               	nop2	;2 cycle nop
   998     05FF  0000               	nop
   999     0600                     l798:
  1000                           
  1001                           ;main.c: 76:     }
  1002     0600  3001               	movlw	1
  1003     0601  07F4               	addwf	delay_us@i,f
  1004     0602  1803               	skipnc
  1005     0603  0AF5               	incf	delay_us@i+1,f
  1006     0604  3000               	movlw	0
  1007     0605  07F5               	addwf	delay_us@i+1,f
  1008     0606                     l34:
  1009     0606  0875               	movf	delay_us@i+1,w
  1010     0607  3A80               	xorlw	128
  1011     0608  00F3               	movwf	??_delay_us
  1012     0609  0872               	movf	delay_us@time+1,w
  1013     060A  3A80               	xorlw	128
  1014     060B  0273               	subwf	??_delay_us,w
  1015     060C  1D03               	skipz
  1016     060D  2E10               	goto	u245
  1017     060E  0871               	movf	delay_us@time,w
  1018     060F  0274               	subwf	delay_us@i,w
  1019     0610                     u245:
  1020     0610  1C03               	skipc
  1021     0611  2E13               	goto	u241
  1022     0612  2E14               	goto	u240
  1023     0613                     u241:
  1024     0613  2DFD               	goto	l35
  1025     0614                     u240:
  1026     0614                     l37:
  1027     0614  0008               	return
  1028     0615                     __end_of_delay_us:
  1029                           
  1030                           	psect	text4
  1031     0615                     __ptext4:	
  1032 ;; *************** function ___wmul *****************
  1033 ;; Defined at:
  1034 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  multiplier      2    0[COMMON] unsigned int 
  1037 ;;  multiplicand    2    2[COMMON] unsigned int 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  product         2    4[COMMON] unsigned int 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2    0[COMMON] unsigned int 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1049 ;;      Params:         4       0       0       0
  1050 ;;      Locals:         2       0       0       0
  1051 ;;      Temps:          0       0       0       0
  1052 ;;      Totals:         6       0       0       0
  1053 ;;Total ram usage:        6 bytes
  1054 ;; Hardware stack levels used: 1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_beep
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062     0615                     ___wmul:	
  1063                           ;psect for function ___wmul
  1064                           
  1065     0615                     l800:	
  1066                           ;incstack = 0
  1067                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1068                           
  1069     0615  01F5               	clrf	___wmul@product
  1070     0616  01F6               	clrf	___wmul@product+1
  1071     0617                     l802:
  1072     0617  1C71               	btfss	___wmul@multiplier,0
  1073     0618  2E1A               	goto	u251
  1074     0619  2E1B               	goto	u250
  1075     061A                     u251:
  1076     061A  2E21               	goto	l158
  1077     061B                     u250:
  1078     061B                     l804:
  1079     061B  0873               	movf	___wmul@multiplicand,w
  1080     061C  07F5               	addwf	___wmul@product,f
  1081     061D  1803               	skipnc
  1082     061E  0AF6               	incf	___wmul@product+1,f
  1083     061F  0874               	movf	___wmul@multiplicand+1,w
  1084     0620  07F6               	addwf	___wmul@product+1,f
  1085     0621                     l158:
  1086     0621  3001               	movlw	1
  1087     0622                     u265:
  1088     0622  1003               	clrc
  1089     0623  0DF3               	rlf	___wmul@multiplicand,f
  1090     0624  0DF4               	rlf	___wmul@multiplicand+1,f
  1091     0625  3EFF               	addlw	-1
  1092     0626  1D03               	skipz
  1093     0627  2E22               	goto	u265
  1094     0628                     l806:
  1095     0628  3001               	movlw	1
  1096     0629                     u275:
  1097     0629  1003               	clrc
  1098     062A  0CF2               	rrf	___wmul@multiplier+1,f
  1099     062B  0CF1               	rrf	___wmul@multiplier,f
  1100     062C  3EFF               	addlw	-1
  1101     062D  1D03               	skipz
  1102     062E  2E29               	goto	u275
  1103     062F                     l808:
  1104     062F  0871               	movf	___wmul@multiplier,w
  1105     0630  0472               	iorwf	___wmul@multiplier+1,w
  1106     0631  1D03               	btfss	3,2
  1107     0632  2E34               	goto	u281
  1108     0633  2E35               	goto	u280
  1109     0634                     u281:
  1110     0634  2E17               	goto	l802
  1111     0635                     u280:
  1112     0635                     l810:
  1113     0635  0876               	movf	___wmul@product+1,w
  1114     0636  00F2               	movwf	?___wmul+1
  1115     0637  0875               	movf	___wmul@product,w
  1116     0638  00F1               	movwf	?___wmul
  1117     0639                     l160:
  1118     0639  0008               	return
  1119     063A                     __end_of___wmul:
  1120                           
  1121                           	psect	text5
  1122     06E2                     __ptext5:	
  1123 ;; *************** function ___awdiv *****************
  1124 ;; Defined at:
  1125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  divisor         2    6[COMMON] int 
  1128 ;;  dividend        2    8[COMMON] int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  quotient        2    2[BANK0 ] int 
  1131 ;;  sign            1    1[BANK0 ] unsigned char 
  1132 ;;  counter         1    0[BANK0 ] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2    6[COMMON] int 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1142 ;;      Params:         4       0       0       0
  1143 ;;      Locals:         0       4       0       0
  1144 ;;      Temps:          0       0       0       0
  1145 ;;      Totals:         4       4       0       0
  1146 ;;Total ram usage:        8 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_beep
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     06E2                     ___awdiv:	
  1156                           ;psect for function ___awdiv
  1157                           
  1158     06E2                     l814:	
  1159                           ;incstack = 0
  1160                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1161                           
  1162     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1163     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1164     06E4  01CF               	clrf	___awdiv@sign
  1165     06E5                     l816:
  1166     06E5  1FF8               	btfss	___awdiv@divisor+1,7
  1167     06E6  2EE8               	goto	u291
  1168     06E7  2EE9               	goto	u290
  1169     06E8                     u291:
  1170     06E8  2EF0               	goto	l822
  1171     06E9                     u290:
  1172     06E9                     l818:
  1173     06E9  09F7               	comf	___awdiv@divisor,f
  1174     06EA  09F8               	comf	___awdiv@divisor+1,f
  1175     06EB  0AF7               	incf	___awdiv@divisor,f
  1176     06EC  1903               	skipnz
  1177     06ED  0AF8               	incf	___awdiv@divisor+1,f
  1178     06EE                     l820:
  1179     06EE  3001               	movlw	1
  1180     06EF  00CF               	movwf	___awdiv@sign
  1181     06F0                     l822:
  1182     06F0  1FFA               	btfss	___awdiv@dividend+1,7
  1183     06F1  2EF3               	goto	u301
  1184     06F2  2EF4               	goto	u300
  1185     06F3                     u301:
  1186     06F3  2EFB               	goto	l828
  1187     06F4                     u300:
  1188     06F4                     l824:
  1189     06F4  09F9               	comf	___awdiv@dividend,f
  1190     06F5  09FA               	comf	___awdiv@dividend+1,f
  1191     06F6  0AF9               	incf	___awdiv@dividend,f
  1192     06F7  1903               	skipnz
  1193     06F8  0AFA               	incf	___awdiv@dividend+1,f
  1194     06F9                     l826:
  1195     06F9  3001               	movlw	1
  1196     06FA  06CF               	xorwf	___awdiv@sign,f
  1197     06FB                     l828:
  1198     06FB  01D0               	clrf	___awdiv@quotient
  1199     06FC  01D1               	clrf	___awdiv@quotient+1
  1200     06FD                     l830:
  1201     06FD  0877               	movf	___awdiv@divisor,w
  1202     06FE  0478               	iorwf	___awdiv@divisor+1,w
  1203     06FF  1903               	btfsc	3,2
  1204     0700  2F02               	goto	u311
  1205     0701  2F03               	goto	u310
  1206     0702                     u311:
  1207     0702  2F38               	goto	l850
  1208     0703                     u310:
  1209     0703                     l832:
  1210     0703  3001               	movlw	1
  1211     0704  00CE               	movwf	___awdiv@counter
  1212     0705  2F0F               	goto	l838
  1213     0706                     l834:
  1214     0706  3001               	movlw	1
  1215     0707                     u325:
  1216     0707  1003               	clrc
  1217     0708  0DF7               	rlf	___awdiv@divisor,f
  1218     0709  0DF8               	rlf	___awdiv@divisor+1,f
  1219     070A  3EFF               	addlw	-1
  1220     070B  1D03               	skipz
  1221     070C  2F07               	goto	u325
  1222     070D                     l836:
  1223     070D  3001               	movlw	1
  1224     070E  07CE               	addwf	___awdiv@counter,f
  1225     070F                     l838:
  1226     070F  1FF8               	btfss	___awdiv@divisor+1,7
  1227     0710  2F12               	goto	u331
  1228     0711  2F13               	goto	u330
  1229     0712                     u331:
  1230     0712  2F06               	goto	l834
  1231     0713                     u330:
  1232     0713                     l840:
  1233     0713  3001               	movlw	1
  1234     0714                     u345:
  1235     0714  1003               	clrc
  1236     0715  0DD0               	rlf	___awdiv@quotient,f
  1237     0716  0DD1               	rlf	___awdiv@quotient+1,f
  1238     0717  3EFF               	addlw	-1
  1239     0718  1D03               	skipz
  1240     0719  2F14               	goto	u345
  1241     071A  0878               	movf	___awdiv@divisor+1,w
  1242     071B  027A               	subwf	___awdiv@dividend+1,w
  1243     071C  1D03               	skipz
  1244     071D  2F20               	goto	u355
  1245     071E  0877               	movf	___awdiv@divisor,w
  1246     071F  0279               	subwf	___awdiv@dividend,w
  1247     0720                     u355:
  1248     0720  1C03               	skipc
  1249     0721  2F23               	goto	u351
  1250     0722  2F24               	goto	u350
  1251     0723                     u351:
  1252     0723  2F2B               	goto	l846
  1253     0724                     u350:
  1254     0724                     l842:
  1255     0724  0877               	movf	___awdiv@divisor,w
  1256     0725  02F9               	subwf	___awdiv@dividend,f
  1257     0726  0878               	movf	___awdiv@divisor+1,w
  1258     0727  1C03               	skipc
  1259     0728  03FA               	decf	___awdiv@dividend+1,f
  1260     0729  02FA               	subwf	___awdiv@dividend+1,f
  1261     072A                     l844:
  1262     072A  1450               	bsf	___awdiv@quotient,0
  1263     072B                     l846:
  1264     072B  3001               	movlw	1
  1265     072C                     u365:
  1266     072C  1003               	clrc
  1267     072D  0CF8               	rrf	___awdiv@divisor+1,f
  1268     072E  0CF7               	rrf	___awdiv@divisor,f
  1269     072F  3EFF               	addlw	-1
  1270     0730  1D03               	skipz
  1271     0731  2F2C               	goto	u365
  1272     0732                     l848:
  1273     0732  3001               	movlw	1
  1274     0733  02CE               	subwf	___awdiv@counter,f
  1275     0734  1D03               	btfss	3,2
  1276     0735  2F37               	goto	u371
  1277     0736  2F38               	goto	u370
  1278     0737                     u371:
  1279     0737  2F13               	goto	l840
  1280     0738                     u370:
  1281     0738                     l850:
  1282     0738  084F               	movf	___awdiv@sign,w
  1283     0739  1903               	btfsc	3,2
  1284     073A  2F3C               	goto	u381
  1285     073B  2F3D               	goto	u380
  1286     073C                     u381:
  1287     073C  2F42               	goto	l854
  1288     073D                     u380:
  1289     073D                     l852:
  1290     073D  09D0               	comf	___awdiv@quotient,f
  1291     073E  09D1               	comf	___awdiv@quotient+1,f
  1292     073F  0AD0               	incf	___awdiv@quotient,f
  1293     0740  1903               	skipnz
  1294     0741  0AD1               	incf	___awdiv@quotient+1,f
  1295     0742                     l854:
  1296     0742  0851               	movf	___awdiv@quotient+1,w
  1297     0743  00F8               	movwf	?___awdiv+1
  1298     0744  0850               	movf	___awdiv@quotient,w
  1299     0745  00F7               	movwf	?___awdiv
  1300     0746                     l311:
  1301     0746  0008               	return
  1302     0747                     __end_of___awdiv:
  1303     0001                     ___latbits      equ	1
  1304     007E                     btemp           set	126	;btemp
  1305     007E                     wtemp0          set	126
  1306                           
  1307                           	psect	config
  1308                           
  1309                           ;Config register CONFIG @ 0x2007
  1310                           ;	Oscillator Selection bits
  1311                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1312                           ;	Watchdog Timer Enable bit
  1313                           ;	WDTE = OFF, WDT disabled
  1314                           ;	Power-up Timer Enable bit
  1315                           ;	PWRTE = ON, PWRT enabled
  1316                           ;	RA5/MCLR/VPP Pin Function Select bit
  1317                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1318                           ;	Brown-out Detect Enable bit
  1319                           ;	BOREN = OFF, BOD disabled
  1320                           ;	Low-Voltage Programming Enable bit
  1321                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1322                           ;	Data EE Memory Code Protection bit
  1323                           ;	CPD = OFF, Data memory code protection off
  1324                           ;	Flash Program Memory Code Protection bit
  1325                           ;	CP = OFF, Code protection off
  1326     2007                     	org	8199
  1327     2007  3F22               	dw	16162

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     17      65
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_beep
    _beep->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_beep
    _beep->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     830
                                             10 BANK0      7     7      0
                               _beep
                    _initialize_pins
 ---------------------------------------------------------------------------------
 (1) _initialize_pins                                      3     3      0     156
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _beep                                                 9     7      2     581
                                             10 COMMON     3     1      2
                                              4 BANK0      6     6      0
                            ___awdiv
                             ___wmul
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             5     3      2      48
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              6 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _delay_us
   _initialize_pins

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               69      0       0      0.0%
BITBANK2            69      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     17      65     81.2%
BITBANK0            80      0       0      0.0%
COMMON              13     13      13    100.0%
BITCOMMON           13      0       0      0.0%
DATA                 0      0      78      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 01 02:01:54 2024

             _USER_INPUT 0020                       l31 06E1                       l41 065F  
                     l34 0606                       l35 05FD                       l43 0689  
                     l28 06DF                       l37 0614                       l66 076D  
                     l67 0791                       l68 07A6                       l69 07CA  
           ___awdiv@sign 004F                       fsr 0004      ___wmul@multiplicand 0073  
                    l311 0746                      l160 0639                      l158 0621  
                    l800 0615                      l810 0635                      l802 0617  
                    l820 06EE                      l804 061B                      l900 0752  
                    l830 06FD                      l822 06F0                      l814 06E2  
                    l806 0628                      l902 0759                      l840 0713  
                    l832 0703                      l824 06F4                      l816 06E5  
                    l808 062F                      l920 07A0                      l912 0770  
                    l904 0768                      l842 0724                      l834 0706  
                    l850 0738                      l826 06F9                      l818 06E9  
                    l930 07A9                      l922 07A3                      l914 077B  
                    l906 076B                      l852 073D                      l844 072A  
                    l836 070D                      l828 06FB                      l860 069B  
                    l940 07DC                      l932 07B4                      l924 07A4  
                    l916 0784                      l854 0742                      l846 072B  
                    l838 070F                      l870 06B9                      l942 07E8  
                    l934 07BD                      l918 0795                      l848 0732  
                    l880 065C                      l872 06CC                      l936 07CE  
                    l882 0662                      l874 06D2                      l866 069D  
                    l858 068A                      l938 07D9                      l890 0747  
                    l796 05FA                      l884 0669                      l876 063A  
                    l868 06A3                      l892 074A                      l798 0600  
                    l886 0673                      l878 0640                      l894 074D  
                    l888 067B                      l896 074E                      l898 074E  
                    u300 06F4                      u301 06F3                      u310 0703  
                    u311 0702                      u240 0614                      u400 06DF  
                    u241 0613                      u401 06DE                      u330 0713  
                    u250 061B                      u410 0689                      u331 0712  
                    u251 061A                      u411 0688                      u420 0752  
                    u325 0707                      u245 0610                      u405 06DB  
                    u421 0751                      u350 0724                      u430 0791  
                    u351 0723                      u415 0685                      u431 0790  
                    u280 0635                      u440 07CA                      u345 0714  
                    u281 0634                      u265 0622                      u441 07C9  
                    u370 0738                      u290 06E9                      u371 0737  
                    u355 0720                      u291 06E8                      u275 0629  
                    u507 07E3                      u435 078D                      u380 073D  
                    u381 073C                      u365 072C                      u445 07C6  
                    u390 06A3                      u391 06A2                      u457 0761  
                    u467 0776                      u477 079B                      u487 07AF  
                    u497 07D4                      fsr0 0004                      indf 0000  
            _outputIndex 004A                     _beep 063A                     _main 0747  
                   _open 005F                     btemp 007E                     start 0001  
                  ?_beep 007B                    ?_main 0071          __end_of___awdiv 0747  
                  _CMCON 001F          ___awdiv@divisor 0077          ___awdiv@counter 004E  
           _outputPinpad 003C        ??_initialize_pins 0071                    beep@i 0054  
                  main@i 005B                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_beep 068A             __end_of_main 07EE  
                 ??_beep 007D                   ??_main 0058         ___awdiv@dividend 0079  
       __end_of_delay_us 0615                   ___wmul 0615                ??___awdiv 007B  
       ___awdiv@quotient 0050  __end_of__initialization 07FD           __pcstackCOMMON 0071  
           __pidataBANK0 05F0               __pbssBANK0 0020               __pmaintext 0747  
                ?___wmul 0071          _initialize_pins 068A                ?_delay_us 0071  
       beep@total_cycles 0052                  ___awdiv 06E2                  __ptext1 068A  
                __ptext2 063A                  __ptext3 05FA                  __ptext4 0615  
                __ptext5 06E2               ??_delay_us 0073                  clrloop0 05F3  
   end_of_initialization 07FD  __end_of_initialize_pins 06E2          beep@duration_ms 007B  
              _PORTAbits 0005                _PORTBbits 0006                _TRISAbits 0085  
              _TRISBbits 0086         initialize_pins@i 0072           __end_of___wmul 063A  
    start_initialization 07EE         ?_initialize_pins 0071                 ??___wmul 0075  
            __pdataBANK0 005F                ___latbits 0001            __pcstackBANK0 004E  
               ?___awdiv 0077       beep@half_period_us 0056           ___wmul@product 0075  
              delay_us@i 0074                clear_ram0 05F2                main@i_220 005D  
      ___wmul@multiplier 0071             delay_us@time 0071                 _delay_us 05FA  
            _inputPinpad 002E               _INTCONbits 000B              _sensorIndex 004C  
