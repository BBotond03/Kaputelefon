

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 25 05:20:50 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F648A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     000A                     PCLATH          equ	10	;# 
    62     000B                     INTCON          equ	11	;# 
    63     000C                     PIR1            equ	12	;# 
    64     000E                     TMR1            equ	14	;# 
    65     000E                     TMR1L           equ	14	;# 
    66     000F                     TMR1H           equ	15	;# 
    67     0010                     T1CON           equ	16	;# 
    68     0011                     TMR2            equ	17	;# 
    69     0012                     T2CON           equ	18	;# 
    70     0015                     CCPR1           equ	21	;# 
    71     0015                     CCPR1L          equ	21	;# 
    72     0016                     CCPR1H          equ	22	;# 
    73     0017                     CCP1CON         equ	23	;# 
    74     0018                     RCSTA           equ	24	;# 
    75     0019                     TXREG           equ	25	;# 
    76     001A                     RCREG           equ	26	;# 
    77     001F                     CMCON           equ	31	;# 
    78     0081                     OPTION_REG      equ	129	;# 
    79     0085                     TRISA           equ	133	;# 
    80     0086                     TRISB           equ	134	;# 
    81     008C                     PIE1            equ	140	;# 
    82     008E                     PCON            equ	142	;# 
    83     0092                     PR2             equ	146	;# 
    84     0098                     TXSTA           equ	152	;# 
    85     0099                     SPBRG           equ	153	;# 
    86     009A                     EEDATA          equ	154	;# 
    87     009B                     EEADR           equ	155	;# 
    88     009C                     EECON1          equ	156	;# 
    89     009D                     EECON2          equ	157	;# 
    90     009F                     VRCON           equ	159	;# 
    91     0000                     INDF            equ	0	;# 
    92     0001                     TMR0            equ	1	;# 
    93     0002                     PCL             equ	2	;# 
    94     0003                     STATUS          equ	3	;# 
    95     0004                     FSR             equ	4	;# 
    96     0005                     PORTA           equ	5	;# 
    97     0006                     PORTB           equ	6	;# 
    98     000A                     PCLATH          equ	10	;# 
    99     000B                     INTCON          equ	11	;# 
   100     000C                     PIR1            equ	12	;# 
   101     000E                     TMR1            equ	14	;# 
   102     000E                     TMR1L           equ	14	;# 
   103     000F                     TMR1H           equ	15	;# 
   104     0010                     T1CON           equ	16	;# 
   105     0011                     TMR2            equ	17	;# 
   106     0012                     T2CON           equ	18	;# 
   107     0015                     CCPR1           equ	21	;# 
   108     0015                     CCPR1L          equ	21	;# 
   109     0016                     CCPR1H          equ	22	;# 
   110     0017                     CCP1CON         equ	23	;# 
   111     0018                     RCSTA           equ	24	;# 
   112     0019                     TXREG           equ	25	;# 
   113     001A                     RCREG           equ	26	;# 
   114     001F                     CMCON           equ	31	;# 
   115     0081                     OPTION_REG      equ	129	;# 
   116     0085                     TRISA           equ	133	;# 
   117     0086                     TRISB           equ	134	;# 
   118     008C                     PIE1            equ	140	;# 
   119     008E                     PCON            equ	142	;# 
   120     0092                     PR2             equ	146	;# 
   121     0098                     TXSTA           equ	152	;# 
   122     0099                     SPBRG           equ	153	;# 
   123     009A                     EEDATA          equ	154	;# 
   124     009B                     EEADR           equ	155	;# 
   125     009C                     EECON1          equ	156	;# 
   126     009D                     EECON2          equ	157	;# 
   127     009F                     VRCON           equ	159	;# 
   128     0006                     _PORTBbits      set	6
   129     0005                     _PORTAbits      set	5
   130     0085                     _TRISAbits      set	133
   131     0086                     _TRISBbits      set	134
   132                           
   133                           	psect	cinit
   134     07FB                     start_initialization:	
   135                           ; #config settings
   136                           
   137     07FB                     __initialization:
   138                           
   139                           ; Clear objects allocated to COMMON
   140     07FB  01F4               	clrf	__pbssCOMMON& (0+127)
   141     07FC  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   142     07FD                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145     07FD                     __end_of__initialization:
   146     07FD  0183               	clrf	3
   147     07FE  118A  2FB5         	ljmp	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMMON
   150     0074                     __pbssCOMMON:
   151     0074                     _open:
   152     0074                     	ds	2
   153                           
   154                           	psect	cstackCOMMON
   155     0071                     __pcstackCOMMON:
   156     0071                     ?_initialize_pins:
   157     0071                     ?_main:	
   158                           ; 1 bytes @ 0x0
   159                           
   160     0071                     ??_initialize_pins:	
   161                           ; 1 bytes @ 0x0
   162                           
   163     0071                     ??_main:	
   164                           ; 1 bytes @ 0x0
   165                           
   166                           
   167                           ; 1 bytes @ 0x0
   168     0071                     	ds	3
   169                           
   170                           	psect	maintext
   171     07B5                     __pmaintext:	
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 47 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2, status,0, pclath, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : B00/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   191 ;;      Params:         0       0       0       0
   192 ;;      Locals:         0       0       0       0
   193 ;;      Temps:          3       0       0       0
   194 ;;      Totals:         3       0       0       0
   195 ;;Total ram usage:        3 bytes
   196 ;; Hardware stack levels required when called: 1
   197 ;; This function calls:
   198 ;;		_initialize_pins
   199 ;; This function is called by:
   200 ;;		Startup code after reset
   201 ;; This function uses a non-reentrant model
   202 ;;
   203                           
   204     07B5                     _main:	
   205                           ;psect for function _main
   206                           
   207     07B5                     l571:	
   208                           ;incstack = 0
   209                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   210                           
   211                           
   212                           ;main.c: 48:     initialize_pins();
   213     07B5  118A  27AB  118A   	fcall	_initialize_pins
   214     07B8                     l573:
   215                           
   216                           ;main.c: 51:         if (PORTAbits.RA2 == 0) {
   217     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   218     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   219     07BA  1905               	btfsc	5,2	;volatile
   220     07BB  2FBD               	goto	u11
   221     07BC  2FBE               	goto	u10
   222     07BD                     u11:
   223     07BD  2FCB               	goto	l577
   224     07BE                     u10:
   225     07BE                     l575:
   226                           
   227                           ;main.c: 52:         _delay((unsigned long)((50)*(20000000/4000.0)));
   228     07BE  3002               	movlw	2
   229     07BF  00F3               	movwf	??_main+2
   230     07C0  3045               	movlw	69
   231     07C1  00F2               	movwf	??_main+1
   232     07C2  30A9               	movlw	169
   233     07C3  00F1               	movwf	??_main
   234     07C4                     u57:
   235     07C4  0BF1               	decfsz	??_main,f
   236     07C5  2FC4               	goto	u57
   237     07C6  0BF2               	decfsz	??_main+1,f
   238     07C7  2FC4               	goto	u57
   239     07C8  0BF3               	decfsz	??_main+2,f
   240     07C9  2FC4               	goto	u57
   241     07CA  2FCB               	nop2
   242     07CB                     l577:
   243                           
   244                           ;main.c: 54:         if (PORTAbits.RA2 == 1) {
   245     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   246     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   247     07CD  1D05               	btfss	5,2	;volatile
   248     07CE  2FD0               	goto	u21
   249     07CF  2FD1               	goto	u20
   250     07D0                     u21:
   251     07D0  2FEB               	goto	l583
   252     07D1                     u20:
   253     07D1                     l579:
   254                           
   255                           ;main.c: 55:             PORTBbits.RB0 = !PORTBbits.RB0;
   256     07D1  1003               	clrc
   257     07D2  1C06               	btfss	6,0	;volatile
   258     07D3  1403               	setc
   259     07D4  1803               	btfsc	3,0
   260     07D5  2FD7               	goto	u31
   261     07D6  2FDB               	goto	u30
   262     07D7                     u31:
   263     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   264     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   265     07D9  1406               	bsf	6,0	;volatile
   266     07DA  2FDE               	goto	u44
   267     07DB                     u30:
   268     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   269     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   270     07DD  1006               	bcf	6,0	;volatile
   271     07DE                     u44:
   272     07DE                     l581:
   273                           
   274                           ;main.c: 56:             _delay((unsigned long)((50)*(20000000/4000.0)));
   275     07DE  3002               	movlw	2
   276     07DF  00F3               	movwf	??_main+2
   277     07E0  3045               	movlw	69
   278     07E1  00F2               	movwf	??_main+1
   279     07E2  30A9               	movlw	169
   280     07E3  00F1               	movwf	??_main
   281     07E4                     u67:
   282     07E4  0BF1               	decfsz	??_main,f
   283     07E5  2FE4               	goto	u67
   284     07E6  0BF2               	decfsz	??_main+1,f
   285     07E7  2FE4               	goto	u67
   286     07E8  0BF3               	decfsz	??_main+2,f
   287     07E9  2FE4               	goto	u67
   288     07EA  2FEB               	nop2
   289     07EB                     l583:
   290                           
   291                           ;main.c: 58:         _delay((unsigned long)((50)*(20000000/4000.0)));
   292     07EB  3002               	movlw	2
   293     07EC  00F3               	movwf	??_main+2
   294     07ED  3045               	movlw	69
   295     07EE  00F2               	movwf	??_main+1
   296     07EF  30A9               	movlw	169
   297     07F0  00F1               	movwf	??_main
   298     07F1                     u77:
   299     07F1  0BF1               	decfsz	??_main,f
   300     07F2  2FF1               	goto	u77
   301     07F3  0BF2               	decfsz	??_main+1,f
   302     07F4  2FF1               	goto	u77
   303     07F5  0BF3               	decfsz	??_main+2,f
   304     07F6  2FF1               	goto	u77
   305     07F7  2FF8               	nop2
   306     07F8  2FB8               	goto	l573
   307     07F9  118A  2801         	ljmp	start
   308     07FB                     __end_of_main:
   309                           
   310                           	psect	text1
   311     07AB                     __ptext1:	
   312 ;; *************** function _initialize_pins *****************
   313 ;; Defined at:
   314 ;;		line 25 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		None
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   328 ;;      Params:         0       0       0       0
   329 ;;      Locals:         0       0       0       0
   330 ;;      Temps:          0       0       0       0
   331 ;;      Totals:         0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels used: 1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341     07AB                     _initialize_pins:	
   342                           ;psect for function _initialize_pins
   343                           
   344     07AB                     l569:	
   345                           ;incstack = 0
   346                           ; Regs used in _initialize_pins: []
   347                           
   348                           
   349                           ;main.c: 26:     TRISBbits.TRISB0 = 0;
   350     07AB  1683               	bsf	3,5	;RP0=1, select bank1
   351     07AC  1303               	bcf	3,6	;RP1=0, select bank1
   352     07AD  1006               	bcf	6,0	;volatile
   353                           
   354                           ;main.c: 27:     TRISAbits.TRISA3 = 1;
   355     07AE  1585               	bsf	5,3	;volatile
   356                           
   357                           ;main.c: 28:     TRISBbits.TRISB2 = 1;
   358     07AF  1506               	bsf	6,2	;volatile
   359                           
   360                           ;main.c: 29:     TRISBbits.TRISB1 = 0;
   361     07B0  1086               	bcf	6,1	;volatile
   362                           
   363                           ;main.c: 30:     TRISAbits.TRISA0 = 0;
   364     07B1  1005               	bcf	5,0	;volatile
   365                           
   366                           ;main.c: 31:     TRISAbits.TRISA1 = 1;
   367     07B2  1485               	bsf	5,1	;volatile
   368                           
   369                           ;main.c: 32:     TRISAbits.TRISA2 = 1;
   370     07B3  1505               	bsf	5,2	;volatile
   371     07B4                     l13:
   372     07B4  0008               	return
   373     07B5                     __end_of_initialize_pins:
   374     0001                     ___latbits      equ	1
   375     007E                     btemp           set	126	;btemp
   376     007E                     wtemp0          set	126
   377                           
   378                           	psect	config
   379                           
   380                           ;Config register CONFIG @ 0x2007
   381                           ;	Oscillator Selection bits
   382                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   383                           ;	Watchdog Timer Enable bit
   384                           ;	WDTE = OFF, WDT disabled
   385                           ;	Power-up Timer Enable bit
   386                           ;	PWRTE = ON, PWRT enabled
   387                           ;	RA5/MCLR/VPP Pin Function Select bit
   388                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   389                           ;	Brown-out Detect Enable bit
   390                           ;	BOREN = OFF, BOD disabled
   391                           ;	Low-Voltage Programming Enable bit
   392                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   393                           ;	Data EE Memory Code Protection bit
   394                           ;	CPD = OFF, Data memory code protection off
   395                           ;	Flash Program Memory Code Protection bit
   396                           ;	CP = OFF, Code protection off
   397     2007                     	org	8199
   398     2007  3F22               	dw	16162

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
                    _initialize_pins
 ---------------------------------------------------------------------------------
 (1) _initialize_pins                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_pins

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           13      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            69      0       0      0.0%
COMMON              13      3       5     38.5%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               69      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 25 05:20:50 2024

                     l13 07B4                       u10 07BE                       u11 07BD  
                     u20 07D1                       u21 07D0                       u30 07DB  
                     u31 07D7                       u44 07DE                       u57 07C4  
                     u67 07E4                       u77 07F1                      l571 07B5  
                    l581 07DE                      l573 07B8                      l583 07EB  
                    l575 07BE                      l569 07AB                      l577 07CB  
                    l579 07D1                     _main 07B5                     _open 0074  
                   btemp 007E                     start 0001                    ?_main 0071  
      ??_initialize_pins 0071                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB                   ??_main 0071  
__end_of__initialization 07FD           __pcstackCOMMON 0071               __pmaintext 07B5  
        _initialize_pins 07AB                  __ptext1 07AB     end_of_initialization 07FD  
__end_of_initialize_pins 07B5                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 07FB  
       ?_initialize_pins 0071              __pbssCOMMON 0074                ___latbits 0001  
