

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Nov 27 06:54:13 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,space=0,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F648A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     PORTA           equ	5	;# 
    66     0006                     PORTB           equ	6	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001F                     CMCON           equ	31	;# 
    84     0081                     OPTION_REG      equ	129	;# 
    85     0085                     TRISA           equ	133	;# 
    86     0086                     TRISB           equ	134	;# 
    87     008C                     PIE1            equ	140	;# 
    88     008E                     PCON            equ	142	;# 
    89     0092                     PR2             equ	146	;# 
    90     0098                     TXSTA           equ	152	;# 
    91     0099                     SPBRG           equ	153	;# 
    92     009A                     EEDATA          equ	154	;# 
    93     009B                     EEADR           equ	155	;# 
    94     009C                     EECON1          equ	156	;# 
    95     009D                     EECON2          equ	157	;# 
    96     009F                     VRCON           equ	159	;# 
    97     0000                     INDF            equ	0	;# 
    98     0001                     TMR0            equ	1	;# 
    99     0002                     PCL             equ	2	;# 
   100     0003                     STATUS          equ	3	;# 
   101     0004                     FSR             equ	4	;# 
   102     0005                     PORTA           equ	5	;# 
   103     0006                     PORTB           equ	6	;# 
   104     000A                     PCLATH          equ	10	;# 
   105     000B                     INTCON          equ	11	;# 
   106     000C                     PIR1            equ	12	;# 
   107     000E                     TMR1            equ	14	;# 
   108     000E                     TMR1L           equ	14	;# 
   109     000F                     TMR1H           equ	15	;# 
   110     0010                     T1CON           equ	16	;# 
   111     0011                     TMR2            equ	17	;# 
   112     0012                     T2CON           equ	18	;# 
   113     0015                     CCPR1           equ	21	;# 
   114     0015                     CCPR1L          equ	21	;# 
   115     0016                     CCPR1H          equ	22	;# 
   116     0017                     CCP1CON         equ	23	;# 
   117     0018                     RCSTA           equ	24	;# 
   118     0019                     TXREG           equ	25	;# 
   119     001A                     RCREG           equ	26	;# 
   120     001F                     CMCON           equ	31	;# 
   121     0081                     OPTION_REG      equ	129	;# 
   122     0085                     TRISA           equ	133	;# 
   123     0086                     TRISB           equ	134	;# 
   124     008C                     PIE1            equ	140	;# 
   125     008E                     PCON            equ	142	;# 
   126     0092                     PR2             equ	146	;# 
   127     0098                     TXSTA           equ	152	;# 
   128     0099                     SPBRG           equ	153	;# 
   129     009A                     EEDATA          equ	154	;# 
   130     009B                     EEADR           equ	155	;# 
   131     009C                     EECON1          equ	156	;# 
   132     009D                     EECON2          equ	157	;# 
   133     009F                     VRCON           equ	159	;# 
   134     000E                     _TMR1           set	14
   135     001F                     _CMCON          set	31
   136     000E                     _TMR1L          set	14
   137     000F                     _TMR1H          set	15
   138     0010                     _T1CONbits      set	16
   139     0005                     _PORTAbits      set	5
   140     0006                     _PORTBbits      set	6
   141     0060                     _TMR1IF         set	96
   142     0085                     _TRISAbits      set	133
   143     0086                     _TRISBbits      set	134
   144                           
   145                           	psect	cinit
   146     0011                     start_initialization:	
   147                           ; #config settings
   148                           
   149     0011                     __initialization:
   150                           
   151                           ; Clear objects allocated to COMMON
   152     0011  01FB               	clrf	__pbssCOMMON& (0+127)
   153     0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   154                           
   155                           ; Clear objects allocated to BANK0
   156     0013  1383               	bcf	3,7	;select IRP bank0
   157     0014  3020               	movlw	low __pbssBANK0
   158     0015  0084               	movwf	4
   159     0016  303C               	movlw	low (__pbssBANK0+28)
   160     0017  118A  2128  118A   	fcall	clear_ram0
   161     001A                     end_of_initialization:	
   162                           ;End of C runtime variable initialization code
   163                           
   164     001A                     __end_of__initialization:
   165     001A  0183               	clrf	3
   166     001B  118A  291F         	ljmp	_main	;jump to C main() function
   167                           
   168                           	psect	bssCOMMON
   169     007B                     __pbssCOMMON:
   170     007B                     _open:
   171     007B                     	ds	2
   172                           
   173                           	psect	bssBANK0
   174     0020                     __pbssBANK0:
   175     0020                     _pinPad:
   176     0020                     	ds	24
   177     0038                     _outputValue:
   178     0038                     	ds	2
   179     003A                     _index:
   180     003A                     	ds	2
   181                           
   182                           	psect	clrtext
   183     0128                     clear_ram0:	
   184                           ;	Called with FSR containing the base address, and
   185                           ;	W with the last address+1
   186                           
   187     0128  0064               	clrwdt	;clear the watchdog before getting into this loop
   188     0129                     clrloop0:
   189     0129  0180               	clrf	0	;clear RAM location pointed to by FSR
   190     012A  0A84               	incf	4,f	;increment pointer
   191     012B  0604               	xorwf	4,w	;XOR with final address
   192     012C  1903               	btfsc	3,2	;have we reached the end yet?
   193     012D  3400               	retlw	0	;all done for this memory range, return
   194     012E  0604               	xorwf	4,w	;XOR again to restore value
   195     012F  2929               	goto	clrloop0	;do the next byte
   196                           
   197                           	psect	cstackCOMMON
   198     0071                     __pcstackCOMMON:
   199     0071                     ?_beep:
   200     0071                     ?_isr:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0071                     ?_initialize_pins:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0071                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0071                     ??_beep:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0071                     	ds	3
   215     0074                     ??_isr:
   216                           
   217                           ; 1 bytes @ 0x3
   218     0074                     	ds	7
   219                           
   220                           	psect	cstackBANK0
   221     003C                     __pcstackBANK0:
   222     003C                     isr@i_168:
   223                           
   224                           ; 2 bytes @ 0x0
   225     003C                     	ds	2
   226     003E                     isr@i:
   227                           
   228                           ; 2 bytes @ 0x2
   229     003E                     	ds	2
   230     0040                     ??_initialize_pins:
   231     0040                     ??_main:	
   232                           ; 1 bytes @ 0x4
   233                           
   234                           
   235                           	psect	maintext
   236     011F                     __pmaintext:	
   237                           ; 1 bytes @ 0x4
   238 ;;
   239 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   240 ;;
   241 ;; *************** function _main *****************
   242 ;; Defined at:
   243 ;;		line 98 in file "main.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		status,2, status,0, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : B00/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   257 ;;      Params:         0       0       0       0
   258 ;;      Locals:         0       0       0       0
   259 ;;      Temps:          0       0       0       0
   260 ;;      Totals:         0       0       0       0
   261 ;;Total ram usage:        0 bytes
   262 ;; Hardware stack levels required when called: 3
   263 ;; This function calls:
   264 ;;		_initialize_pins
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270     011F                     _main:	
   271                           ;psect for function _main
   272                           
   273     011F                     l728:	
   274                           ;incstack = 0
   275                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   276                           
   277                           
   278                           ;main.c: 99:     initialize_pins();
   279     011F  118A  210D  118A   	fcall	_initialize_pins
   280     0122                     l730:
   281                           
   282                           ;main.c: 103:     PORTBbits.RB0 = 0;
   283     0122  1283               	bcf	3,5	;RP0=0, select bank0
   284     0123  1303               	bcf	3,6	;RP1=0, select bank0
   285     0124  1006               	bcf	6,0	;volatile
   286     0125                     l57:	
   287                           ;main.c: 104:     while (1) {
   288                           
   289     0125                     l58:	
   290                           ;main.c: 105:     }
   291                           
   292     0125  2925               	goto	l57
   293     0126  118A  280F         	ljmp	start
   294     0128                     __end_of_main:
   295                           
   296                           	psect	text1
   297     010D                     __ptext1:	
   298 ;; *************** function _initialize_pins *****************
   299 ;; Defined at:
   300 ;;		line 79 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		None
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   314 ;;      Params:         0       0       0       0
   315 ;;      Locals:         0       0       0       0
   316 ;;      Temps:          0       0       0       0
   317 ;;      Totals:         0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; Hardware stack levels required when called: 2
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328     010D                     _initialize_pins:	
   329                           ;psect for function _initialize_pins
   330                           
   331     010D                     l680:	
   332                           ;incstack = 0
   333                           ; Regs used in _initialize_pins: []
   334                           
   335                           
   336                           ;main.c: 80:     CMCON = 0x07;
   337     010D  3007               	movlw	7
   338     010E  1283               	bcf	3,5	;RP0=0, select bank0
   339     010F  1303               	bcf	3,6	;RP1=0, select bank0
   340     0110  009F               	movwf	31	;volatile
   341                           
   342                           ;main.c: 81:     TRISBbits.TRISB0 = 0;
   343     0111  1683               	bsf	3,5	;RP0=1, select bank1
   344     0112  1303               	bcf	3,6	;RP1=0, select bank1
   345     0113  1006               	bcf	6,0	;volatile
   346                           
   347                           ;main.c: 82:     TRISAbits.TRISA3 = 1;
   348     0114  1585               	bsf	5,3	;volatile
   349                           
   350                           ;main.c: 83:     TRISBbits.TRISB2 = 1;
   351     0115  1506               	bsf	6,2	;volatile
   352                           
   353                           ;main.c: 84:     TRISBbits.TRISB1 = 0;
   354     0116  1086               	bcf	6,1	;volatile
   355                           
   356                           ;main.c: 85:     TRISAbits.TRISA0 = 0;
   357     0117  1005               	bcf	5,0	;volatile
   358                           
   359                           ;main.c: 86:     TRISAbits.TRISA1 = 1;
   360     0118  1485               	bsf	5,1	;volatile
   361                           
   362                           ;main.c: 87:     TRISAbits.TRISA2 = 1;
   363     0119  1505               	bsf	5,2	;volatile
   364                           
   365                           ;main.c: 88:     PORTAbits.RA3 = 1;
   366     011A  1283               	bcf	3,5	;RP0=0, select bank0
   367     011B  1303               	bcf	3,6	;RP1=0, select bank0
   368     011C  1585               	bsf	5,3	;volatile
   369                           
   370                           ;main.c: 89:     PORTBbits.RB2 = 1;
   371     011D  1506               	bsf	6,2	;volatile
   372     011E                     l50:
   373     011E  0008               	return
   374     011F                     __end_of_initialize_pins:
   375                           
   376                           	psect	text2
   377     001D                     __ptext2:	
   378 ;; *************** function _isr *****************
   379 ;; Defined at:
   380 ;;		line 37 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  i               2    0[BANK0 ] int 
   385 ;;  i               2    2[BANK0 ] int 
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   395 ;;      Params:         0       0       0       0
   396 ;;      Locals:         0       4       0       0
   397 ;;      Temps:          7       0       0       0
   398 ;;      Totals:         7       4       0       0
   399 ;;Total ram usage:       11 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 1
   402 ;; This function calls:
   403 ;;		_beep
   404 ;; This function is called by:
   405 ;;		Interrupt level 1
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409     001D                     _isr:	
   410                           ;psect for function _isr
   411                           
   412     001D                     i1l682:
   413                           
   414                           ;main.c: 38:     if (TMR1IF) {
   415     001D  1283               	bcf	3,5	;RP0=0, select bank0
   416     001E  1303               	bcf	3,6	;RP1=0, select bank0
   417     001F  1C0C               	btfss	12,0	;volatile
   418     0020  2822               	goto	u13_21
   419     0021  2823               	goto	u13_20
   420     0022                     u13_21:
   421     0022  28E1               	goto	i1l44
   422     0023                     u13_20:
   423     0023                     i1l684:
   424                           
   425                           ;main.c: 39:         PORTBbits.RB0 = PORTAbits.RA1;
   426     0023  1885               	btfsc	5,1	;volatile
   427     0024  2826               	goto	u14_21
   428     0025  282A               	goto	u14_20
   429     0026                     u14_21:
   430     0026  1283               	bcf	3,5	;RP0=0, select bank0
   431     0027  1303               	bcf	3,6	;RP1=0, select bank0
   432     0028  1406               	bsf	6,0	;volatile
   433     0029  282D               	goto	u15_24
   434     002A                     u14_20:
   435     002A  1283               	bcf	3,5	;RP0=0, select bank0
   436     002B  1303               	bcf	3,6	;RP1=0, select bank0
   437     002C  1006               	bcf	6,0	;volatile
   438     002D                     u15_24:
   439                           
   440                           ;main.c: 40:         if(PORTAbits.RA1 = 1)
   441     002D  1485               	bsf	5,1	;volatile
   442     002E                     i1l686:
   443                           
   444                           ;main.c: 41:             beep();
   445     002E  118A  20EC  118A   	fcall	_beep
   446     0031                     i1l688:
   447                           
   448                           ;main.c: 42:         TMR1IF = 0;
   449     0031  1283               	bcf	3,5	;RP0=0, select bank0
   450     0032  1303               	bcf	3,6	;RP1=0, select bank0
   451     0033  100C               	bcf	12,0	;volatile
   452     0034                     i1l690:
   453                           
   454                           ;main.c: 43:         TMR1 = 0;
   455     0034  018E               	clrf	14	;volatile
   456     0035  018F               	clrf	15	;volatile
   457     0036                     i1l692:
   458                           
   459                           ;main.c: 45:         pinPad[index] = PORTAbits.RA1;
   460     0036  0C05               	rrf	5,w	;volatile
   461     0037  3901               	andlw	1
   462     0038  00F4               	movwf	??_isr
   463     0039  01F5               	clrf	??_isr+1
   464     003A  083A               	movf	_index,w
   465     003B  00F6               	movwf	??_isr+2
   466     003C  0776               	addwf	??_isr+2,w
   467     003D  3E20               	addlw	(low (_pinPad| 0))& (0+255)
   468     003E  0084               	movwf	4
   469     003F  0874               	movf	??_isr,w
   470     0040  1383               	bcf	3,7	;select IRP bank0
   471     0041  0080               	movwf	0
   472     0042  0A84               	incf	4,f
   473     0043  0875               	movf	??_isr+1,w
   474     0044  0080               	movwf	0
   475     0045                     i1l694:
   476                           
   477                           ;main.c: 47:         index++;
   478     0045  3001               	movlw	1
   479     0046  07BA               	addwf	_index,f
   480     0047  1803               	skipnc
   481     0048  0ABB               	incf	_index+1,f
   482     0049  3000               	movlw	0
   483     004A  07BB               	addwf	_index+1,f
   484     004B                     i1l696:
   485                           
   486                           ;main.c: 49:         if (index >= 12) {
   487     004B  083B               	movf	_index+1,w
   488     004C  3A80               	xorlw	128
   489     004D  00FF               	movwf	btemp+1
   490     004E  3080               	movlw	128
   491     004F  027F               	subwf	btemp+1,w
   492     0050  1D03               	skipz
   493     0051  2854               	goto	u16_25
   494     0052  300C               	movlw	12
   495     0053  023A               	subwf	_index,w
   496     0054                     u16_25:
   497     0054  1C03               	skipc
   498     0055  2857               	goto	u16_21
   499     0056  2858               	goto	u16_20
   500     0057                     u16_21:
   501     0057  28E1               	goto	i1l44
   502     0058                     u16_20:
   503     0058                     i1l698:
   504                           
   505                           ;main.c: 50:             outputValue = 0;
   506     0058  1283               	bcf	3,5	;RP0=0, select bank0
   507     0059  1303               	bcf	3,6	;RP1=0, select bank0
   508     005A  01B8               	clrf	_outputValue
   509     005B  01B9               	clrf	_outputValue+1
   510                           
   511                           ;main.c: 51:             for (int i = 0; i < 12; i++) {
   512     005C  01BE               	clrf	isr@i
   513     005D  01BF               	clrf	isr@i+1
   514     005E                     i1l704:
   515                           
   516                           ;main.c: 52:                 outputValue |= (pinPad[i] << i);
   517     005E  1283               	bcf	3,5	;RP0=0, select bank0
   518     005F  1303               	bcf	3,6	;RP1=0, select bank0
   519     0060  0A3E               	incf	isr@i,w
   520     0061  00FF               	movwf	btemp+1
   521     0062  083E               	movf	isr@i,w
   522     0063  00F4               	movwf	??_isr
   523     0064  0774               	addwf	??_isr,w
   524     0065  3E20               	addlw	(low (_pinPad| 0))& (0+255)
   525     0066  0084               	movwf	4
   526     0067  1383               	bcf	3,7	;select IRP bank0
   527     0068  0800               	movf	0,w
   528     0069  00F5               	movwf	??_isr+1
   529     006A  0A84               	incf	4,f
   530     006B  0800               	movf	0,w
   531     006C  00F6               	movwf	??_isr+2
   532     006D  2871               	goto	u17_24
   533     006E                     u17_25:
   534     006E  1003               	clrc
   535     006F  0DF5               	rlf	??_isr+1,f
   536     0070  0DF6               	rlf	??_isr+2,f
   537     0071                     u17_24:
   538     0071  0BFF               	decfsz	btemp+1,f
   539     0072  286E               	goto	u17_25
   540     0073  0875               	movf	??_isr+1,w
   541     0074  04B8               	iorwf	_outputValue,f
   542     0075  0876               	movf	??_isr+2,w
   543     0076  04B9               	iorwf	_outputValue+1,f
   544     0077                     i1l706:
   545                           
   546                           ;main.c: 53:             }
   547     0077  3001               	movlw	1
   548     0078  07BE               	addwf	isr@i,f
   549     0079  1803               	skipnc
   550     007A  0ABF               	incf	isr@i+1,f
   551     007B  3000               	movlw	0
   552     007C  07BF               	addwf	isr@i+1,f
   553     007D                     i1l708:
   554     007D  083F               	movf	isr@i+1,w
   555     007E  3A80               	xorlw	128
   556     007F  00FF               	movwf	btemp+1
   557     0080  3080               	movlw	128
   558     0081  027F               	subwf	btemp+1,w
   559     0082  1D03               	skipz
   560     0083  2886               	goto	u18_25
   561     0084  300C               	movlw	12
   562     0085  023E               	subwf	isr@i,w
   563     0086                     u18_25:
   564     0086  1C03               	skipc
   565     0087  2889               	goto	u18_21
   566     0088  288A               	goto	u18_20
   567     0089                     u18_21:
   568     0089  285E               	goto	i1l704
   569     008A                     u18_20:
   570     008A                     i1l710:
   571                           
   572                           ;main.c: 54:             for (int i = 0; i < 12; i++) {
   573     008A  1283               	bcf	3,5	;RP0=0, select bank0
   574     008B  1303               	bcf	3,6	;RP1=0, select bank0
   575     008C  01BC               	clrf	isr@i_168
   576     008D  01BD               	clrf	isr@i_168+1
   577     008E                     i1l716:
   578                           
   579                           ;main.c: 55:                 if(pinPad[i] == 1)
   580     008E  1283               	bcf	3,5	;RP0=0, select bank0
   581     008F  1303               	bcf	3,6	;RP1=0, select bank0
   582     0090  083C               	movf	isr@i_168,w
   583     0091  00F4               	movwf	??_isr
   584     0092  0774               	addwf	??_isr,w
   585     0093  3E20               	addlw	(low (_pinPad| 0))& (0+255)
   586     0094  0084               	movwf	4
   587     0095  1383               	bcf	3,7	;select IRP bank0
   588     0096  0800               	movf	0,w
   589     0097  00F5               	movwf	??_isr+1
   590     0098  0A84               	incf	4,f
   591     0099  0800               	movf	0,w
   592     009A  00F6               	movwf	??_isr+2
   593     009B  0375               	decf	??_isr+1,w
   594     009C  0476               	iorwf	??_isr+2,w
   595     009D  1D03               	btfss	3,2
   596     009E  28A0               	goto	u19_21
   597     009F  28A1               	goto	u19_20
   598     00A0                     u19_21:
   599     00A0  28CA               	goto	i1l43
   600     00A1                     u19_20:
   601     00A1                     i1l718:
   602                           
   603                           ;main.c: 56:                 {;main.c: 57:                     PORTBbits.RB0 = !PORTBbit
      +                          s.RB0;
   604     00A1  1003               	clrc
   605     00A2  1C06               	btfss	6,0	;volatile
   606     00A3  1403               	setc
   607     00A4  1803               	btfsc	3,0
   608     00A5  28A7               	goto	u20_21
   609     00A6  28AB               	goto	u20_20
   610     00A7                     u20_21:
   611     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   612     00A8  1303               	bcf	3,6	;RP1=0, select bank0
   613     00A9  1406               	bsf	6,0	;volatile
   614     00AA  28AE               	goto	u21_24
   615     00AB                     u20_20:
   616     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   617     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   618     00AD  1006               	bcf	6,0	;volatile
   619     00AE                     u21_24:
   620     00AE                     i1l720:
   621                           
   622                           ;main.c: 58:                     _delay((unsigned long)((300)*(20000000/4000.0)));
   623     00AE  3008               	movlw	8
   624     00AF  00F6               	movwf	??_isr+2
   625     00B0  309D               	movlw	157
   626     00B1  00F5               	movwf	??_isr+1
   627     00B2  3005               	movlw	5
   628     00B3  00F4               	movwf	??_isr
   629     00B4                     u25_27:
   630     00B4  0BF4               	decfsz	??_isr,f
   631     00B5  28B4               	goto	u25_27
   632     00B6  0BF5               	decfsz	??_isr+1,f
   633     00B7  28B4               	goto	u25_27
   634     00B8  0BF6               	decfsz	??_isr+2,f
   635     00B9  28B4               	goto	u25_27
   636     00BA  28BB               	nop2
   637     00BB                     i1l722:
   638                           
   639                           ;main.c: 59:                     PORTBbits.RB0 = !PORTBbits.RB0;
   640     00BB  1003               	clrc
   641     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   642     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   643     00BE  1C06               	btfss	6,0	;volatile
   644     00BF  1403               	setc
   645     00C0  1803               	btfsc	3,0
   646     00C1  28C3               	goto	u22_21
   647     00C2  28C7               	goto	u22_20
   648     00C3                     u22_21:
   649     00C3  1283               	bcf	3,5	;RP0=0, select bank0
   650     00C4  1303               	bcf	3,6	;RP1=0, select bank0
   651     00C5  1406               	bsf	6,0	;volatile
   652     00C6  28CA               	goto	u23_24
   653     00C7                     u22_20:
   654     00C7  1283               	bcf	3,5	;RP0=0, select bank0
   655     00C8  1303               	bcf	3,6	;RP1=0, select bank0
   656     00C9  1006               	bcf	6,0	;volatile
   657     00CA                     u23_24:
   658     00CA                     i1l43:	
   659                           ;main.c: 60:                 }
   660                           
   661                           
   662                           ;main.c: 62:             }
   663     00CA  3001               	movlw	1
   664     00CB  07BC               	addwf	isr@i_168,f
   665     00CC  1803               	skipnc
   666     00CD  0ABD               	incf	isr@i_168+1,f
   667     00CE  3000               	movlw	0
   668     00CF  07BD               	addwf	isr@i_168+1,f
   669     00D0                     i1l724:
   670     00D0  083D               	movf	isr@i_168+1,w
   671     00D1  3A80               	xorlw	128
   672     00D2  00FF               	movwf	btemp+1
   673     00D3  3080               	movlw	128
   674     00D4  027F               	subwf	btemp+1,w
   675     00D5  1D03               	skipz
   676     00D6  28D9               	goto	u24_25
   677     00D7  300C               	movlw	12
   678     00D8  023C               	subwf	isr@i_168,w
   679     00D9                     u24_25:
   680     00D9  1C03               	skipc
   681     00DA  28DC               	goto	u24_21
   682     00DB  28DD               	goto	u24_20
   683     00DC                     u24_21:
   684     00DC  288E               	goto	i1l716
   685     00DD                     u24_20:
   686     00DD                     i1l726:
   687                           
   688                           ;main.c: 63:             index = 0;
   689     00DD  1283               	bcf	3,5	;RP0=0, select bank0
   690     00DE  1303               	bcf	3,6	;RP1=0, select bank0
   691     00DF  01BA               	clrf	_index
   692     00E0  01BB               	clrf	_index+1
   693     00E1                     i1l44:
   694     00E1  087A               	movf	??_isr+6,w
   695     00E2  00FF               	movwf	btemp+1
   696     00E3  0879               	movf	??_isr+5,w
   697     00E4  008A               	movwf	10
   698     00E5  0878               	movf	??_isr+4,w
   699     00E6  0084               	movwf	4
   700     00E7  0E77               	swapf	??_isr+3,w
   701     00E8  0083               	movwf	3
   702     00E9  0EFE               	swapf	btemp,f
   703     00EA  0E7E               	swapf	btemp,w
   704     00EB  0009               	retfie
   705     00EC                     __end_of_isr:
   706                           
   707                           	psect	intentry
   708     0004                     __pintentry:	
   709                           ;incstack = 0
   710                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   711                           
   712     0004                     interrupt_function:
   713     007E                     saved_w         set	btemp
   714     0004  00FE               	movwf	btemp
   715     0005  0E03               	swapf	3,w
   716     0006  00F7               	movwf	??_isr+3
   717     0007  0804               	movf	4,w
   718     0008  00F8               	movwf	??_isr+4
   719     0009  080A               	movf	10,w
   720     000A  00F9               	movwf	??_isr+5
   721     000B  087F               	movf	btemp+1,w
   722     000C  00FA               	movwf	??_isr+6
   723     000D  118A  281D         	ljmp	_isr
   724                           
   725                           	psect	text3
   726     00EC                     __ptext3:	
   727 ;; *************** function _beep *****************
   728 ;; Defined at:
   729 ;;		line 30 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   743 ;;      Params:         0       0       0       0
   744 ;;      Locals:         0       0       0       0
   745 ;;      Temps:          3       0       0       0
   746 ;;      Totals:         3       0       0       0
   747 ;;Total ram usage:        3 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_isr
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756     00EC                     _beep:	
   757                           ;psect for function _beep
   758                           
   759     00EC                     i1l674:	
   760                           ;incstack = 0
   761                           ; Regs used in _beep: [wreg]
   762                           
   763                           
   764                           ;main.c: 31:     PORTBbits.RB1 = 1;
   765     00EC  1283               	bcf	3,5	;RP0=0, select bank0
   766     00ED  1303               	bcf	3,6	;RP1=0, select bank0
   767     00EE  1486               	bsf	6,1	;volatile
   768     00EF                     i1l676:
   769                           
   770                           ;main.c: 32:     _delay((unsigned long)((100)*(20000000/4000.0)));
   771     00EF  3003               	movlw	3
   772     00F0  00F3               	movwf	??_beep+2
   773     00F1  308A               	movlw	138
   774     00F2  00F2               	movwf	??_beep+1
   775     00F3  3055               	movlw	85
   776     00F4  00F1               	movwf	??_beep
   777     00F5                     u26_27:
   778     00F5  0BF1               	decfsz	??_beep,f
   779     00F6  28F5               	goto	u26_27
   780     00F7  0BF2               	decfsz	??_beep+1,f
   781     00F8  28F5               	goto	u26_27
   782     00F9  0BF3               	decfsz	??_beep+2,f
   783     00FA  28F5               	goto	u26_27
   784     00FB  28FC               	nop2
   785     00FC                     i1l678:
   786                           
   787                           ;main.c: 33:     PORTBbits.RB1 = 0;
   788     00FC  1283               	bcf	3,5	;RP0=0, select bank0
   789     00FD  1303               	bcf	3,6	;RP1=0, select bank0
   790     00FE  1086               	bcf	6,1	;volatile
   791                           
   792                           ;main.c: 34:     _delay((unsigned long)((100)*(20000000/4000.0)));
   793     00FF  3003               	movlw	3
   794     0100  00F3               	movwf	??_beep+2
   795     0101  308A               	movlw	138
   796     0102  00F2               	movwf	??_beep+1
   797     0103  3055               	movlw	85
   798     0104  00F1               	movwf	??_beep
   799     0105                     u27_27:
   800     0105  0BF1               	decfsz	??_beep,f
   801     0106  2905               	goto	u27_27
   802     0107  0BF2               	decfsz	??_beep+1,f
   803     0108  2905               	goto	u27_27
   804     0109  0BF3               	decfsz	??_beep+2,f
   805     010A  2905               	goto	u27_27
   806     010B  290C               	nop2
   807     010C                     i1l31:
   808     010C  0008               	return
   809     010D                     __end_of_beep:
   810     0001                     ___latbits      equ	1
   811     007E                     btemp           set	126	;btemp
   812     007E                     wtemp0          set	126
   813                           
   814                           	psect	config
   815                           
   816                           ;Config register CONFIG @ 0x2007
   817                           ;	Oscillator Selection bits
   818                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   819                           ;	Watchdog Timer Enable bit
   820                           ;	WDTE = OFF, WDT disabled
   821                           ;	Power-up Timer Enable bit
   822                           ;	PWRTE = ON, PWRT enabled
   823                           ;	RA5/MCLR/VPP Pin Function Select bit
   824                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   825                           ;	Brown-out Detect Enable bit
   826                           ;	BOREN = OFF, BOD disabled
   827                           ;	Low-Voltage Programming Enable bit
   828                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   829                           ;	Data EE Memory Code Protection bit
   830                           ;	CPD = OFF, Data memory code protection off
   831                           ;	Flash Program Memory Code Protection bit
   832                           ;	CP = OFF, Code protection off
   833     2007                     	org	8199
   834     2007  3F22               	dw	16162

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      12
    BANK0            80      4      32
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_beep

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _initialize_pins
 ---------------------------------------------------------------------------------
 (1) _initialize_pins                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 11    11      0     158
                                              3 COMMON     7     7      0
                                              0 BANK0      4     4      0
                               _beep
 ---------------------------------------------------------------------------------
 (3) _beep                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_pins

 _isr (ROOT)
   _beep

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           13      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            69      0       0      0.0%
COMMON              13     10      12     92.3%
BANK0               80      4      32     40.0%
BANK1               80      0       0      0.0%
BANK2               69      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      44      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Nov 27 06:54:13 2024

                     l50 011E                       l57 0125                       l58 0125  
                     fsr 0004                      l730 0122                      l680 010D  
                    l728 011F                      _isr 001D                      fsr0 0004  
                    indf 0000                     ?_isr 0071                     i1l31 010C  
                   i1l43 00CA                     i1l44 00E1                     _TMR1 000E  
            _outputValue 0038                     _beep 00EC                     _main 011F  
                   _open 007B                     btemp 007E                     isr@i 003E  
                   start 000F                    ??_isr 0074                    ?_beep 0071  
                  ?_main 0071                    _CMCON 001F                    i1l710 008A  
                  i1l720 00AE                    i1l704 005E                    i1l722 00BB  
                  i1l706 0077                    i1l724 00D0                    i1l716 008E  
                  i1l708 007D                    i1l726 00DD                    i1l718 00A1  
                  i1l674 00EC                    i1l690 0034                    i1l682 001D  
                  i1l676 00EF                    i1l692 0036                    i1l684 0023  
                  i1l678 00FC                    i1l694 0045                    i1l686 002E  
                  i1l696 004B                    i1l688 0031                    i1l698 0058  
                  u20_20 00AB                    u20_21 00A7                    u13_20 0023  
                  u13_21 0022                    u21_24 00AE                    u22_20 00C7  
                  u14_20 002A                    u22_21 00C3                    u14_21 0026  
                  u23_24 00CA                    u15_24 002D                    u24_20 00DD  
                  u16_20 0058                    u24_21 00DC                    u16_21 0057  
                  u24_25 00D9                    u16_25 0054                    _TMR1H 000F  
                  u17_24 0071                    u17_25 006E                    _TMR1L 000E  
                  u25_27 00B4                    u18_20 008A                    u18_21 0089  
                  u18_25 0086                    u26_27 00F5                    u19_20 00A1  
                  u19_21 00A0                    u27_27 0105        ??_initialize_pins 0040  
                  _index 003A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_beep 010D  
           __end_of_main 0128                   ??_beep 0071                   ??_main 0040  
                 _TMR1IF 0060                   _pinPad 0020                   saved_w 007E  
__end_of__initialization 001A           __pcstackCOMMON 0071               __pbssBANK0 0020  
             __pmaintext 011F               __pintentry 0004          _initialize_pins 010D  
                __ptext1 010D                  __ptext2 001D                  __ptext3 00EC  
              _T1CONbits 0010                  clrloop0 0129     end_of_initialization 001A  
__end_of_initialize_pins 011F                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 0011  
            __end_of_isr 00EC         ?_initialize_pins 0071              __pbssCOMMON 007B  
              ___latbits 0001            __pcstackBANK0 003C        interrupt_function 0004  
              clear_ram0 0128                 isr@i_168 003C                 intlevel1 0000  
