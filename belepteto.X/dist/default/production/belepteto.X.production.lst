

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Nov 27 06:54:23 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,space=0,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,space=0,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F648A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0004                     fsr             equ	4
    52     0004                     fsr0            equ	4
    53     0000                     indf            equ	0
    54     0000                     indf0           equ	0
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0000                     INDF            equ	0	;# 
    60     0001                     TMR0            equ	1	;# 
    61     0002                     PCL             equ	2	;# 
    62     0003                     STATUS          equ	3	;# 
    63     0004                     FSR             equ	4	;# 
    64     0005                     PORTA           equ	5	;# 
    65     0006                     PORTB           equ	6	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001F                     CMCON           equ	31	;# 
    83     0081                     OPTION_REG      equ	129	;# 
    84     0085                     TRISA           equ	133	;# 
    85     0086                     TRISB           equ	134	;# 
    86     008C                     PIE1            equ	140	;# 
    87     008E                     PCON            equ	142	;# 
    88     0092                     PR2             equ	146	;# 
    89     0098                     TXSTA           equ	152	;# 
    90     0099                     SPBRG           equ	153	;# 
    91     009A                     EEDATA          equ	154	;# 
    92     009B                     EEADR           equ	155	;# 
    93     009C                     EECON1          equ	156	;# 
    94     009D                     EECON2          equ	157	;# 
    95     009F                     VRCON           equ	159	;# 
    96     0000                     INDF            equ	0	;# 
    97     0001                     TMR0            equ	1	;# 
    98     0002                     PCL             equ	2	;# 
    99     0003                     STATUS          equ	3	;# 
   100     0004                     FSR             equ	4	;# 
   101     0005                     PORTA           equ	5	;# 
   102     0006                     PORTB           equ	6	;# 
   103     000A                     PCLATH          equ	10	;# 
   104     000B                     INTCON          equ	11	;# 
   105     000C                     PIR1            equ	12	;# 
   106     000E                     TMR1            equ	14	;# 
   107     000E                     TMR1L           equ	14	;# 
   108     000F                     TMR1H           equ	15	;# 
   109     0010                     T1CON           equ	16	;# 
   110     0011                     TMR2            equ	17	;# 
   111     0012                     T2CON           equ	18	;# 
   112     0015                     CCPR1           equ	21	;# 
   113     0015                     CCPR1L          equ	21	;# 
   114     0016                     CCPR1H          equ	22	;# 
   115     0017                     CCP1CON         equ	23	;# 
   116     0018                     RCSTA           equ	24	;# 
   117     0019                     TXREG           equ	25	;# 
   118     001A                     RCREG           equ	26	;# 
   119     001F                     CMCON           equ	31	;# 
   120     0081                     OPTION_REG      equ	129	;# 
   121     0085                     TRISA           equ	133	;# 
   122     0086                     TRISB           equ	134	;# 
   123     008C                     PIE1            equ	140	;# 
   124     008E                     PCON            equ	142	;# 
   125     0092                     PR2             equ	146	;# 
   126     0098                     TXSTA           equ	152	;# 
   127     0099                     SPBRG           equ	153	;# 
   128     009A                     EEDATA          equ	154	;# 
   129     009B                     EEADR           equ	155	;# 
   130     009C                     EECON1          equ	156	;# 
   131     009D                     EECON2          equ	157	;# 
   132     009F                     VRCON           equ	159	;# 
   133     000E                     _TMR1           set	14
   134     001F                     _CMCON          set	31
   135     000E                     _TMR1L          set	14
   136     000F                     _TMR1H          set	15
   137     0010                     _T1CONbits      set	16
   138     0005                     _PORTAbits      set	5
   139     0006                     _PORTBbits      set	6
   140     0060                     _TMR1IF         set	96
   141     0085                     _TRISAbits      set	133
   142     0086                     _TRISBbits      set	134
   143                           
   144                           	psect	cinit
   145     0011                     start_initialization:	
   146                           ; #config settings
   147                           
   148     0011                     __initialization:
   149                           
   150                           ; Clear objects allocated to BANK0
   151     0011  1383               	bcf	3,7	;select IRP bank0
   152     0012  3020               	movlw	low __pbssBANK0
   153     0013  0084               	movwf	4
   154     0014  303E               	movlw	low (__pbssBANK0+30)
   155     0015  118A  2124  118A   	fcall	clear_ram0
   156     0018                     end_of_initialization:	
   157                           ;End of C runtime variable initialization code
   158                           
   159     0018                     __end_of__initialization:
   160     0018  0183               	clrf	3
   161     0019  118A  291B         	ljmp	_main	;jump to C main() function
   162                           
   163                           	psect	bssBANK0
   164     0020                     __pbssBANK0:
   165     0020                     _pinPad:
   166     0020                     	ds	24
   167     0038                     _open:
   168     0038                     	ds	2
   169     003A                     _outputValue:
   170     003A                     	ds	2
   171     003C                     _index:
   172     003C                     	ds	2
   173                           
   174                           	psect	clrtext
   175     0124                     clear_ram0:	
   176                           ;	Called with FSR containing the base address, and
   177                           ;	W with the last address+1
   178                           
   179     0124  0064               	clrwdt	;clear the watchdog before getting into this loop
   180     0125                     clrloop0:
   181     0125  0180               	clrf	0	;clear RAM location pointed to by FSR
   182     0126  0A84               	incf	4,f	;increment pointer
   183     0127  0604               	xorwf	4,w	;XOR with final address
   184     0128  1903               	btfsc	3,2	;have we reached the end yet?
   185     0129  3400               	retlw	0	;all done for this memory range, return
   186     012A  0604               	xorwf	4,w	;XOR again to restore value
   187     012B  2925               	goto	clrloop0	;do the next byte
   188                           
   189                           	psect	cstackCOMMON
   190     0070                     __pcstackCOMMON:
   191     0070                     ?_beep:
   192     0070                     ?_isr:	
   193                           ; 1 bytes @ 0x0
   194                           
   195     0070                     ?_initialize_pins:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ?_main:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_beep:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206     0070                     	ds	3
   207     0073                     ??_isr:
   208                           
   209                           ; 1 bytes @ 0x3
   210     0073                     	ds	7
   211     007A                     isr@i_168:
   212                           
   213                           ; 2 bytes @ 0xA
   214     007A                     	ds	2
   215     007C                     isr@i:
   216                           
   217                           ; 2 bytes @ 0xC
   218     007C                     	ds	2
   219                           
   220                           	psect	cstackBANK0
   221     0000                     __pcstackBANK0:
   222     0000                     ??_initialize_pins:
   223     0000                     ??_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226                           
   227                           	psect	maintext
   228     011B                     __pmaintext:	
   229                           ; 1 bytes @ 0x0
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 98 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   249 ;;      Params:         0       0       0       0
   250 ;;      Locals:         0       0       0       0
   251 ;;      Temps:          0       0       0       0
   252 ;;      Totals:         0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called: 3
   255 ;; This function calls:
   256 ;;		_initialize_pins
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262     011B                     _main:	
   263                           ;psect for function _main
   264                           
   265     011B                     l728:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   268                           
   269                           
   270                           ;main.c: 99:     initialize_pins();
   271     011B  118A  2109  118A   	fcall	_initialize_pins
   272     011E                     l730:
   273                           
   274                           ;main.c: 103:     PORTBbits.RB0 = 0;
   275     011E  1283               	bcf	3,5	;RP0=0, select bank0
   276     011F  1303               	bcf	3,6	;RP1=0, select bank0
   277     0120  1006               	bcf	6,0	;volatile
   278     0121                     l57:	
   279                           ;main.c: 104:     while (1) {
   280                           
   281     0121                     l58:	
   282                           ;main.c: 105:     }
   283                           
   284     0121  2921               	goto	l57
   285     0122  118A  280F         	ljmp	start
   286     0124                     __end_of_main:
   287                           
   288                           	psect	text1
   289     0109                     __ptext1:	
   290 ;; *************** function _initialize_pins *****************
   291 ;; Defined at:
   292 ;;		line 79 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		None
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   306 ;;      Params:         0       0       0       0
   307 ;;      Locals:         0       0       0       0
   308 ;;      Temps:          0       0       0       0
   309 ;;      Totals:         0       0       0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels used: 1
   312 ;; Hardware stack levels required when called: 2
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320     0109                     _initialize_pins:	
   321                           ;psect for function _initialize_pins
   322                           
   323     0109                     l680:	
   324                           ;incstack = 0
   325                           ; Regs used in _initialize_pins: []
   326                           
   327                           
   328                           ;main.c: 80:     CMCON = 0x07;
   329     0109  3007               	movlw	7
   330     010A  1283               	bcf	3,5	;RP0=0, select bank0
   331     010B  1303               	bcf	3,6	;RP1=0, select bank0
   332     010C  009F               	movwf	31	;volatile
   333                           
   334                           ;main.c: 81:     TRISBbits.TRISB0 = 0;
   335     010D  1683               	bsf	3,5	;RP0=1, select bank1
   336     010E  1303               	bcf	3,6	;RP1=0, select bank1
   337     010F  1006               	bcf	6,0	;volatile
   338                           
   339                           ;main.c: 82:     TRISAbits.TRISA3 = 1;
   340     0110  1585               	bsf	5,3	;volatile
   341                           
   342                           ;main.c: 83:     TRISBbits.TRISB2 = 1;
   343     0111  1506               	bsf	6,2	;volatile
   344                           
   345                           ;main.c: 84:     TRISBbits.TRISB1 = 0;
   346     0112  1086               	bcf	6,1	;volatile
   347                           
   348                           ;main.c: 85:     TRISAbits.TRISA0 = 0;
   349     0113  1005               	bcf	5,0	;volatile
   350                           
   351                           ;main.c: 86:     TRISAbits.TRISA1 = 1;
   352     0114  1485               	bsf	5,1	;volatile
   353                           
   354                           ;main.c: 87:     TRISAbits.TRISA2 = 1;
   355     0115  1505               	bsf	5,2	;volatile
   356                           
   357                           ;main.c: 88:     PORTAbits.RA3 = 1;
   358     0116  1283               	bcf	3,5	;RP0=0, select bank0
   359     0117  1303               	bcf	3,6	;RP1=0, select bank0
   360     0118  1585               	bsf	5,3	;volatile
   361                           
   362                           ;main.c: 89:     PORTBbits.RB2 = 1;
   363     0119  1506               	bsf	6,2	;volatile
   364     011A                     l50:
   365     011A  0008               	return
   366     011B                     __end_of_initialize_pins:
   367                           
   368                           	psect	text2
   369     001B                     __ptext2:	
   370 ;; *************** function _isr *****************
   371 ;; Defined at:
   372 ;;		line 37 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  i               2   10[COMMON] int 
   377 ;;  i               2   12[COMMON] int 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   387 ;;      Params:         0       0       0       0
   388 ;;      Locals:         4       0       0       0
   389 ;;      Temps:          7       0       0       0
   390 ;;      Totals:        11       0       0       0
   391 ;;Total ram usage:       11 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		_beep
   396 ;; This function is called by:
   397 ;;		Interrupt level 1
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401     001B                     _isr:	
   402                           ;psect for function _isr
   403                           
   404     001B                     i1l682:
   405                           
   406                           ;main.c: 38:     if (TMR1IF) {
   407     001B  1283               	bcf	3,5	;RP0=0, select bank0
   408     001C  1303               	bcf	3,6	;RP1=0, select bank0
   409     001D  1C0C               	btfss	12,0	;volatile
   410     001E  2820               	goto	u13_21
   411     001F  2821               	goto	u13_20
   412     0020                     u13_21:
   413     0020  28DD               	goto	i1l44
   414     0021                     u13_20:
   415     0021                     i1l684:
   416                           
   417                           ;main.c: 39:         PORTBbits.RB0 = PORTAbits.RA1;
   418     0021  1885               	btfsc	5,1	;volatile
   419     0022  2824               	goto	u14_21
   420     0023  2828               	goto	u14_20
   421     0024                     u14_21:
   422     0024  1283               	bcf	3,5	;RP0=0, select bank0
   423     0025  1303               	bcf	3,6	;RP1=0, select bank0
   424     0026  1406               	bsf	6,0	;volatile
   425     0027  282B               	goto	u15_24
   426     0028                     u14_20:
   427     0028  1283               	bcf	3,5	;RP0=0, select bank0
   428     0029  1303               	bcf	3,6	;RP1=0, select bank0
   429     002A  1006               	bcf	6,0	;volatile
   430     002B                     u15_24:
   431                           
   432                           ;main.c: 40:         if(PORTAbits.RA1 = 1)
   433     002B  1485               	bsf	5,1	;volatile
   434     002C                     i1l686:
   435                           
   436                           ;main.c: 41:             beep();
   437     002C  118A  20E8  118A   	fcall	_beep
   438     002F                     i1l688:
   439                           
   440                           ;main.c: 42:         TMR1IF = 0;
   441     002F  1283               	bcf	3,5	;RP0=0, select bank0
   442     0030  1303               	bcf	3,6	;RP1=0, select bank0
   443     0031  100C               	bcf	12,0	;volatile
   444     0032                     i1l690:
   445                           
   446                           ;main.c: 43:         TMR1 = 0;
   447     0032  018E               	clrf	14	;volatile
   448     0033  018F               	clrf	15	;volatile
   449     0034                     i1l692:
   450                           
   451                           ;main.c: 45:         pinPad[index] = PORTAbits.RA1;
   452     0034  0C05               	rrf	5,w	;volatile
   453     0035  3901               	andlw	1
   454     0036  00F3               	movwf	??_isr
   455     0037  01F4               	clrf	??_isr+1
   456     0038  083C               	movf	_index,w
   457     0039  00F5               	movwf	??_isr+2
   458     003A  0775               	addwf	??_isr+2,w
   459     003B  3E20               	addlw	(low (_pinPad| 0))& (0+255)
   460     003C  0084               	movwf	4
   461     003D  0873               	movf	??_isr,w
   462     003E  1383               	bcf	3,7	;select IRP bank0
   463     003F  0080               	movwf	0
   464     0040  0A84               	incf	4,f
   465     0041  0874               	movf	??_isr+1,w
   466     0042  0080               	movwf	0
   467     0043                     i1l694:
   468                           
   469                           ;main.c: 47:         index++;
   470     0043  3001               	movlw	1
   471     0044  07BC               	addwf	_index,f
   472     0045  1803               	skipnc
   473     0046  0ABD               	incf	_index+1,f
   474     0047  3000               	movlw	0
   475     0048  07BD               	addwf	_index+1,f
   476     0049                     i1l696:
   477                           
   478                           ;main.c: 49:         if (index >= 12) {
   479     0049  083D               	movf	_index+1,w
   480     004A  3A80               	xorlw	128
   481     004B  00FF               	movwf	btemp+1
   482     004C  3080               	movlw	128
   483     004D  027F               	subwf	btemp+1,w
   484     004E  1D03               	skipz
   485     004F  2852               	goto	u16_25
   486     0050  300C               	movlw	12
   487     0051  023C               	subwf	_index,w
   488     0052                     u16_25:
   489     0052  1C03               	skipc
   490     0053  2855               	goto	u16_21
   491     0054  2856               	goto	u16_20
   492     0055                     u16_21:
   493     0055  28DD               	goto	i1l44
   494     0056                     u16_20:
   495     0056                     i1l698:
   496                           
   497                           ;main.c: 50:             outputValue = 0;
   498     0056  1283               	bcf	3,5	;RP0=0, select bank0
   499     0057  1303               	bcf	3,6	;RP1=0, select bank0
   500     0058  01BA               	clrf	_outputValue
   501     0059  01BB               	clrf	_outputValue+1
   502                           
   503                           ;main.c: 51:             for (int i = 0; i < 12; i++) {
   504     005A  01FC               	clrf	isr@i
   505     005B  01FD               	clrf	isr@i+1
   506     005C                     i1l704:
   507                           
   508                           ;main.c: 52:                 outputValue |= (pinPad[i] << i);
   509     005C  0A7C               	incf	isr@i,w
   510     005D  00FF               	movwf	btemp+1
   511     005E  087C               	movf	isr@i,w
   512     005F  00F3               	movwf	??_isr
   513     0060  0773               	addwf	??_isr,w
   514     0061  3E20               	addlw	(low (_pinPad| 0))& (0+255)
   515     0062  0084               	movwf	4
   516     0063  1383               	bcf	3,7	;select IRP bank0
   517     0064  0800               	movf	0,w
   518     0065  00F4               	movwf	??_isr+1
   519     0066  0A84               	incf	4,f
   520     0067  0800               	movf	0,w
   521     0068  00F5               	movwf	??_isr+2
   522     0069  286D               	goto	u17_24
   523     006A                     u17_25:
   524     006A  1003               	clrc
   525     006B  0DF4               	rlf	??_isr+1,f
   526     006C  0DF5               	rlf	??_isr+2,f
   527     006D                     u17_24:
   528     006D  0BFF               	decfsz	btemp+1,f
   529     006E  286A               	goto	u17_25
   530     006F  0874               	movf	??_isr+1,w
   531     0070  1283               	bcf	3,5	;RP0=0, select bank0
   532     0071  1303               	bcf	3,6	;RP1=0, select bank0
   533     0072  04BA               	iorwf	_outputValue,f
   534     0073  0875               	movf	??_isr+2,w
   535     0074  04BB               	iorwf	_outputValue+1,f
   536     0075                     i1l706:
   537                           
   538                           ;main.c: 53:             }
   539     0075  3001               	movlw	1
   540     0076  07FC               	addwf	isr@i,f
   541     0077  1803               	skipnc
   542     0078  0AFD               	incf	isr@i+1,f
   543     0079  3000               	movlw	0
   544     007A  07FD               	addwf	isr@i+1,f
   545     007B                     i1l708:
   546     007B  087D               	movf	isr@i+1,w
   547     007C  3A80               	xorlw	128
   548     007D  00FF               	movwf	btemp+1
   549     007E  3080               	movlw	128
   550     007F  027F               	subwf	btemp+1,w
   551     0080  1D03               	skipz
   552     0081  2884               	goto	u18_25
   553     0082  300C               	movlw	12
   554     0083  027C               	subwf	isr@i,w
   555     0084                     u18_25:
   556     0084  1C03               	skipc
   557     0085  2887               	goto	u18_21
   558     0086  2888               	goto	u18_20
   559     0087                     u18_21:
   560     0087  285C               	goto	i1l704
   561     0088                     u18_20:
   562     0088                     i1l710:
   563                           
   564                           ;main.c: 54:             for (int i = 0; i < 12; i++) {
   565     0088  01FA               	clrf	isr@i_168
   566     0089  01FB               	clrf	isr@i_168+1
   567     008A                     i1l716:
   568                           
   569                           ;main.c: 55:                 if(pinPad[i] == 1)
   570     008A  087A               	movf	isr@i_168,w
   571     008B  00F3               	movwf	??_isr
   572     008C  0773               	addwf	??_isr,w
   573     008D  3E20               	addlw	(low (_pinPad| 0))& (0+255)
   574     008E  0084               	movwf	4
   575     008F  1383               	bcf	3,7	;select IRP bank0
   576     0090  0800               	movf	0,w
   577     0091  00F4               	movwf	??_isr+1
   578     0092  0A84               	incf	4,f
   579     0093  0800               	movf	0,w
   580     0094  00F5               	movwf	??_isr+2
   581     0095  0374               	decf	??_isr+1,w
   582     0096  0475               	iorwf	??_isr+2,w
   583     0097  1D03               	btfss	3,2
   584     0098  289A               	goto	u19_21
   585     0099  289B               	goto	u19_20
   586     009A                     u19_21:
   587     009A  28C6               	goto	i1l43
   588     009B                     u19_20:
   589     009B                     i1l718:
   590                           
   591                           ;main.c: 56:                 {;main.c: 57:                     PORTBbits.RB0 = !PORTBbit
      +                          s.RB0;
   592     009B  1003               	clrc
   593     009C  1283               	bcf	3,5	;RP0=0, select bank0
   594     009D  1303               	bcf	3,6	;RP1=0, select bank0
   595     009E  1C06               	btfss	6,0	;volatile
   596     009F  1403               	setc
   597     00A0  1803               	btfsc	3,0
   598     00A1  28A3               	goto	u20_21
   599     00A2  28A7               	goto	u20_20
   600     00A3                     u20_21:
   601     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   602     00A4  1303               	bcf	3,6	;RP1=0, select bank0
   603     00A5  1406               	bsf	6,0	;volatile
   604     00A6  28AA               	goto	u21_24
   605     00A7                     u20_20:
   606     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   607     00A8  1303               	bcf	3,6	;RP1=0, select bank0
   608     00A9  1006               	bcf	6,0	;volatile
   609     00AA                     u21_24:
   610     00AA                     i1l720:
   611                           
   612                           ;main.c: 58:                     _delay((unsigned long)((300)*(20000000/4000.0)));
   613     00AA  3008               	movlw	8
   614     00AB  00F5               	movwf	??_isr+2
   615     00AC  309D               	movlw	157
   616     00AD  00F4               	movwf	??_isr+1
   617     00AE  3005               	movlw	5
   618     00AF  00F3               	movwf	??_isr
   619     00B0                     u25_27:
   620     00B0  0BF3               	decfsz	??_isr,f
   621     00B1  28B0               	goto	u25_27
   622     00B2  0BF4               	decfsz	??_isr+1,f
   623     00B3  28B0               	goto	u25_27
   624     00B4  0BF5               	decfsz	??_isr+2,f
   625     00B5  28B0               	goto	u25_27
   626     00B6  28B7               	nop2
   627     00B7                     i1l722:
   628                           
   629                           ;main.c: 59:                     PORTBbits.RB0 = !PORTBbits.RB0;
   630     00B7  1003               	clrc
   631     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   632     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   633     00BA  1C06               	btfss	6,0	;volatile
   634     00BB  1403               	setc
   635     00BC  1803               	btfsc	3,0
   636     00BD  28BF               	goto	u22_21
   637     00BE  28C3               	goto	u22_20
   638     00BF                     u22_21:
   639     00BF  1283               	bcf	3,5	;RP0=0, select bank0
   640     00C0  1303               	bcf	3,6	;RP1=0, select bank0
   641     00C1  1406               	bsf	6,0	;volatile
   642     00C2  28C6               	goto	u23_24
   643     00C3                     u22_20:
   644     00C3  1283               	bcf	3,5	;RP0=0, select bank0
   645     00C4  1303               	bcf	3,6	;RP1=0, select bank0
   646     00C5  1006               	bcf	6,0	;volatile
   647     00C6                     u23_24:
   648     00C6                     i1l43:	
   649                           ;main.c: 60:                 }
   650                           
   651                           
   652                           ;main.c: 62:             }
   653     00C6  3001               	movlw	1
   654     00C7  07FA               	addwf	isr@i_168,f
   655     00C8  1803               	skipnc
   656     00C9  0AFB               	incf	isr@i_168+1,f
   657     00CA  3000               	movlw	0
   658     00CB  07FB               	addwf	isr@i_168+1,f
   659     00CC                     i1l724:
   660     00CC  087B               	movf	isr@i_168+1,w
   661     00CD  3A80               	xorlw	128
   662     00CE  00FF               	movwf	btemp+1
   663     00CF  3080               	movlw	128
   664     00D0  027F               	subwf	btemp+1,w
   665     00D1  1D03               	skipz
   666     00D2  28D5               	goto	u24_25
   667     00D3  300C               	movlw	12
   668     00D4  027A               	subwf	isr@i_168,w
   669     00D5                     u24_25:
   670     00D5  1C03               	skipc
   671     00D6  28D8               	goto	u24_21
   672     00D7  28D9               	goto	u24_20
   673     00D8                     u24_21:
   674     00D8  288A               	goto	i1l716
   675     00D9                     u24_20:
   676     00D9                     i1l726:
   677                           
   678                           ;main.c: 63:             index = 0;
   679     00D9  1283               	bcf	3,5	;RP0=0, select bank0
   680     00DA  1303               	bcf	3,6	;RP1=0, select bank0
   681     00DB  01BC               	clrf	_index
   682     00DC  01BD               	clrf	_index+1
   683     00DD                     i1l44:
   684     00DD  0879               	movf	??_isr+6,w
   685     00DE  00FF               	movwf	btemp+1
   686     00DF  0878               	movf	??_isr+5,w
   687     00E0  008A               	movwf	10
   688     00E1  0877               	movf	??_isr+4,w
   689     00E2  0084               	movwf	4
   690     00E3  0E76               	swapf	??_isr+3,w
   691     00E4  0083               	movwf	3
   692     00E5  0EFE               	swapf	btemp,f
   693     00E6  0E7E               	swapf	btemp,w
   694     00E7  0009               	retfie
   695     00E8                     __end_of_isr:
   696                           
   697                           	psect	intentry
   698     0004                     __pintentry:	
   699                           ;incstack = 0
   700                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   701                           
   702     0004                     interrupt_function:
   703     007E                     saved_w         set	btemp
   704     0004  00FE               	movwf	btemp
   705     0005  0E03               	swapf	3,w
   706     0006  00F6               	movwf	??_isr+3
   707     0007  0804               	movf	4,w
   708     0008  00F7               	movwf	??_isr+4
   709     0009  080A               	movf	10,w
   710     000A  00F8               	movwf	??_isr+5
   711     000B  087F               	movf	btemp+1,w
   712     000C  00F9               	movwf	??_isr+6
   713     000D  118A  281B         	ljmp	_isr
   714                           
   715                           	psect	text3
   716     00E8                     __ptext3:	
   717 ;; *************** function _beep *****************
   718 ;; Defined at:
   719 ;;		line 30 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   733 ;;      Params:         0       0       0       0
   734 ;;      Locals:         0       0       0       0
   735 ;;      Temps:          3       0       0       0
   736 ;;      Totals:         3       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_isr
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746     00E8                     _beep:	
   747                           ;psect for function _beep
   748                           
   749     00E8                     i1l674:	
   750                           ;incstack = 0
   751                           ; Regs used in _beep: [wreg]
   752                           
   753                           
   754                           ;main.c: 31:     PORTBbits.RB1 = 1;
   755     00E8  1283               	bcf	3,5	;RP0=0, select bank0
   756     00E9  1303               	bcf	3,6	;RP1=0, select bank0
   757     00EA  1486               	bsf	6,1	;volatile
   758     00EB                     i1l676:
   759                           
   760                           ;main.c: 32:     _delay((unsigned long)((100)*(20000000/4000.0)));
   761     00EB  3003               	movlw	3
   762     00EC  00F2               	movwf	??_beep+2
   763     00ED  308A               	movlw	138
   764     00EE  00F1               	movwf	??_beep+1
   765     00EF  3055               	movlw	85
   766     00F0  00F0               	movwf	??_beep
   767     00F1                     u26_27:
   768     00F1  0BF0               	decfsz	??_beep,f
   769     00F2  28F1               	goto	u26_27
   770     00F3  0BF1               	decfsz	??_beep+1,f
   771     00F4  28F1               	goto	u26_27
   772     00F5  0BF2               	decfsz	??_beep+2,f
   773     00F6  28F1               	goto	u26_27
   774     00F7  28F8               	nop2
   775     00F8                     i1l678:
   776                           
   777                           ;main.c: 33:     PORTBbits.RB1 = 0;
   778     00F8  1283               	bcf	3,5	;RP0=0, select bank0
   779     00F9  1303               	bcf	3,6	;RP1=0, select bank0
   780     00FA  1086               	bcf	6,1	;volatile
   781                           
   782                           ;main.c: 34:     _delay((unsigned long)((100)*(20000000/4000.0)));
   783     00FB  3003               	movlw	3
   784     00FC  00F2               	movwf	??_beep+2
   785     00FD  308A               	movlw	138
   786     00FE  00F1               	movwf	??_beep+1
   787     00FF  3055               	movlw	85
   788     0100  00F0               	movwf	??_beep
   789     0101                     u27_27:
   790     0101  0BF0               	decfsz	??_beep,f
   791     0102  2901               	goto	u27_27
   792     0103  0BF1               	decfsz	??_beep+1,f
   793     0104  2901               	goto	u27_27
   794     0105  0BF2               	decfsz	??_beep+2,f
   795     0106  2901               	goto	u27_27
   796     0107  2908               	nop2
   797     0108                     i1l31:
   798     0108  0008               	return
   799     0109                     __end_of_beep:
   800     0001                     ___latbits      equ	1
   801     007E                     btemp           set	126	;btemp
   802     007E                     wtemp0          set	126
   803                           
   804                           	psect	config
   805                           
   806                           ;Config register CONFIG @ 0x2007
   807                           ;	Oscillator Selection bits
   808                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   809                           ;	Watchdog Timer Enable bit
   810                           ;	WDTE = OFF, WDT disabled
   811                           ;	Power-up Timer Enable bit
   812                           ;	PWRTE = ON, PWRT enabled
   813                           ;	RA5/MCLR/VPP Pin Function Select bit
   814                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   815                           ;	Brown-out Detect Enable bit
   816                           ;	BOREN = OFF, BOD disabled
   817                           ;	Low-Voltage Programming Enable bit
   818                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   819                           ;	Data EE Memory Code Protection bit
   820                           ;	CPD = OFF, Data memory code protection off
   821                           ;	Flash Program Memory Code Protection bit
   822                           ;	CP = OFF, Code protection off
   823     2007                     	org	8199
   824     2007  3F22               	dw	16162

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      30
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_beep

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _initialize_pins
 ---------------------------------------------------------------------------------
 (1) _initialize_pins                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 11    11      0     158
                                              3 COMMON    11    11      0
                               _beep
 ---------------------------------------------------------------------------------
 (3) _beep                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_pins

 _isr (ROOT)
   _beep

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      0      30     37.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      44      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Nov 27 06:54:23 2024

                     l50 011A                       l57 0121                       l58 0121  
                     fsr 0004                      l730 011E                      l680 0109  
                    l728 011B                      _isr 001B                      fsr0 0004  
                    indf 0000                     ?_isr 0070                     i1l31 0108  
                   i1l43 00C6                     i1l44 00DD                     _TMR1 000E  
            _outputValue 003A                     _beep 00E8                     _main 011B  
                   _open 0038                     btemp 007E                     isr@i 007C  
                   start 000F                    ??_isr 0073                    ?_beep 0070  
                  ?_main 0070                    _CMCON 001F                    i1l710 0088  
                  i1l720 00AA                    i1l704 005C                    i1l722 00B7  
                  i1l706 0075                    i1l724 00CC                    i1l716 008A  
                  i1l708 007B                    i1l726 00D9                    i1l718 009B  
                  i1l674 00E8                    i1l690 0032                    i1l682 001B  
                  i1l676 00EB                    i1l692 0034                    i1l684 0021  
                  i1l678 00F8                    i1l694 0043                    i1l686 002C  
                  i1l696 0049                    i1l688 002F                    i1l698 0056  
                  u20_20 00A7                    u20_21 00A3                    u13_20 0021  
                  u13_21 0020                    u21_24 00AA                    u22_20 00C3  
                  u14_20 0028                    u22_21 00BF                    u14_21 0024  
                  u23_24 00C6                    u15_24 002B                    u24_20 00D9  
                  u16_20 0056                    u24_21 00D8                    u16_21 0055  
                  u24_25 00D5                    u16_25 0052                    _TMR1H 000F  
                  u17_24 006D                    u17_25 006A                    _TMR1L 000E  
                  u25_27 00B0                    u18_20 0088                    u18_21 0087  
                  u18_25 0084                    u26_27 00F1                    u19_20 009B  
                  u19_21 009A                    u27_27 0101        ??_initialize_pins 0000  
                  _index 003C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_beep 0109  
           __end_of_main 0124                   ??_beep 0070                   ??_main 0000  
                 _TMR1IF 0060                   _pinPad 0020                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0070               __pbssBANK0 0020  
             __pmaintext 011B               __pintentry 0004          _initialize_pins 0109  
                __ptext1 0109                  __ptext2 001B                  __ptext3 00E8  
              _T1CONbits 0010                  clrloop0 0125     end_of_initialization 0018  
__end_of_initialize_pins 011B                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 0011  
            __end_of_isr 00E8         ?_initialize_pins 0070                ___latbits 0001  
          __pcstackBANK0 0000        interrupt_function 0004                clear_ram0 0124  
               isr@i_168 007A                 intlevel1 0000  
