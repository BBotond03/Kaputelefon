

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 25 05:24:08 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F648A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     000A                     PCLATH          equ	10	;# 
    62     000B                     INTCON          equ	11	;# 
    63     000C                     PIR1            equ	12	;# 
    64     000E                     TMR1            equ	14	;# 
    65     000E                     TMR1L           equ	14	;# 
    66     000F                     TMR1H           equ	15	;# 
    67     0010                     T1CON           equ	16	;# 
    68     0011                     TMR2            equ	17	;# 
    69     0012                     T2CON           equ	18	;# 
    70     0015                     CCPR1           equ	21	;# 
    71     0015                     CCPR1L          equ	21	;# 
    72     0016                     CCPR1H          equ	22	;# 
    73     0017                     CCP1CON         equ	23	;# 
    74     0018                     RCSTA           equ	24	;# 
    75     0019                     TXREG           equ	25	;# 
    76     001A                     RCREG           equ	26	;# 
    77     001F                     CMCON           equ	31	;# 
    78     0081                     OPTION_REG      equ	129	;# 
    79     0085                     TRISA           equ	133	;# 
    80     0086                     TRISB           equ	134	;# 
    81     008C                     PIE1            equ	140	;# 
    82     008E                     PCON            equ	142	;# 
    83     0092                     PR2             equ	146	;# 
    84     0098                     TXSTA           equ	152	;# 
    85     0099                     SPBRG           equ	153	;# 
    86     009A                     EEDATA          equ	154	;# 
    87     009B                     EEADR           equ	155	;# 
    88     009C                     EECON1          equ	156	;# 
    89     009D                     EECON2          equ	157	;# 
    90     009F                     VRCON           equ	159	;# 
    91     0000                     INDF            equ	0	;# 
    92     0001                     TMR0            equ	1	;# 
    93     0002                     PCL             equ	2	;# 
    94     0003                     STATUS          equ	3	;# 
    95     0004                     FSR             equ	4	;# 
    96     0005                     PORTA           equ	5	;# 
    97     0006                     PORTB           equ	6	;# 
    98     000A                     PCLATH          equ	10	;# 
    99     000B                     INTCON          equ	11	;# 
   100     000C                     PIR1            equ	12	;# 
   101     000E                     TMR1            equ	14	;# 
   102     000E                     TMR1L           equ	14	;# 
   103     000F                     TMR1H           equ	15	;# 
   104     0010                     T1CON           equ	16	;# 
   105     0011                     TMR2            equ	17	;# 
   106     0012                     T2CON           equ	18	;# 
   107     0015                     CCPR1           equ	21	;# 
   108     0015                     CCPR1L          equ	21	;# 
   109     0016                     CCPR1H          equ	22	;# 
   110     0017                     CCP1CON         equ	23	;# 
   111     0018                     RCSTA           equ	24	;# 
   112     0019                     TXREG           equ	25	;# 
   113     001A                     RCREG           equ	26	;# 
   114     001F                     CMCON           equ	31	;# 
   115     0081                     OPTION_REG      equ	129	;# 
   116     0085                     TRISA           equ	133	;# 
   117     0086                     TRISB           equ	134	;# 
   118     008C                     PIE1            equ	140	;# 
   119     008E                     PCON            equ	142	;# 
   120     0092                     PR2             equ	146	;# 
   121     0098                     TXSTA           equ	152	;# 
   122     0099                     SPBRG           equ	153	;# 
   123     009A                     EEDATA          equ	154	;# 
   124     009B                     EEADR           equ	155	;# 
   125     009C                     EECON1          equ	156	;# 
   126     009D                     EECON2          equ	157	;# 
   127     009F                     VRCON           equ	159	;# 
   128     0005                     _PORTAbits      set	5
   129     0006                     _PORTBbits      set	6
   130     0085                     _TRISAbits      set	133
   131     0086                     _TRISBbits      set	134
   132                           
   133                           	psect	cinit
   134     07FB                     start_initialization:	
   135                           ; #config settings
   136                           
   137     07FB                     __initialization:
   138                           
   139                           ; Clear objects allocated to COMMON
   140     07FB  01F3               	clrf	__pbssCOMMON& (0+127)
   141     07FC  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   142     07FD                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145     07FD                     __end_of__initialization:
   146     07FD  0183               	clrf	3
   147     07FE  118A  2FB2         	ljmp	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMMON
   150     0073                     __pbssCOMMON:
   151     0073                     _open:
   152     0073                     	ds	2
   153                           
   154                           	psect	cstackCOMMON
   155     0070                     __pcstackCOMMON:
   156     0070                     ?_initialize_pins:
   157     0070                     ?_main:	
   158                           ; 1 bytes @ 0x0
   159                           
   160     0070                     ??_initialize_pins:	
   161                           ; 1 bytes @ 0x0
   162                           
   163     0070                     ??_main:	
   164                           ; 1 bytes @ 0x0
   165                           
   166                           
   167                           ; 1 bytes @ 0x0
   168     0070                     	ds	3
   169                           
   170                           	psect	maintext
   171     07B2                     __pmaintext:	
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 46 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2, status,0, pclath, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : B00/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   191 ;;      Params:         0       0       0       0
   192 ;;      Locals:         0       0       0       0
   193 ;;      Temps:          3       0       0       0
   194 ;;      Totals:         3       0       0       0
   195 ;;Total ram usage:        3 bytes
   196 ;; Hardware stack levels required when called: 1
   197 ;; This function calls:
   198 ;;		_initialize_pins
   199 ;; This function is called by:
   200 ;;		Startup code after reset
   201 ;; This function uses a non-reentrant model
   202 ;;
   203                           
   204     07B2                     _main:	
   205                           ;psect for function _main
   206                           
   207     07B2                     l571:	
   208                           ;incstack = 0
   209                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   210                           
   211                           
   212                           ;main.c: 47:     initialize_pins();
   213     07B2  118A  27A8  118A   	fcall	_initialize_pins
   214     07B5                     l573:
   215                           
   216                           ;main.c: 48:     PORTBbits.RB0 = 0;
   217     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   218     07B6  1303               	bcf	3,6	;RP1=0, select bank0
   219     07B7  1006               	bcf	6,0	;volatile
   220     07B8                     l575:
   221                           
   222                           ;main.c: 51:         if (PORTAbits.RA2 == 1) {
   223     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   224     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   225     07BA  1D05               	btfss	5,2	;volatile
   226     07BB  2FBD               	goto	u11
   227     07BC  2FBE               	goto	u10
   228     07BD                     u11:
   229     07BD  2FCB               	goto	l579
   230     07BE                     u10:
   231     07BE                     l577:
   232                           
   233                           ;main.c: 52:         _delay((unsigned long)((50)*(20000000/4000.0)));
   234     07BE  3002               	movlw	2
   235     07BF  00F2               	movwf	??_main+2
   236     07C0  3045               	movlw	69
   237     07C1  00F1               	movwf	??_main+1
   238     07C2  30A9               	movlw	169
   239     07C3  00F0               	movwf	??_main
   240     07C4                     u57:
   241     07C4  0BF0               	decfsz	??_main,f
   242     07C5  2FC4               	goto	u57
   243     07C6  0BF1               	decfsz	??_main+1,f
   244     07C7  2FC4               	goto	u57
   245     07C8  0BF2               	decfsz	??_main+2,f
   246     07C9  2FC4               	goto	u57
   247     07CA  2FCB               	nop2
   248     07CB                     l579:
   249                           
   250                           ;main.c: 54:         if (PORTAbits.RA2 == 0) {
   251     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   252     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   253     07CD  1905               	btfsc	5,2	;volatile
   254     07CE  2FD0               	goto	u21
   255     07CF  2FD1               	goto	u20
   256     07D0                     u21:
   257     07D0  2FEB               	goto	l585
   258     07D1                     u20:
   259     07D1                     l581:
   260                           
   261                           ;main.c: 55:             PORTBbits.RB0 = !PORTBbits.RB0;
   262     07D1  1003               	clrc
   263     07D2  1C06               	btfss	6,0	;volatile
   264     07D3  1403               	setc
   265     07D4  1803               	btfsc	3,0
   266     07D5  2FD7               	goto	u31
   267     07D6  2FDB               	goto	u30
   268     07D7                     u31:
   269     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   270     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   271     07D9  1406               	bsf	6,0	;volatile
   272     07DA  2FDE               	goto	u44
   273     07DB                     u30:
   274     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   275     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   276     07DD  1006               	bcf	6,0	;volatile
   277     07DE                     u44:
   278     07DE                     l583:
   279                           
   280                           ;main.c: 56:             _delay((unsigned long)((50)*(20000000/4000.0)));
   281     07DE  3002               	movlw	2
   282     07DF  00F2               	movwf	??_main+2
   283     07E0  3045               	movlw	69
   284     07E1  00F1               	movwf	??_main+1
   285     07E2  30A9               	movlw	169
   286     07E3  00F0               	movwf	??_main
   287     07E4                     u67:
   288     07E4  0BF0               	decfsz	??_main,f
   289     07E5  2FE4               	goto	u67
   290     07E6  0BF1               	decfsz	??_main+1,f
   291     07E7  2FE4               	goto	u67
   292     07E8  0BF2               	decfsz	??_main+2,f
   293     07E9  2FE4               	goto	u67
   294     07EA  2FEB               	nop2
   295     07EB                     l585:
   296                           
   297                           ;main.c: 58:         _delay((unsigned long)((50)*(20000000/4000.0)));
   298     07EB  3002               	movlw	2
   299     07EC  00F2               	movwf	??_main+2
   300     07ED  3045               	movlw	69
   301     07EE  00F1               	movwf	??_main+1
   302     07EF  30A9               	movlw	169
   303     07F0  00F0               	movwf	??_main
   304     07F1                     u77:
   305     07F1  0BF0               	decfsz	??_main,f
   306     07F2  2FF1               	goto	u77
   307     07F3  0BF1               	decfsz	??_main+1,f
   308     07F4  2FF1               	goto	u77
   309     07F5  0BF2               	decfsz	??_main+2,f
   310     07F6  2FF1               	goto	u77
   311     07F7  2FF8               	nop2
   312     07F8  2FB8               	goto	l575
   313     07F9  118A  2800         	ljmp	start
   314     07FB                     __end_of_main:
   315                           
   316                           	psect	text1
   317     07A8                     __ptext1:	
   318 ;; *************** function _initialize_pins *****************
   319 ;; Defined at:
   320 ;;		line 25 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		None
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   334 ;;      Params:         0       0       0       0
   335 ;;      Locals:         0       0       0       0
   336 ;;      Temps:          0       0       0       0
   337 ;;      Totals:         0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used: 1
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347     07A8                     _initialize_pins:	
   348                           ;psect for function _initialize_pins
   349                           
   350     07A8                     l569:	
   351                           ;incstack = 0
   352                           ; Regs used in _initialize_pins: []
   353                           
   354                           
   355                           ;main.c: 26:     TRISBbits.TRISB0 = 0;
   356     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   357     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   358     07AA  1006               	bcf	6,0	;volatile
   359                           
   360                           ;main.c: 27:     TRISAbits.TRISA3 = 1;
   361     07AB  1585               	bsf	5,3	;volatile
   362                           
   363                           ;main.c: 28:     TRISBbits.TRISB2 = 1;
   364     07AC  1506               	bsf	6,2	;volatile
   365                           
   366                           ;main.c: 29:     TRISBbits.TRISB1 = 0;
   367     07AD  1086               	bcf	6,1	;volatile
   368                           
   369                           ;main.c: 30:     TRISAbits.TRISA0 = 0;
   370     07AE  1005               	bcf	5,0	;volatile
   371                           
   372                           ;main.c: 31:     TRISAbits.TRISA1 = 1;
   373     07AF  1485               	bsf	5,1	;volatile
   374                           
   375                           ;main.c: 32:     TRISAbits.TRISA2 = 1;
   376     07B0  1505               	bsf	5,2	;volatile
   377     07B1                     l13:
   378     07B1  0008               	return
   379     07B2                     __end_of_initialize_pins:
   380     0001                     ___latbits      equ	1
   381     007E                     btemp           set	126	;btemp
   382     007E                     wtemp0          set	126
   383                           
   384                           	psect	config
   385                           
   386                           ;Config register CONFIG @ 0x2007
   387                           ;	Oscillator Selection bits
   388                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   389                           ;	Watchdog Timer Enable bit
   390                           ;	WDTE = OFF, WDT disabled
   391                           ;	Power-up Timer Enable bit
   392                           ;	PWRTE = ON, PWRT enabled
   393                           ;	RA5/MCLR/VPP Pin Function Select bit
   394                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   395                           ;	Brown-out Detect Enable bit
   396                           ;	BOREN = OFF, BOD disabled
   397                           ;	Low-Voltage Programming Enable bit
   398                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   399                           ;	Data EE Memory Code Protection bit
   400                           ;	CPD = OFF, Data memory code protection off
   401                           ;	Flash Program Memory Code Protection bit
   402                           ;	CP = OFF, Code protection off
   403     2007                     	org	8199
   404     2007  3F22               	dw	16162

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
                    _initialize_pins
 ---------------------------------------------------------------------------------
 (1) _initialize_pins                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_pins

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
COMMON              14      3       5     35.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 25 05:24:08 2024

                     l13 07B1                       u10 07BE                       u11 07BD  
                     u20 07D1                       u21 07D0                       u30 07DB  
                     u31 07D7                       u44 07DE                       u57 07C4  
                     u67 07E4                       u77 07F1                      l571 07B2  
                    l581 07D1                      l573 07B5                      l583 07DE  
                    l575 07B8                      l569 07A8                      l585 07EB  
                    l577 07BE                      l579 07CB                     _main 07B2  
                   _open 0073                     btemp 007E                     start 0000  
                  ?_main 0070        ??_initialize_pins 0070                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 07FB  
                 ??_main 0070  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 07B2          _initialize_pins 07A8                  __ptext1 07A8  
   end_of_initialization 07FD  __end_of_initialize_pins 07B2                _PORTAbits 0005  
              _PORTBbits 0006                _TRISAbits 0085                _TRISBbits 0086  
    start_initialization 07FB         ?_initialize_pins 0070              __pbssCOMMON 0073  
              ___latbits 0001  
